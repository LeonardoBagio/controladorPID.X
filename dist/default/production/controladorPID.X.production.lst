

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jun 23 21:21:44 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    45                           	dabs	1,0x7E,2
    46  0000                     
    47                           ; Version 2.20
    48                           ; Generated 12/02/2020 GMT
    49                           ; 
    50                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F877A Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0008                     	;# 
    90  0009                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000D                     	;# 
    95  000E                     	;# 
    96  000E                     	;# 
    97  000F                     	;# 
    98  0010                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0013                     	;# 
   102  0014                     	;# 
   103  0015                     	;# 
   104  0015                     	;# 
   105  0016                     	;# 
   106  0017                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001B                     	;# 
   111  001B                     	;# 
   112  001C                     	;# 
   113  001D                     	;# 
   114  001E                     	;# 
   115  001F                     	;# 
   116  0081                     	;# 
   117  0085                     	;# 
   118  0086                     	;# 
   119  0087                     	;# 
   120  0088                     	;# 
   121  0089                     	;# 
   122  008C                     	;# 
   123  008D                     	;# 
   124  008E                     	;# 
   125  0091                     	;# 
   126  0092                     	;# 
   127  0093                     	;# 
   128  0094                     	;# 
   129  0098                     	;# 
   130  0099                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0008                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000D                     	;# 
   155  000E                     	;# 
   156  000E                     	;# 
   157  000F                     	;# 
   158  0010                     	;# 
   159  0011                     	;# 
   160  0012                     	;# 
   161  0013                     	;# 
   162  0014                     	;# 
   163  0015                     	;# 
   164  0015                     	;# 
   165  0016                     	;# 
   166  0017                     	;# 
   167  0018                     	;# 
   168  0019                     	;# 
   169  001A                     	;# 
   170  001B                     	;# 
   171  001B                     	;# 
   172  001C                     	;# 
   173  001D                     	;# 
   174  001E                     	;# 
   175  001F                     	;# 
   176  0081                     	;# 
   177  0085                     	;# 
   178  0086                     	;# 
   179  0087                     	;# 
   180  0088                     	;# 
   181  0089                     	;# 
   182  008C                     	;# 
   183  008D                     	;# 
   184  008E                     	;# 
   185  0091                     	;# 
   186  0092                     	;# 
   187  0093                     	;# 
   188  0094                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  018C                     	;# 
   200  018D                     	;# 
   201  0000                     	;# 
   202  0001                     	;# 
   203  0002                     	;# 
   204  0003                     	;# 
   205  0004                     	;# 
   206  0005                     	;# 
   207  0006                     	;# 
   208  0007                     	;# 
   209  0008                     	;# 
   210  0009                     	;# 
   211  000A                     	;# 
   212  000B                     	;# 
   213  000C                     	;# 
   214  000D                     	;# 
   215  000E                     	;# 
   216  000E                     	;# 
   217  000F                     	;# 
   218  0010                     	;# 
   219  0011                     	;# 
   220  0012                     	;# 
   221  0013                     	;# 
   222  0014                     	;# 
   223  0015                     	;# 
   224  0015                     	;# 
   225  0016                     	;# 
   226  0017                     	;# 
   227  0018                     	;# 
   228  0019                     	;# 
   229  001A                     	;# 
   230  001B                     	;# 
   231  001B                     	;# 
   232  001C                     	;# 
   233  001D                     	;# 
   234  001E                     	;# 
   235  001F                     	;# 
   236  0081                     	;# 
   237  0085                     	;# 
   238  0086                     	;# 
   239  0087                     	;# 
   240  0088                     	;# 
   241  0089                     	;# 
   242  008C                     	;# 
   243  008D                     	;# 
   244  008E                     	;# 
   245  0091                     	;# 
   246  0092                     	;# 
   247  0093                     	;# 
   248  0094                     	;# 
   249  0098                     	;# 
   250  0099                     	;# 
   251  009C                     	;# 
   252  009D                     	;# 
   253  009E                     	;# 
   254  009F                     	;# 
   255  010C                     	;# 
   256  010D                     	;# 
   257  010E                     	;# 
   258  010F                     	;# 
   259  018C                     	;# 
   260  018D                     	;# 
   261  0000                     	;# 
   262  0001                     	;# 
   263  0002                     	;# 
   264  0003                     	;# 
   265  0004                     	;# 
   266  0005                     	;# 
   267  0006                     	;# 
   268  0007                     	;# 
   269  0008                     	;# 
   270  0009                     	;# 
   271  000A                     	;# 
   272  000B                     	;# 
   273  000C                     	;# 
   274  000D                     	;# 
   275  000E                     	;# 
   276  000E                     	;# 
   277  000F                     	;# 
   278  0010                     	;# 
   279  0011                     	;# 
   280  0012                     	;# 
   281  0013                     	;# 
   282  0014                     	;# 
   283  0015                     	;# 
   284  0015                     	;# 
   285  0016                     	;# 
   286  0017                     	;# 
   287  0018                     	;# 
   288  0019                     	;# 
   289  001A                     	;# 
   290  001B                     	;# 
   291  001B                     	;# 
   292  001C                     	;# 
   293  001D                     	;# 
   294  001E                     	;# 
   295  001F                     	;# 
   296  0081                     	;# 
   297  0085                     	;# 
   298  0086                     	;# 
   299  0087                     	;# 
   300  0088                     	;# 
   301  0089                     	;# 
   302  008C                     	;# 
   303  008D                     	;# 
   304  008E                     	;# 
   305  0091                     	;# 
   306  0092                     	;# 
   307  0093                     	;# 
   308  0094                     	;# 
   309  0098                     	;# 
   310  0099                     	;# 
   311  009C                     	;# 
   312  009D                     	;# 
   313  009E                     	;# 
   314  009F                     	;# 
   315  010C                     	;# 
   316  010D                     	;# 
   317  010E                     	;# 
   318  010F                     	;# 
   319  018C                     	;# 
   320  018D                     	;# 
   321  0000                     	;# 
   322  0001                     	;# 
   323  0002                     	;# 
   324  0003                     	;# 
   325  0004                     	;# 
   326  0005                     	;# 
   327  0006                     	;# 
   328  0007                     	;# 
   329  0008                     	;# 
   330  0009                     	;# 
   331  000A                     	;# 
   332  000B                     	;# 
   333  000C                     	;# 
   334  000D                     	;# 
   335  000E                     	;# 
   336  000E                     	;# 
   337  000F                     	;# 
   338  0010                     	;# 
   339  0011                     	;# 
   340  0012                     	;# 
   341  0013                     	;# 
   342  0014                     	;# 
   343  0015                     	;# 
   344  0015                     	;# 
   345  0016                     	;# 
   346  0017                     	;# 
   347  0018                     	;# 
   348  0019                     	;# 
   349  001A                     	;# 
   350  001B                     	;# 
   351  001B                     	;# 
   352  001C                     	;# 
   353  001D                     	;# 
   354  001E                     	;# 
   355  001F                     	;# 
   356  0081                     	;# 
   357  0085                     	;# 
   358  0086                     	;# 
   359  0087                     	;# 
   360  0088                     	;# 
   361  0089                     	;# 
   362  008C                     	;# 
   363  008D                     	;# 
   364  008E                     	;# 
   365  0091                     	;# 
   366  0092                     	;# 
   367  0093                     	;# 
   368  0094                     	;# 
   369  0098                     	;# 
   370  0099                     	;# 
   371  009C                     	;# 
   372  009D                     	;# 
   373  009E                     	;# 
   374  009F                     	;# 
   375  010C                     	;# 
   376  010D                     	;# 
   377  010E                     	;# 
   378  010F                     	;# 
   379  018C                     	;# 
   380  018D                     	;# 
   381                           
   382                           	psect	idataBANK1
   383  16C8                     __pidataBANK1:
   384                           
   385                           ;initializer for _ki
   386  16C8  3403               	retlw	3
   387  16C9  3400               	retlw	0
   388                           
   389                           ;initializer for _kp
   390  16CA  341E               	retlw	30
   391  16CB  3400               	retlw	0
   392                           
   393                           ;initializer for _setPoint
   394  16CC  347C               	retlw	124
   395  16CD  3415               	retlw	21
   396                           
   397                           	psect	strings
   398  0800                     __pstrings:
   399  0800                     stringtab:
   400  0800                     __stringtab:
   401                           
   402                           ;	String table - string pointers are 1 byte each
   403  0800  1BFF               	btfsc	btemp+1,7
   404  0801  280A               	ljmp	stringcode
   405  0802  1383               	bcf	3,7
   406  0803  187F               	btfsc	btemp+1,0
   407  0804  1783               	bsf	3,7
   408  0805  0800               	movf	0,w
   409  0806  0A84               	incf	4,f
   410  0807  1903               	skipnz
   411  0808  0AFF               	incf	btemp+1,f
   412  0809  0008               	return
   413  080A                     stringcode:
   414  080A                     stringdir:
   415  080A  3008               	movlw	high stringdir
   416  080B  008A               	movwf	10
   417  080C  0804               	movf	4,w
   418  080D  0A84               	incf	4,f
   419  080E  0782               	addwf	2,f
   420  080F                     __stringbase:
   421  080F  3400               	retlw	0
   422  0810                     __end_of__stringtab:
   423  0810                     _dpowers:
   424  0810  3401               	retlw	1
   425  0811  3400               	retlw	0
   426  0812  340A               	retlw	10
   427  0813  3400               	retlw	0
   428  0814  3464               	retlw	100
   429  0815  3400               	retlw	0
   430  0816  34E8               	retlw	232
   431  0817  3403               	retlw	3
   432  0818  3410               	retlw	16
   433  0819  3427               	retlw	39
   434  081A                     __end_of_dpowers:
   435  0009                     _PORTEbits	set	9
   436  0008                     _PORTD	set	8
   437  001E                     _ADRESH	set	30
   438  001F                     _ADCON0	set	31
   439  001B                     _CCPR2L	set	27
   440  0015                     _CCPR1L	set	21
   441  000B                     _INTCONbits	set	11
   442  0001                     _TMR0	set	1
   443  000B                     _INTCON	set	11
   444  00FA                     _GO_nDONE	set	250
   445  0091                     _T2CKPS1	set	145
   446  0090                     _T2CKPS0	set	144
   447  00EA                     _CCP2M2	set	234
   448  00EB                     _CCP2M3	set	235
   449  0092                     _TMR2ON	set	146
   450  00BA                     _CCP1M2	set	186
   451  00BB                     _CCP1M3	set	187
   452  00EC                     _CCP2Y	set	236
   453  00ED                     _CCP2X	set	237
   454  00BC                     _CCP1Y	set	188
   455  00BD                     _CCP1X	set	189
   456  0033                     _RB3	set	51
   457  0032                     _RB2	set	50
   458  0031                     _RB1	set	49
   459  0030                     _RB0	set	48
   460  009E                     _ADRESL	set	158
   461  009F                     _ADCON1	set	159
   462  0092                     _PR2	set	146
   463  0081                     _OPTION_REG	set	129
   464  0089                     _TRISE	set	137
   465  0088                     _TRISD	set	136
   466  0087                     _TRISC	set	135
   467  0086                     _TRISB	set	134
   468  0085                     _TRISA	set	133
   469  0439                     _TRISC1	set	1081
   470  043A                     _TRISC2	set	1082
   471  081A                     STR_11:
   472  081A  344B               	retlw	75	;'K'
   473  081B  3450               	retlw	80	;'P'
   474  081C  343A               	retlw	58	;':'
   475  081D  3420               	retlw	32	;' '
   476  081E  3420               	retlw	32	;' '
   477  081F  3420               	retlw	32	;' '
   478  0820  3420               	retlw	32	;' '
   479  0821  3420               	retlw	32	;' '
   480  0822  344B               	retlw	75	;'K'
   481  0823  3444               	retlw	68	;'D'
   482  0824  343A               	retlw	58	;':'
   483  0825  3400               	retlw	0
   484  0826                     STR_10:
   485  0826  3454               	retlw	84	;'T'
   486  0827  3450               	retlw	80	;'P'
   487  0828  343A               	retlw	58	;':'
   488  0829  3420               	retlw	32	;' '
   489  082A  3420               	retlw	32	;' '
   490  082B  3443               	retlw	67	;'C'
   491  082C  3420               	retlw	32	;' '
   492  082D  3420               	retlw	32	;' '
   493  082E  344B               	retlw	75	;'K'
   494  082F  3449               	retlw	73	;'I'
   495  0830  343A               	retlw	58	;':'
   496  0831  3400               	retlw	0
   497  0832                     STR_4:
   498  0832  3420               	retlw	32	;' '
   499  0833  3420               	retlw	32	;' '
   500  0834  3420               	retlw	32	;' '
   501  0835  3420               	retlw	32	;' '
   502  0836  3420               	retlw	32	;' '
   503  0837  3400               	retlw	0
   504  0838                     STR_1:
   505  0838  3420               	retlw	32	;' '
   506  0839  3420               	retlw	32	;' '
   507  083A  3443               	retlw	67	;'C'
   508  083B  3420               	retlw	32	;' '
   509  083C  3420               	retlw	32	;' '
   510  083D  3400               	retlw	0
   511  083E                     STR_2:
   512  083E  3425               	retlw	37	;'%'
   513  083F  3464               	retlw	100	;'d'
   514  0840  3400               	retlw	0
   515  0832                     
   516                           	psect	cinit
   517  07C4                     start_initialization:	
   518                           ; #config settings
   519                           
   520  07C4                     __initialization:
   521                           
   522                           ; Initialize objects allocated to BANK1
   523  07C4  1683               	bsf	3,5	;RP0=1, select bank1
   524  07C5  1303               	bcf	3,6	;RP1=0, select bank1
   525  07C6  160A  118A  26C8  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   526  07CB  00D8               	movwf	__pdataBANK1& (0+127)
   527  07CC  160A  118A  26C9  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   528  07D1  00D9               	movwf	(__pdataBANK1+1)& (0+127)
   529  07D2  160A  118A  26CA  120A  118A  	fcall	__pidataBANK1+2	;fetch initializer
   530  07D7  00DA               	movwf	(__pdataBANK1+2)& (0+127)
   531  07D8  160A  118A  26CB  120A  118A  	fcall	__pidataBANK1+3	;fetch initializer
   532  07DD  00DB               	movwf	(__pdataBANK1+3)& (0+127)
   533  07DE  160A  118A  26CC  120A  118A  	fcall	__pidataBANK1+4	;fetch initializer
   534  07E3  00DC               	movwf	(__pdataBANK1+4)& (0+127)
   535  07E4  160A  118A  26CD  120A  118A  	fcall	__pidataBANK1+5	;fetch initializer
   536  07E9  00DD               	movwf	(__pdataBANK1+5)& (0+127)
   537                           
   538                           ; Clear objects allocated to BANK3
   539  07EA  1783               	bsf	3,7	;select IRP bank2
   540  07EB  3090               	movlw	low __pbssBANK3
   541  07EC  0084               	movwf	4
   542  07ED  30B0               	movlw	low (__pbssBANK3+32)
   543  07EE  160A  118A  26CE  120A  118A  	fcall	clear_ram0
   544                           
   545                           ; Clear objects allocated to BANK1
   546  07F3  1383               	bcf	3,7	;select IRP bank0
   547  07F4  30A0               	movlw	low __pbssBANK1
   548  07F5  0084               	movwf	4
   549  07F6  30CC               	movlw	low (__pbssBANK1+44)
   550  07F7  160A  118A  26CE  120A  118A  	fcall	clear_ram0
   551  07FC                     end_of_initialization:	
   552                           ;End of C runtime variable initialization code
   553                           
   554  07FC                     __end_of__initialization:
   555  07FC  0183               	clrf	3
   556  07FD  120A  158A  29CC   	ljmp	_main	;jump to C main() function
   557                           
   558                           	psect	bssBANK1
   559  00A0                     __pbssBANK1:
   560  00A0                     _estouro:
   561  00A0                     	ds	2
   562  00A2                     _PIDRef:
   563  00A2                     	ds	2
   564  00A4                     _xRef:
   565  00A4                     	ds	2
   566  00A6                     _x:
   567  00A6                     	ds	2
   568  00A8                     _PID:
   569  00A8                     	ds	2
   570  00AA                     _derivativo:
   571  00AA                     	ds	2
   572  00AC                     _integral:
   573  00AC                     	ds	2
   574  00AE                     _proporcional:
   575  00AE                     	ds	2
   576  00B0                     _kdReferencia:
   577  00B0                     	ds	2
   578  00B2                     _kiReferencia:
   579  00B2                     	ds	2
   580  00B4                     _kpReferencia:
   581  00B4                     	ds	2
   582  00B6                     _kd:
   583  00B6                     	ds	2
   584  00B8                     _erro:
   585  00B8                     	ds	2
   586  00BA                     _setPointReferencia:
   587  00BA                     	ds	2
   588  00BC                     _setPointCalculo:
   589  00BC                     	ds	2
   590  00BE                     _menu:
   591  00BE                     	ds	2
   592  00C0                     _temperaturaReferencia:
   593  00C0                     	ds	2
   594  00C2                     _temperatura:
   595  00C2                     	ds	2
   596  00C4                     controlarValores@S4Atual:
   597  00C4                     	ds	1
   598  00C5                     controlarValores@S4Anterior:
   599  00C5                     	ds	1
   600  00C6                     controlarValores@S3Atual:
   601  00C6                     	ds	1
   602  00C7                     controlarValores@S3Anterior:
   603  00C7                     	ds	1
   604  00C8                     controlarValores@S2Atual:
   605  00C8                     	ds	1
   606  00C9                     controlarValores@S2Anterior:
   607  00C9                     	ds	1
   608  00CA                     controlarValores@S1Atual:
   609  00CA                     	ds	1
   610  00CB                     controlarValores@S1Anterior:
   611  00CB                     	ds	1
   612                           
   613                           	psect	dataBANK1
   614  00D8                     __pdataBANK1:
   615  00D8                     _ki:
   616  00D8                     	ds	2
   617  00DA                     _kp:
   618  00DA                     	ds	2
   619  00DC                     _setPoint:
   620  00DC                     	ds	2
   621                           
   622                           	psect	bssBANK3
   623  0190                     __pbssBANK3:
   624  0190                     _string:
   625  0190                     	ds	32
   626                           
   627                           	psect	clrtext
   628  16CE                     clear_ram0:	
   629                           ;	Called with FSR containing the base address, and
   630                           ;	W with the last address+1
   631                           
   632  16CE  0064               	clrwdt	;clear the watchdog before getting into this loop
   633  16CF                     clrloop0:
   634  16CF  0180               	clrf	0	;clear RAM location pointed to by FSR
   635  16D0  0A84               	incf	4,f	;increment pointer
   636  16D1  0604               	xorwf	4,w	;XOR with final address
   637  16D2  1903               	btfsc	3,2	;have we reached the end yet?
   638  16D3  3400               	retlw	0	;all done for this memory range, return
   639  16D4  0604               	xorwf	4,w	;XOR again to restore value
   640  16D5  2ECF               	goto	clrloop0	;do the next byte
   641                           
   642                           	psect	cstackBANK1
   643  00CC                     __pcstackBANK1:
   644  00CC                     ??___fltol:
   645                           
   646                           ; 1 bytes @ 0x0
   647  00CC                     	ds	5
   648  00D1                     ??_PWM1_Duty:
   649  00D1                     ??_PWM2_Duty:	
   650                           ; 1 bytes @ 0x5
   651                           
   652                           
   653                           ; 1 bytes @ 0x5
   654  00D1                     	ds	2
   655  00D3                     ??_realizarCalculo:
   656  00D3                     controlarCooler@cooler:	
   657                           ; 1 bytes @ 0x7
   658                           
   659                           
   660                           ; 2 bytes @ 0x7
   661  00D3                     	ds	2
   662  00D5                     ??_main:
   663                           
   664                           ; 1 bytes @ 0x9
   665  00D5                     	ds	3
   666                           
   667                           	psect	cstackCOMMON
   668  0070                     __pcstackCOMMON:
   669  0070                     ?_lcd_cmd:
   670  0070                     ?_ADC_Init:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0070                     ??_ADC_Init:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ?_PWM1_Start:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ??_PWM1_Start:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ?_PWM2_Start:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ??_PWM2_Start:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ?_lcd_init:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     ?_controlarValores:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0070                     ?_imprimirValoresLcd:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0070                     ?_realizarCalculo:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0070                     ?_controlarCooler:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0070                     ?_main:	
   704                           ; 1 bytes @ 0x0
   705                           
   706  0070                     ?_lcd_wr:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0070                     ??_lcd_wr:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0070                     ?_lcd_dat:	
   713                           ; 1 bytes @ 0x0
   714                           
   715  0070                     ?_controleMaximoMinimo:	
   716                           ; 1 bytes @ 0x0
   717                           
   718  0070                     ?_ADC_Read:	
   719                           ; 2 bytes @ 0x0
   720                           
   721  0070                     ?__Umul8_16:	
   722                           ; 2 bytes @ 0x0
   723                           
   724  0070                     ?___awmod:	
   725                           ; 2 bytes @ 0x0
   726                           
   727  0070                     ?___lwdiv:	
   728                           ; 2 bytes @ 0x0
   729                           
   730  0070                     ?___aldiv:	
   731                           ; 2 bytes @ 0x0
   732                           
   733  0070                     lcd_wr@val:	
   734                           ; 4 bytes @ 0x0
   735                           
   736  0070                     __Umul8_16@multiplicand:	
   737                           ; 1 bytes @ 0x0
   738                           
   739  0070                     controleMaximoMinimo@valor:	
   740                           ; 1 bytes @ 0x0
   741                           
   742  0070                     ___awmod@divisor:	
   743                           ; 2 bytes @ 0x0
   744                           
   745  0070                     ___lwdiv@divisor:	
   746                           ; 2 bytes @ 0x0
   747                           
   748  0070                     ___aldiv@divisor:	
   749                           ; 2 bytes @ 0x0
   750                           
   751                           
   752                           ; 4 bytes @ 0x0
   753  0070                     	ds	1
   754  0071                     ??_lcd_cmd:
   755  0071                     ??_lcd_dat:	
   756                           ; 1 bytes @ 0x1
   757                           
   758  0071                     lcd_cmd@val:	
   759                           ; 1 bytes @ 0x1
   760                           
   761  0071                     lcd_dat@val:	
   762                           ; 1 bytes @ 0x1
   763                           
   764                           
   765                           ; 1 bytes @ 0x1
   766  0071                     	ds	1
   767  0072                     ??_controleMaximoMinimo:
   768  0072                     ?_lcd_str:	
   769                           ; 1 bytes @ 0x2
   770                           
   771  0072                     ??_ADC_Read:	
   772                           ; 1 bytes @ 0x2
   773                           
   774  0072                     ??_lcd_init:	
   775                           ; 1 bytes @ 0x2
   776                           
   777  0072                     ??__Umul8_16:	
   778                           ; 1 bytes @ 0x2
   779                           
   780  0072                     ??_controlarValores:	
   781                           ; 1 bytes @ 0x2
   782                           
   783  0072                     lcd_str@str:	
   784                           ; 1 bytes @ 0x2
   785                           
   786  0072                     ___awmod@dividend:	
   787                           ; 2 bytes @ 0x2
   788                           
   789  0072                     ___lwdiv@dividend:	
   790                           ; 2 bytes @ 0x2
   791                           
   792                           
   793                           ; 2 bytes @ 0x2
   794  0072                     	ds	2
   795  0074                     ??_lcd_str:
   796  0074                     ??___awmod:	
   797                           ; 1 bytes @ 0x4
   798                           
   799  0074                     ??___lwdiv:	
   800                           ; 1 bytes @ 0x4
   801                           
   802  0074                     ADC_Read@channel:	
   803                           ; 1 bytes @ 0x4
   804                           
   805  0074                     __Umul8_16@product:	
   806                           ; 1 bytes @ 0x4
   807                           
   808  0074                     ___aldiv@dividend:	
   809                           ; 2 bytes @ 0x4
   810                           
   811                           
   812                           ; 4 bytes @ 0x4
   813  0074                     	ds	1
   814  0075                     ?___wmul:
   815  0075                     lcd_str@i:	
   816                           ; 2 bytes @ 0x5
   817                           
   818  0075                     ___awmod@counter:	
   819                           ; 1 bytes @ 0x5
   820                           
   821  0075                     ___wmul@multiplier:	
   822                           ; 1 bytes @ 0x5
   823                           
   824  0075                     ___lwdiv@quotient:	
   825                           ; 2 bytes @ 0x5
   826                           
   827                           
   828                           ; 2 bytes @ 0x5
   829  0075                     	ds	1
   830  0076                     ___awmod@sign:
   831  0076                     __Umul8_16@word_mpld:	
   832                           ; 1 bytes @ 0x6
   833                           
   834                           
   835                           ; 2 bytes @ 0x6
   836  0076                     	ds	1
   837  0077                     ?___awdiv:
   838  0077                     ___lwdiv@counter:	
   839                           ; 2 bytes @ 0x7
   840                           
   841  0077                     ___wmul@multiplicand:	
   842                           ; 1 bytes @ 0x7
   843                           
   844  0077                     ___awdiv@divisor:	
   845                           ; 2 bytes @ 0x7
   846                           
   847                           
   848                           ; 2 bytes @ 0x7
   849  0077                     	ds	1
   850  0078                     ??___aldiv:
   851  0078                     ?___lwmod:	
   852                           ; 1 bytes @ 0x8
   853                           
   854  0078                     __Umul8_16@multiplier:	
   855                           ; 2 bytes @ 0x8
   856                           
   857  0078                     ___lwmod@divisor:	
   858                           ; 1 bytes @ 0x8
   859                           
   860                           
   861                           ; 2 bytes @ 0x8
   862  0078                     	ds	1
   863  0079                     ??_PWM_Init:
   864  0079                     ??___wmul:	
   865                           ; 1 bytes @ 0x9
   866                           
   867  0079                     ___wmul@product:	
   868                           ; 1 bytes @ 0x9
   869                           
   870  0079                     ___awdiv@dividend:	
   871                           ; 2 bytes @ 0x9
   872                           
   873                           
   874                           ; 2 bytes @ 0x9
   875  0079                     	ds	1
   876  007A                     ___lwmod@dividend:
   877                           
   878                           ; 2 bytes @ 0xA
   879  007A                     	ds	1
   880  007B                     ??___awdiv:
   881  007B                     ___fltol@sign1:	
   882                           ; 1 bytes @ 0xB
   883                           
   884                           
   885                           ; 1 bytes @ 0xB
   886  007B                     	ds	1
   887  007C                     ??___lwmod:
   888  007C                     ___fltol@exp1:	
   889                           ; 1 bytes @ 0xC
   890                           
   891                           
   892                           ; 1 bytes @ 0xC
   893  007C                     	ds	1
   894  007D                     ??_controlarCooler:
   895  007D                     ___lwmod@counter:	
   896                           ; 1 bytes @ 0xD
   897                           
   898                           
   899                           ; 1 bytes @ 0xD
   900  007D                     	ds	1
   901                           
   902                           	psect	cstackBANK0
   903  0020                     __pcstackBANK0:
   904  0020                     ?_sprintf:
   905  0020                     sprintf@f:	
   906                           ; 2 bytes @ 0x0
   907                           
   908  0020                     ___aldiv@counter:	
   909                           ; 1 bytes @ 0x0
   910                           
   911  0020                     ___awdiv@counter:	
   912                           ; 1 bytes @ 0x0
   913                           
   914                           
   915                           ; 1 bytes @ 0x0
   916  0020                     	ds	1
   917  0021                     ___aldiv@sign:
   918  0021                     ___awdiv@sign:	
   919                           ; 1 bytes @ 0x1
   920                           
   921                           
   922                           ; 1 bytes @ 0x1
   923  0021                     	ds	1
   924  0022                     ___awdiv@quotient:
   925  0022                     ___aldiv@quotient:	
   926                           ; 2 bytes @ 0x2
   927                           
   928                           
   929                           ; 4 bytes @ 0x2
   930  0022                     	ds	1
   931  0023                     ??_sprintf:
   932                           
   933                           ; 1 bytes @ 0x3
   934  0023                     	ds	3
   935  0026                     ?_PWM_Init:
   936  0026                     ?___xxtofl:	
   937                           ; 1 bytes @ 0x6
   938                           
   939  0026                     sprintf@ap:	
   940                           ; 4 bytes @ 0x6
   941                           
   942  0026                     PWM_Init@freq:	
   943                           ; 1 bytes @ 0x6
   944                           
   945  0026                     ___xxtofl@val:	
   946                           ; 4 bytes @ 0x6
   947                           
   948                           
   949                           ; 4 bytes @ 0x6
   950  0026                     	ds	1
   951  0027                     sprintf@flag:
   952                           
   953                           ; 1 bytes @ 0x7
   954  0027                     	ds	1
   955  0028                     sprintf@prec:
   956                           
   957                           ; 1 bytes @ 0x8
   958  0028                     	ds	1
   959  0029                     sprintf@val:
   960                           
   961                           ; 2 bytes @ 0x9
   962  0029                     	ds	1
   963  002A                     ??___xxtofl:
   964                           
   965                           ; 1 bytes @ 0xA
   966  002A                     	ds	1
   967  002B                     sprintf@sp:
   968                           
   969                           ; 1 bytes @ 0xB
   970  002B                     	ds	1
   971  002C                     sprintf@c:
   972                           
   973                           ; 1 bytes @ 0xC
   974  002C                     	ds	1
   975  002D                     ??_imprimirValoresLcd:
   976                           
   977                           ; 1 bytes @ 0xD
   978  002D                     	ds	1
   979  002E                     ___xxtofl@sign:
   980  002E                     imprimirValoresLcd@milhar:	
   981                           ; 1 bytes @ 0xE
   982                           
   983                           
   984                           ; 2 bytes @ 0xE
   985  002E                     	ds	1
   986  002F                     ___xxtofl@exp:
   987                           
   988                           ; 1 bytes @ 0xF
   989  002F                     	ds	1
   990  0030                     imprimirValoresLcd@centena:
   991  0030                     ___xxtofl@arg:	
   992                           ; 2 bytes @ 0x10
   993                           
   994                           
   995                           ; 4 bytes @ 0x10
   996  0030                     	ds	4
   997  0034                     ?___fldiv:
   998  0034                     ___fldiv@a:	
   999                           ; 4 bytes @ 0x14
  1000                           
  1001                           
  1002                           ; 4 bytes @ 0x14
  1003  0034                     	ds	4
  1004  0038                     ___fldiv@b:
  1005                           
  1006                           ; 4 bytes @ 0x18
  1007  0038                     	ds	4
  1008  003C                     ??___fldiv:
  1009                           
  1010                           ; 1 bytes @ 0x1C
  1011  003C                     	ds	5
  1012  0041                     ___fldiv@rem:
  1013                           
  1014                           ; 4 bytes @ 0x21
  1015  0041                     	ds	4
  1016  0045                     ___fldiv@sign:
  1017                           
  1018                           ; 1 bytes @ 0x25
  1019  0045                     	ds	1
  1020  0046                     ___fldiv@new_exp:
  1021                           
  1022                           ; 2 bytes @ 0x26
  1023  0046                     	ds	2
  1024  0048                     ___fldiv@grs:
  1025                           
  1026                           ; 4 bytes @ 0x28
  1027  0048                     	ds	4
  1028  004C                     ___fldiv@bexp:
  1029                           
  1030                           ; 1 bytes @ 0x2C
  1031  004C                     	ds	1
  1032  004D                     ___fldiv@aexp:
  1033                           
  1034                           ; 1 bytes @ 0x2D
  1035  004D                     	ds	1
  1036  004E                     ?___flmul:
  1037  004E                     ___flmul@b:	
  1038                           ; 4 bytes @ 0x2E
  1039                           
  1040                           
  1041                           ; 4 bytes @ 0x2E
  1042  004E                     	ds	4
  1043  0052                     ___flmul@a:
  1044                           
  1045                           ; 4 bytes @ 0x32
  1046  0052                     	ds	4
  1047  0056                     ??___flmul:
  1048                           
  1049                           ; 1 bytes @ 0x36
  1050  0056                     	ds	5
  1051  005B                     ___flmul@sign:
  1052                           
  1053                           ; 1 bytes @ 0x3B
  1054  005B                     	ds	1
  1055  005C                     ___flmul@grs:
  1056                           
  1057                           ; 4 bytes @ 0x3C
  1058  005C                     	ds	4
  1059  0060                     ___flmul@aexp:
  1060                           
  1061                           ; 1 bytes @ 0x40
  1062  0060                     	ds	1
  1063  0061                     ___flmul@bexp:
  1064                           
  1065                           ; 1 bytes @ 0x41
  1066  0061                     	ds	1
  1067  0062                     ___flmul@prod:
  1068                           
  1069                           ; 4 bytes @ 0x42
  1070  0062                     	ds	4
  1071  0066                     ___flmul@temp:
  1072                           
  1073                           ; 2 bytes @ 0x46
  1074  0066                     	ds	2
  1075  0068                     ?___fltol:
  1076  0068                     ___fltol@f1:	
  1077                           ; 4 bytes @ 0x48
  1078                           
  1079                           
  1080                           ; 4 bytes @ 0x48
  1081  0068                     	ds	4
  1082  006C                     ?_PWM1_Duty:
  1083  006C                     ?_PWM2_Duty:	
  1084                           ; 1 bytes @ 0x4C
  1085                           
  1086  006C                     PWM1_Duty@duty:	
  1087                           ; 1 bytes @ 0x4C
  1088                           
  1089  006C                     PWM2_Duty@duty:	
  1090                           ; 2 bytes @ 0x4C
  1091                           
  1092                           
  1093                           ; 2 bytes @ 0x4C
  1094  006C                     	ds	2
  1095  006E                     PWM1_Duty@freq:
  1096  006E                     PWM2_Duty@freq:	
  1097                           ; 2 bytes @ 0x4E
  1098                           
  1099                           
  1100                           ; 2 bytes @ 0x4E
  1101  006E                     	ds	2
  1102                           
  1103                           	psect	maintext
  1104  09CC                     __pmaintext:	
  1105 ;;
  1106 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1107 ;;
  1108 ;; *************** function _main *****************
  1109 ;; Defined at:
  1110 ;;		line 231 in file "main.c"
  1111 ;; Parameters:    Size  Location     Type
  1112 ;;		None
  1113 ;; Auto vars:     Size  Location     Type
  1114 ;;		None
  1115 ;; Return value:  Size  Location     Type
  1116 ;;                  1    wreg      void 
  1117 ;; Registers used:
  1118 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1119 ;; Tracked objects:
  1120 ;;		On entry : B00/0
  1121 ;;		On exit  : 0/0
  1122 ;;		Unchanged: 0/0
  1123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1124 ;;      Params:         0       0       0       0       0
  1125 ;;      Locals:         0       0       0       0       0
  1126 ;;      Temps:          0       0       3       0       0
  1127 ;;      Totals:         0       0       3       0       0
  1128 ;;Total ram usage:        3 bytes
  1129 ;; Hardware stack levels required when called: 4
  1130 ;; This function calls:
  1131 ;;		_ADC_Init
  1132 ;;		_PWM1_Start
  1133 ;;		_PWM2_Start
  1134 ;;		_controlarCooler
  1135 ;;		_controlarValores
  1136 ;;		_imprimirValoresLcd
  1137 ;;		_lcd_cmd
  1138 ;;		_lcd_init
  1139 ;;		_lcd_str
  1140 ;;		_realizarCalculo
  1141 ;; This function is called by:
  1142 ;;		Startup code after reset
  1143 ;; This function uses a non-reentrant model
  1144 ;;
  1145                           
  1146                           
  1147                           ;psect for function _main
  1148  09CC                     _main:
  1149  09CC                     l2666:	
  1150                           ;incstack = 0
  1151                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1152                           
  1153                           
  1154                           ;main.c: 232:     TRISA = 0xFF;
  1155  09CC  30FF               	movlw	255
  1156  09CD  1683               	bsf	3,5	;RP0=1, select bank1
  1157  09CE  1303               	bcf	3,6	;RP1=0, select bank1
  1158  09CF  0085               	movwf	5	;volatile
  1159                           
  1160                           ;main.c: 233:     TRISB = 0x0F;
  1161  09D0  300F               	movlw	15
  1162  09D1  0086               	movwf	6	;volatile
  1163  09D2                     l2668:
  1164                           
  1165                           ;main.c: 234:     TRISC = 0x00;
  1166  09D2  0187               	clrf	7	;volatile
  1167  09D3                     l2670:
  1168                           
  1169                           ;main.c: 235:     TRISD = 0x00;
  1170  09D3  0188               	clrf	8	;volatile
  1171  09D4                     l2672:
  1172                           
  1173                           ;main.c: 236:     TRISE = 0x00;
  1174  09D4  0189               	clrf	9	;volatile
  1175  09D5                     l2674:
  1176                           
  1177                           ;main.c: 238:     OPTION_REG = 0x07;
  1178  09D5  3007               	movlw	7
  1179  09D6  0081               	movwf	1	;volatile
  1180  09D7                     l2676:
  1181                           
  1182                           ;main.c: 239:     INTCON = 0xA0;
  1183  09D7  30A0               	movlw	160
  1184  09D8  008B               	movwf	11	;volatile
  1185  09D9                     l2678:
  1186                           
  1187                           ;main.c: 240:     TMR0 = 9;
  1188  09D9  3009               	movlw	9
  1189  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  1190  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  1191  09DC  0081               	movwf	1	;volatile
  1192  09DD                     l2680:
  1193                           
  1194                           ;main.c: 242:     ADC_Init();
  1195  09DD  160A  118A  26D6  120A  158A  	fcall	_ADC_Init
  1196  09E2                     l2682:
  1197                           
  1198                           ;main.c: 243:     PWM1_Start();
  1199  09E2  160A  118A  26DF  120A  158A  	fcall	_PWM1_Start
  1200  09E7                     l2684:
  1201                           
  1202                           ;main.c: 244:     PWM2_Start();
  1203  09E7  160A  118A  26E8  120A  158A  	fcall	_PWM2_Start
  1204  09EC                     l2686:
  1205                           
  1206                           ;main.c: 245:     lcd_init();
  1207  09EC  160A  118A  27CA  120A  158A  	fcall	_lcd_init
  1208  09F1                     l2688:
  1209                           
  1210                           ;main.c: 246:     lcd_cmd(0x80);
  1211  09F1  3080               	movlw	128
  1212  09F2  160A  118A  26F3  120A  158A  	fcall	_lcd_cmd
  1213  09F7                     l2690:
  1214                           
  1215                           ;main.c: 247:     lcd_str("TP:  C  KI:");
  1216  09F7  3017               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1217  09F8  00F2               	movwf	lcd_str@str
  1218  09F9  3080               	movlw	128
  1219  09FA  00F3               	movwf	lcd_str@str+1
  1220  09FB  120A  118A  2003  120A  158A  	fcall	_lcd_str
  1221  0A00                     l2692:
  1222                           
  1223                           ;main.c: 248:     lcd_cmd(0xC0);
  1224  0A00  30C0               	movlw	192
  1225  0A01  160A  118A  26F3  120A  158A  	fcall	_lcd_cmd
  1226  0A06                     l2694:
  1227                           
  1228                           ;main.c: 249:     lcd_str("KP:     KD:");
  1229  0A06  300B               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1230  0A07  00F2               	movwf	lcd_str@str
  1231  0A08  3080               	movlw	128
  1232  0A09  00F3               	movwf	lcd_str@str+1
  1233  0A0A  120A  118A  2003  120A  158A  	fcall	_lcd_str
  1234  0A0F                     l2696:
  1235                           
  1236                           ;main.c: 252:         controlarValores();
  1237  0A0F  120A  158A  25CC  120A  158A  	fcall	_controlarValores
  1238  0A14                     l2698:
  1239                           
  1240                           ;main.c: 253:         estouro += INTCONbits.TMR0IF;
  1241  0A14  0C0B               	rrf	11,w	;volatile
  1242  0A15  1683               	bsf	3,5	;RP0=1, select bank1
  1243  0A16  1303               	bcf	3,6	;RP1=0, select bank1
  1244  0A17  00D5               	movwf	??_main^(0+128)
  1245  0A18  0C55               	rrf	??_main^(0+128),w
  1246  0A19  3901               	andlw	1
  1247  0A1A  00D6               	movwf	(??_main+1)^(0+128)
  1248  0A1B  01D7               	clrf	((??_main+1)^(0+128)+1)
  1249  0A1C  0856               	movf	(??_main+1)^(0+128),w
  1250  0A1D  07A0               	addwf	_estouro^(0+128),f
  1251  0A1E  1803               	skipnc
  1252  0A1F  0AA1               	incf	(_estouro+1)^(0+128),f
  1253  0A20  0857               	movf	(??_main+2)^(0+128),w
  1254  0A21  07A1               	addwf	(_estouro+1)^(0+128),f
  1255  0A22                     l2700:
  1256                           
  1257                           ;main.c: 255:         if (estouro > 124){
  1258  0A22  3000               	movlw	0
  1259  0A23  0221               	subwf	(_estouro+1)^(0+128),w
  1260  0A24  307D               	movlw	125
  1261  0A25  1903               	skipnz
  1262  0A26  0220               	subwf	_estouro^(0+128),w
  1263  0A27  1C03               	skipc
  1264  0A28  2A2A               	goto	u3761
  1265  0A29  2A2B               	goto	u3760
  1266  0A2A                     u3761:
  1267  0A2A  2A32               	goto	l2706
  1268  0A2B                     u3760:
  1269  0A2B                     l2702:
  1270                           
  1271                           ;main.c: 256:             estouro = 0;
  1272  0A2B  01A0               	clrf	_estouro^(0+128)
  1273  0A2C  01A1               	clrf	(_estouro+1)^(0+128)
  1274  0A2D                     l2704:
  1275                           
  1276                           ;main.c: 258:             realizarCalculo();
  1277  0A2D  120A  158A  26CD  120A  158A  	fcall	_realizarCalculo
  1278  0A32                     l2706:
  1279                           
  1280                           ;main.c: 261:         controlarCooler();
  1281  0A32  160A  118A  2767  120A  158A  	fcall	_controlarCooler
  1282  0A37                     l2708:
  1283                           
  1284                           ;main.c: 262:         imprimirValoresLcd();
  1285  0A37  120A  118A  20EA  120A  158A  	fcall	_imprimirValoresLcd
  1286  0A3C  2A0F               	goto	l2696
  1287  0A3D  120A  118A  2800   	ljmp	start
  1288  0A40                     __end_of_main:
  1289                           
  1290                           	psect	text1
  1291  0ECD                     __ptext1:	
  1292 ;; *************** function _realizarCalculo *****************
  1293 ;; Defined at:
  1294 ;;		line 211 in file "main.c"
  1295 ;; Parameters:    Size  Location     Type
  1296 ;;		None
  1297 ;; Auto vars:     Size  Location     Type
  1298 ;;		None
  1299 ;; Return value:  Size  Location     Type
  1300 ;;                  1    wreg      void 
  1301 ;; Registers used:
  1302 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1303 ;; Tracked objects:
  1304 ;;		On entry : 0/0
  1305 ;;		On exit  : 0/0
  1306 ;;		Unchanged: 0/0
  1307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1308 ;;      Params:         0       0       0       0       0
  1309 ;;      Locals:         0       0       0       0       0
  1310 ;;      Temps:          0       0       2       0       0
  1311 ;;      Totals:         0       0       2       0       0
  1312 ;;Total ram usage:        2 bytes
  1313 ;; Hardware stack levels used: 1
  1314 ;; Hardware stack levels required when called: 3
  1315 ;; This function calls:
  1316 ;;		_ADC_Read
  1317 ;;		_PWM1_Duty
  1318 ;;		___awdiv
  1319 ;;		___fldiv
  1320 ;;		___flmul
  1321 ;;		___fltol
  1322 ;;		___wmul
  1323 ;;		___xxtofl
  1324 ;;		_controleMaximoMinimo
  1325 ;; This function is called by:
  1326 ;;		_main
  1327 ;; This function uses a non-reentrant model
  1328 ;;
  1329                           
  1330                           
  1331                           ;psect for function _realizarCalculo
  1332  0ECD                     _realizarCalculo:
  1333  0ECD                     l2636:	
  1334                           ;incstack = 0
  1335                           ; Regs used in _realizarCalculo: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1336                           
  1337                           
  1338                           ;main.c: 212:     temperatura = (ADC_Read(0)*10/8 - 150);
  1339  0ECD  3000               	movlw	0
  1340  0ECE  160A  118A  2796  120A  158A  	fcall	_ADC_Read
  1341  0ED3  0871               	movf	?_ADC_Read+1,w
  1342  0ED4  00F6               	movwf	___wmul@multiplier+1
  1343  0ED5  0870               	movf	?_ADC_Read,w
  1344  0ED6  00F5               	movwf	___wmul@multiplier
  1345  0ED7  300A               	movlw	10
  1346  0ED8  00F7               	movwf	___wmul@multiplicand
  1347  0ED9  3000               	movlw	0
  1348  0EDA  00F8               	movwf	___wmul@multiplicand+1
  1349  0EDB  160A  118A  271B  120A  158A  	fcall	___wmul
  1350  0EE0  0875               	movf	?___wmul,w
  1351  0EE1  1683               	bsf	3,5	;RP0=1, select bank1
  1352  0EE2  1303               	bcf	3,6	;RP1=0, select bank1
  1353  0EE3  00D3               	movwf	??_realizarCalculo^(0+128)
  1354  0EE4  0876               	movf	?___wmul+1,w
  1355  0EE5  00D4               	movwf	(??_realizarCalculo^(0+128)+1)
  1356  0EE6  1003               	clrc
  1357  0EE7  0CD4               	rrf	(??_realizarCalculo^(0+128)+1),f
  1358  0EE8  0CD3               	rrf	??_realizarCalculo^(0+128),f
  1359  0EE9  1003               	clrc
  1360  0EEA  0CD4               	rrf	(??_realizarCalculo^(0+128)+1),f
  1361  0EEB  0CD3               	rrf	??_realizarCalculo^(0+128),f
  1362  0EEC  1003               	clrc
  1363  0EED  0CD4               	rrf	(??_realizarCalculo^(0+128)+1),f
  1364  0EEE  0CD3               	rrf	??_realizarCalculo^(0+128),f
  1365  0EEF  0853               	movf	??_realizarCalculo^(0+128),w
  1366  0EF0  3E6A               	addlw	106
  1367  0EF1  00C2               	movwf	_temperatura^(0+128)
  1368  0EF2  0854               	movf	(??_realizarCalculo+1)^(0+128),w
  1369  0EF3  1803               	skipnc
  1370  0EF4  3E01               	addlw	1
  1371  0EF5  3EFF               	addlw	255
  1372  0EF6  00C3               	movwf	(_temperatura+1)^(0+128)
  1373                           
  1374                           ;main.c: 213:     erro = (setPointCalculo/10) - temperatura;
  1375  0EF7  300A               	movlw	10
  1376  0EF8  00F7               	movwf	___awdiv@divisor
  1377  0EF9  3000               	movlw	0
  1378  0EFA  00F8               	movwf	___awdiv@divisor+1
  1379  0EFB  083D               	movf	(_setPointCalculo+1)^(0+128),w
  1380  0EFC  00FA               	movwf	___awdiv@dividend+1
  1381  0EFD  083C               	movf	_setPointCalculo^(0+128),w
  1382  0EFE  00F9               	movwf	___awdiv@dividend
  1383  0EFF  120A  158A  2163  120A  158A  	fcall	___awdiv
  1384  0F04  1683               	bsf	3,5	;RP0=1, select bank1
  1385  0F05  1303               	bcf	3,6	;RP1=0, select bank1
  1386  0F06  0842               	movf	_temperatura^(0+128),w
  1387  0F07  0277               	subwf	?___awdiv,w
  1388  0F08  00B8               	movwf	_erro^(0+128)
  1389  0F09  0843               	movf	(_temperatura+1)^(0+128),w
  1390  0F0A  1C03               	skipc
  1391  0F0B  0A43               	incf	(_temperatura+1)^(0+128),w
  1392  0F0C  0278               	subwf	?___awdiv+1,w
  1393  0F0D  00B9               	movwf	(_erro+1)^(0+128)
  1394                           
  1395                           ;main.c: 214:     proporcional = kp * erro;
  1396  0F0E  085B               	movf	(_kp+1)^(0+128),w
  1397  0F0F  00F6               	movwf	___wmul@multiplier+1
  1398  0F10  085A               	movf	_kp^(0+128),w
  1399  0F11  00F5               	movwf	___wmul@multiplier
  1400  0F12  0839               	movf	(_erro+1)^(0+128),w
  1401  0F13  00F8               	movwf	___wmul@multiplicand+1
  1402  0F14  0838               	movf	_erro^(0+128),w
  1403  0F15  00F7               	movwf	___wmul@multiplicand
  1404  0F16  160A  118A  271B  120A  158A  	fcall	___wmul
  1405  0F1B  0876               	movf	?___wmul+1,w
  1406  0F1C  1683               	bsf	3,5	;RP0=1, select bank1
  1407  0F1D  1303               	bcf	3,6	;RP1=0, select bank1
  1408  0F1E  00AF               	movwf	(_proporcional+1)^(0+128)
  1409  0F1F  0875               	movf	?___wmul,w
  1410  0F20  00AE               	movwf	_proporcional^(0+128)
  1411  0F21                     l2638:
  1412                           
  1413                           ;main.c: 215:     integral += (erro * ki) * 100E-3;
  1414  0F21  0859               	movf	(_ki+1)^(0+128),w
  1415  0F22  00F8               	movwf	___wmul@multiplicand+1
  1416  0F23  0858               	movf	_ki^(0+128),w
  1417  0F24  00F7               	movwf	___wmul@multiplicand
  1418  0F25  0839               	movf	(_erro+1)^(0+128),w
  1419  0F26  00F6               	movwf	___wmul@multiplier+1
  1420  0F27  0838               	movf	_erro^(0+128),w
  1421  0F28  00F5               	movwf	___wmul@multiplier
  1422  0F29  160A  118A  271B  120A  158A  	fcall	___wmul
  1423  0F2E  0875               	movf	?___wmul,w
  1424  0F2F  1283               	bcf	3,5	;RP0=0, select bank0
  1425  0F30  1303               	bcf	3,6	;RP1=0, select bank0
  1426  0F31  00A6               	movwf	___xxtofl@val
  1427  0F32  0876               	movf	?___wmul+1,w
  1428  0F33  00A7               	movwf	___xxtofl@val+1
  1429  0F34  3000               	movlw	0
  1430  0F35  1BA7               	btfsc	___xxtofl@val+1,7
  1431  0F36  30FF               	movlw	255
  1432  0F37  00A8               	movwf	___xxtofl@val+2
  1433  0F38  00A9               	movwf	___xxtofl@val+3
  1434  0F39  3001               	movlw	1
  1435  0F3A  120A  118A  202E  120A  158A  	fcall	___xxtofl
  1436  0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  1437  0F40  1303               	bcf	3,6	;RP1=0, select bank0
  1438  0F41  0829               	movf	?___xxtofl+3,w
  1439  0F42  00D5               	movwf	___flmul@a+3
  1440  0F43  0828               	movf	?___xxtofl+2,w
  1441  0F44  00D4               	movwf	___flmul@a+2
  1442  0F45  0827               	movf	?___xxtofl+1,w
  1443  0F46  00D3               	movwf	___flmul@a+1
  1444  0F47  0826               	movf	?___xxtofl,w
  1445  0F48  00D2               	movwf	___flmul@a
  1446  0F49  303D               	movlw	61
  1447  0F4A  00D1               	movwf	___flmul@b+3
  1448  0F4B  30CC               	movlw	204
  1449  0F4C  00D0               	movwf	___flmul@b+2
  1450  0F4D  30CC               	movlw	204
  1451  0F4E  00CF               	movwf	___flmul@b+1
  1452  0F4F  30CD               	movlw	205
  1453  0F50  00CE               	movwf	___flmul@b
  1454  0F51  120A  118A  2463  120A  158A  	fcall	___flmul
  1455  0F56  1283               	bcf	3,5	;RP0=0, select bank0
  1456  0F57  1303               	bcf	3,6	;RP1=0, select bank0
  1457  0F58  0851               	movf	?___flmul+3,w
  1458  0F59  00EB               	movwf	___fltol@f1+3
  1459  0F5A  0850               	movf	?___flmul+2,w
  1460  0F5B  00EA               	movwf	___fltol@f1+2
  1461  0F5C  084F               	movf	?___flmul+1,w
  1462  0F5D  00E9               	movwf	___fltol@f1+1
  1463  0F5E  084E               	movf	?___flmul,w
  1464  0F5F  00E8               	movwf	___fltol@f1
  1465  0F60  120A  158A  2240  120A  158A  	fcall	___fltol
  1466  0F65  1283               	bcf	3,5	;RP0=0, select bank0
  1467  0F66  1303               	bcf	3,6	;RP1=0, select bank0
  1468  0F67  0868               	movf	?___fltol,w
  1469  0F68  1683               	bsf	3,5	;RP0=1, select bank1
  1470  0F69  1303               	bcf	3,6	;RP1=0, select bank1
  1471  0F6A  07AC               	addwf	_integral^(0+128),f
  1472  0F6B  1803               	skipnc
  1473  0F6C  0AAD               	incf	(_integral+1)^(0+128),f
  1474  0F6D  1283               	bcf	3,5	;RP0=0, select bank0
  1475  0F6E  1303               	bcf	3,6	;RP1=0, select bank0
  1476  0F6F  0869               	movf	?___fltol+1,w
  1477  0F70  1683               	bsf	3,5	;RP0=1, select bank1
  1478  0F71  1303               	bcf	3,6	;RP1=0, select bank1
  1479  0F72  07AD               	addwf	(_integral+1)^(0+128),f
  1480  0F73                     l2640:
  1481                           
  1482                           ;main.c: 216:     derivativo += ((temperaturaReferencia - temperatura) * kd) / 100E-3;
  1483  0F73  0837               	movf	(_kd+1)^(0+128),w
  1484  0F74  00F8               	movwf	___wmul@multiplicand+1
  1485  0F75  0836               	movf	_kd^(0+128),w
  1486  0F76  00F7               	movwf	___wmul@multiplicand
  1487  0F77  0842               	movf	_temperatura^(0+128),w
  1488  0F78  0240               	subwf	_temperaturaReferencia^(0+128),w
  1489  0F79  00F5               	movwf	___wmul@multiplier
  1490  0F7A  0843               	movf	(_temperatura+1)^(0+128),w
  1491  0F7B  1C03               	skipc
  1492  0F7C  0A43               	incf	(_temperatura+1)^(0+128),w
  1493  0F7D  0241               	subwf	(_temperaturaReferencia+1)^(0+128),w
  1494  0F7E  00F6               	movwf	___wmul@multiplier+1
  1495  0F7F  160A  118A  271B  120A  158A  	fcall	___wmul
  1496  0F84  0875               	movf	?___wmul,w
  1497  0F85  1283               	bcf	3,5	;RP0=0, select bank0
  1498  0F86  1303               	bcf	3,6	;RP1=0, select bank0
  1499  0F87  00A6               	movwf	___xxtofl@val
  1500  0F88  0876               	movf	?___wmul+1,w
  1501  0F89  00A7               	movwf	___xxtofl@val+1
  1502  0F8A  3000               	movlw	0
  1503  0F8B  1BA7               	btfsc	___xxtofl@val+1,7
  1504  0F8C  30FF               	movlw	255
  1505  0F8D  00A8               	movwf	___xxtofl@val+2
  1506  0F8E  00A9               	movwf	___xxtofl@val+3
  1507  0F8F  3001               	movlw	1
  1508  0F90  120A  118A  202E  120A  158A  	fcall	___xxtofl
  1509  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  1510  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  1511  0F97  0829               	movf	?___xxtofl+3,w
  1512  0F98  00BB               	movwf	___fldiv@b+3
  1513  0F99  0828               	movf	?___xxtofl+2,w
  1514  0F9A  00BA               	movwf	___fldiv@b+2
  1515  0F9B  0827               	movf	?___xxtofl+1,w
  1516  0F9C  00B9               	movwf	___fldiv@b+1
  1517  0F9D  0826               	movf	?___xxtofl,w
  1518  0F9E  00B8               	movwf	___fldiv@b
  1519  0F9F  303D               	movlw	61
  1520  0FA0  00B7               	movwf	___fldiv@a+3
  1521  0FA1  30CC               	movlw	204
  1522  0FA2  00B6               	movwf	___fldiv@a+2
  1523  0FA3  30CC               	movlw	204
  1524  0FA4  00B5               	movwf	___fldiv@a+1
  1525  0FA5  30CD               	movlw	205
  1526  0FA6  00B4               	movwf	___fldiv@a
  1527  0FA7  120A  118A  2286  120A  158A  	fcall	___fldiv
  1528  0FAC  1283               	bcf	3,5	;RP0=0, select bank0
  1529  0FAD  1303               	bcf	3,6	;RP1=0, select bank0
  1530  0FAE  0837               	movf	?___fldiv+3,w
  1531  0FAF  00EB               	movwf	___fltol@f1+3
  1532  0FB0  0836               	movf	?___fldiv+2,w
  1533  0FB1  00EA               	movwf	___fltol@f1+2
  1534  0FB2  0835               	movf	?___fldiv+1,w
  1535  0FB3  00E9               	movwf	___fltol@f1+1
  1536  0FB4  0834               	movf	?___fldiv,w
  1537  0FB5  00E8               	movwf	___fltol@f1
  1538  0FB6  120A  158A  2240  120A  158A  	fcall	___fltol
  1539  0FBB  1283               	bcf	3,5	;RP0=0, select bank0
  1540  0FBC  1303               	bcf	3,6	;RP1=0, select bank0
  1541  0FBD  0868               	movf	?___fltol,w
  1542  0FBE  1683               	bsf	3,5	;RP0=1, select bank1
  1543  0FBF  1303               	bcf	3,6	;RP1=0, select bank1
  1544  0FC0  07AA               	addwf	_derivativo^(0+128),f
  1545  0FC1  1803               	skipnc
  1546  0FC2  0AAB               	incf	(_derivativo+1)^(0+128),f
  1547  0FC3  1283               	bcf	3,5	;RP0=0, select bank0
  1548  0FC4  1303               	bcf	3,6	;RP1=0, select bank0
  1549  0FC5  0869               	movf	?___fltol+1,w
  1550  0FC6  1683               	bsf	3,5	;RP0=1, select bank1
  1551  0FC7  1303               	bcf	3,6	;RP1=0, select bank1
  1552  0FC8  07AB               	addwf	(_derivativo+1)^(0+128),f
  1553  0FC9                     l2642:
  1554                           
  1555                           ;main.c: 217:     temperaturaReferencia = temperatura;
  1556  0FC9  0843               	movf	(_temperatura+1)^(0+128),w
  1557  0FCA  00C1               	movwf	(_temperaturaReferencia+1)^(0+128)
  1558  0FCB  0842               	movf	_temperatura^(0+128),w
  1559  0FCC  00C0               	movwf	_temperaturaReferencia^(0+128)
  1560  0FCD                     l2644:
  1561                           
  1562                           ;main.c: 219:     PID = (proporcional + integral + derivativo);
  1563  0FCD  082C               	movf	_integral^(0+128),w
  1564  0FCE  072E               	addwf	_proporcional^(0+128),w
  1565  0FCF  00D3               	movwf	??_realizarCalculo^(0+128)
  1566  0FD0  082D               	movf	(_integral+1)^(0+128),w
  1567  0FD1  1803               	skipnc
  1568  0FD2  0A2D               	incf	(_integral+1)^(0+128),w
  1569  0FD3  072F               	addwf	(_proporcional+1)^(0+128),w
  1570  0FD4  00D4               	movwf	(??_realizarCalculo+1)^(0+128)
  1571  0FD5  082A               	movf	_derivativo^(0+128),w
  1572  0FD6  0753               	addwf	??_realizarCalculo^(0+128),w
  1573  0FD7  00A8               	movwf	_PID^(0+128)
  1574  0FD8  082B               	movf	(_derivativo+1)^(0+128),w
  1575  0FD9  1803               	skipnc
  1576  0FDA  0A2B               	incf	(_derivativo+1)^(0+128),w
  1577  0FDB  0754               	addwf	(??_realizarCalculo+1)^(0+128),w
  1578  0FDC  00A9               	movwf	(_PID+1)^(0+128)
  1579  0FDD                     l2646:
  1580                           
  1581                           ;main.c: 220:     PID = controleMaximoMinimo(PID);
  1582  0FDD  0829               	movf	(_PID+1)^(0+128),w
  1583  0FDE  00F1               	movwf	controleMaximoMinimo@valor+1
  1584  0FDF  0828               	movf	_PID^(0+128),w
  1585  0FE0  00F0               	movwf	controleMaximoMinimo@valor
  1586  0FE1  160A  118A  2703  120A  158A  	fcall	_controleMaximoMinimo
  1587  0FE6  0871               	movf	?_controleMaximoMinimo+1,w
  1588  0FE7  1683               	bsf	3,5	;RP0=1, select bank1
  1589  0FE8  1303               	bcf	3,6	;RP1=0, select bank1
  1590  0FE9  00A9               	movwf	(_PID+1)^(0+128)
  1591  0FEA  0870               	movf	?_controleMaximoMinimo,w
  1592  0FEB  00A8               	movwf	_PID^(0+128)
  1593  0FEC                     l2648:
  1594                           
  1595                           ;main.c: 222:     PWM1_Duty(PID, 4000);
  1596  0FEC  0829               	movf	(_PID+1)^(0+128),w
  1597  0FED  1283               	bcf	3,5	;RP0=0, select bank0
  1598  0FEE  1303               	bcf	3,6	;RP1=0, select bank0
  1599  0FEF  00ED               	movwf	PWM1_Duty@duty+1
  1600  0FF0  1683               	bsf	3,5	;RP0=1, select bank1
  1601  0FF1  1303               	bcf	3,6	;RP1=0, select bank1
  1602  0FF2  0828               	movf	_PID^(0+128),w
  1603  0FF3  1283               	bcf	3,5	;RP0=0, select bank0
  1604  0FF4  1303               	bcf	3,6	;RP1=0, select bank0
  1605  0FF5  00EC               	movwf	PWM1_Duty@duty
  1606  0FF6  30A0               	movlw	160
  1607  0FF7  00EE               	movwf	PWM1_Duty@freq
  1608  0FF8  300F               	movlw	15
  1609  0FF9  00EF               	movwf	PWM1_Duty@freq+1
  1610  0FFA  120A  158A  242E  120A  158A  	fcall	_PWM1_Duty
  1611  0FFF                     l143:
  1612  0FFF  0008               	return
  1613  1000                     __end_of_realizarCalculo:
  1614                           
  1615                           	psect	text2
  1616  171B                     __ptext2:	
  1617 ;; *************** function ___wmul *****************
  1618 ;; Defined at:
  1619 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  1620 ;; Parameters:    Size  Location     Type
  1621 ;;  multiplier      2    5[COMMON] unsigned int 
  1622 ;;  multiplicand    2    7[COMMON] unsigned int 
  1623 ;; Auto vars:     Size  Location     Type
  1624 ;;  product         2    9[COMMON] unsigned int 
  1625 ;; Return value:  Size  Location     Type
  1626 ;;                  2    5[COMMON] unsigned int 
  1627 ;; Registers used:
  1628 ;;		wreg, status,2, status,0
  1629 ;; Tracked objects:
  1630 ;;		On entry : 0/0
  1631 ;;		On exit  : 0/0
  1632 ;;		Unchanged: 0/0
  1633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1634 ;;      Params:         4       0       0       0       0
  1635 ;;      Locals:         2       0       0       0       0
  1636 ;;      Temps:          0       0       0       0       0
  1637 ;;      Totals:         6       0       0       0       0
  1638 ;;Total ram usage:        6 bytes
  1639 ;; Hardware stack levels used: 1
  1640 ;; This function calls:
  1641 ;;		Nothing
  1642 ;; This function is called by:
  1643 ;;		_realizarCalculo
  1644 ;; This function uses a non-reentrant model
  1645 ;;
  1646                           
  1647                           
  1648                           ;psect for function ___wmul
  1649  171B                     ___wmul:
  1650  171B                     l2414:	
  1651                           ;incstack = 0
  1652                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1653                           
  1654  171B  01F9               	clrf	___wmul@product
  1655  171C  01FA               	clrf	___wmul@product+1
  1656  171D                     l2416:
  1657  171D  1C75               	btfss	___wmul@multiplier,0
  1658  171E  2F20               	goto	u3281
  1659  171F  2F21               	goto	u3280
  1660  1720                     u3281:
  1661  1720  2F27               	goto	l368
  1662  1721                     u3280:
  1663  1721                     l2418:
  1664  1721  0877               	movf	___wmul@multiplicand,w
  1665  1722  07F9               	addwf	___wmul@product,f
  1666  1723  1803               	skipnc
  1667  1724  0AFA               	incf	___wmul@product+1,f
  1668  1725  0878               	movf	___wmul@multiplicand+1,w
  1669  1726  07FA               	addwf	___wmul@product+1,f
  1670  1727                     l368:
  1671  1727  3001               	movlw	1
  1672  1728                     u3295:
  1673  1728  1003               	clrc
  1674  1729  0DF7               	rlf	___wmul@multiplicand,f
  1675  172A  0DF8               	rlf	___wmul@multiplicand+1,f
  1676  172B  3EFF               	addlw	-1
  1677  172C  1D03               	skipz
  1678  172D  2F28               	goto	u3295
  1679  172E                     l2420:
  1680  172E  3001               	movlw	1
  1681  172F                     u3305:
  1682  172F  1003               	clrc
  1683  1730  0CF6               	rrf	___wmul@multiplier+1,f
  1684  1731  0CF5               	rrf	___wmul@multiplier,f
  1685  1732  3EFF               	addlw	-1
  1686  1733  1D03               	skipz
  1687  1734  2F2F               	goto	u3305
  1688  1735                     l2422:
  1689  1735  0875               	movf	___wmul@multiplier,w
  1690  1736  0476               	iorwf	___wmul@multiplier+1,w
  1691  1737  1D03               	btfss	3,2
  1692  1738  2F3A               	goto	u3311
  1693  1739  2F3B               	goto	u3310
  1694  173A                     u3311:
  1695  173A  2F1D               	goto	l2416
  1696  173B                     u3310:
  1697  173B                     l2424:
  1698  173B  087A               	movf	___wmul@product+1,w
  1699  173C  00F6               	movwf	?___wmul+1
  1700  173D  0879               	movf	___wmul@product,w
  1701  173E  00F5               	movwf	?___wmul
  1702  173F                     l370:
  1703  173F  0008               	return
  1704  1740                     __end_of___wmul:
  1705                           
  1706                           	psect	text3
  1707  0C2E                     __ptext3:	
  1708 ;; *************** function _PWM1_Duty *****************
  1709 ;; Defined at:
  1710 ;;		line 17 in file "PWM.c"
  1711 ;; Parameters:    Size  Location     Type
  1712 ;;  duty            2   76[BANK0 ] unsigned int 
  1713 ;;  freq            2   78[BANK0 ] unsigned int 
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;		None
  1716 ;; Return value:  Size  Location     Type
  1717 ;;                  1    wreg      void 
  1718 ;; Registers used:
  1719 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1725 ;;      Params:         0       4       0       0       0
  1726 ;;      Locals:         0       0       0       0       0
  1727 ;;      Temps:          0       0       2       0       0
  1728 ;;      Totals:         0       4       2       0       0
  1729 ;;Total ram usage:        6 bytes
  1730 ;; Hardware stack levels used: 1
  1731 ;; Hardware stack levels required when called: 2
  1732 ;; This function calls:
  1733 ;;		_PWM_Init
  1734 ;;		___aldiv
  1735 ;;		___fldiv
  1736 ;;		___flmul
  1737 ;;		___fltol
  1738 ;;		___xxtofl
  1739 ;; This function is called by:
  1740 ;;		_realizarCalculo
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744                           
  1745                           ;psect for function _PWM1_Duty
  1746  0C2E                     _PWM1_Duty:
  1747  0C2E                     l2390:	
  1748                           ;incstack = 0
  1749                           ; Regs used in _PWM1_Duty: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1750                           
  1751                           
  1752                           ;PWM.c: 17: void PWM1_Duty(unsigned int duty, unsigned int freq);PWM.c: 18: {;PWM.c: 19:
      +                             PWM_Init(freq);
  1753  0C2E  1283               	bcf	3,5	;RP0=0, select bank0
  1754  0C2F  1303               	bcf	3,6	;RP1=0, select bank0
  1755  0C30  086E               	movf	PWM1_Duty@freq,w
  1756  0C31  00A6               	movwf	PWM_Init@freq
  1757  0C32  086F               	movf	PWM1_Duty@freq+1,w
  1758  0C33  00A7               	movwf	PWM_Init@freq+1
  1759  0C34  01A8               	clrf	PWM_Init@freq+2
  1760  0C35  01A9               	clrf	PWM_Init@freq+3
  1761  0C36  120A  158A  2055  120A  158A  	fcall	_PWM_Init
  1762  0C3B                     l2392:
  1763                           
  1764                           ;PWM.c: 20:   if(duty<1024)
  1765  0C3B  3004               	movlw	4
  1766  0C3C  1283               	bcf	3,5	;RP0=0, select bank0
  1767  0C3D  1303               	bcf	3,6	;RP1=0, select bank0
  1768  0C3E  026D               	subwf	PWM1_Duty@duty+1,w
  1769  0C3F  3000               	movlw	0
  1770  0C40  1903               	skipnz
  1771  0C41  026C               	subwf	PWM1_Duty@duty,w
  1772  0C42  1803               	skipnc
  1773  0C43  2C45               	goto	u3201
  1774  0C44  2C46               	goto	u3200
  1775  0C45                     u3201:
  1776  0C45  2CE3               	goto	l194
  1777  0C46                     u3200:
  1778  0C46                     l2394:
  1779                           
  1780                           ;PWM.c: 21:   {;PWM.c: 22:     duty = ((float)duty/1023.0)*(4000000/(freq*4));
  1781  0C46  086C               	movf	PWM1_Duty@duty,w
  1782  0C47  00A6               	movwf	___xxtofl@val
  1783  0C48  086D               	movf	PWM1_Duty@duty+1,w
  1784  0C49  00A7               	movwf	___xxtofl@val+1
  1785  0C4A  01A8               	clrf	___xxtofl@val+2
  1786  0C4B  01A9               	clrf	___xxtofl@val+3
  1787  0C4C  3000               	movlw	0
  1788  0C4D  120A  118A  202E  120A  158A  	fcall	___xxtofl
  1789  0C52  1283               	bcf	3,5	;RP0=0, select bank0
  1790  0C53  1303               	bcf	3,6	;RP1=0, select bank0
  1791  0C54  0829               	movf	?___xxtofl+3,w
  1792  0C55  00BB               	movwf	___fldiv@b+3
  1793  0C56  0828               	movf	?___xxtofl+2,w
  1794  0C57  00BA               	movwf	___fldiv@b+2
  1795  0C58  0827               	movf	?___xxtofl+1,w
  1796  0C59  00B9               	movwf	___fldiv@b+1
  1797  0C5A  0826               	movf	?___xxtofl,w
  1798  0C5B  00B8               	movwf	___fldiv@b
  1799  0C5C  3044               	movlw	68
  1800  0C5D  00B7               	movwf	___fldiv@a+3
  1801  0C5E  307F               	movlw	127
  1802  0C5F  00B6               	movwf	___fldiv@a+2
  1803  0C60  30C0               	movlw	192
  1804  0C61  00B5               	movwf	___fldiv@a+1
  1805  0C62  3000               	movlw	0
  1806  0C63  00B4               	movwf	___fldiv@a
  1807  0C64  120A  118A  2286  120A  158A  	fcall	___fldiv
  1808  0C69  1283               	bcf	3,5	;RP0=0, select bank0
  1809  0C6A  1303               	bcf	3,6	;RP1=0, select bank0
  1810  0C6B  0837               	movf	?___fldiv+3,w
  1811  0C6C  00D5               	movwf	___flmul@a+3
  1812  0C6D  0836               	movf	?___fldiv+2,w
  1813  0C6E  00D4               	movwf	___flmul@a+2
  1814  0C6F  0835               	movf	?___fldiv+1,w
  1815  0C70  00D3               	movwf	___flmul@a+1
  1816  0C71  0834               	movf	?___fldiv,w
  1817  0C72  00D2               	movwf	___flmul@a
  1818  0C73  3000               	movlw	0
  1819  0C74  00F7               	movwf	___aldiv@dividend+3
  1820  0C75  303D               	movlw	61
  1821  0C76  00F6               	movwf	___aldiv@dividend+2
  1822  0C77  3009               	movlw	9
  1823  0C78  00F5               	movwf	___aldiv@dividend+1
  1824  0C79  3000               	movlw	0
  1825  0C7A  00F4               	movwf	___aldiv@dividend
  1826  0C7B  086F               	movf	PWM1_Duty@freq+1,w
  1827  0C7C  1683               	bsf	3,5	;RP0=1, select bank1
  1828  0C7D  1303               	bcf	3,6	;RP1=0, select bank1
  1829  0C7E  00D2               	movwf	(??_PWM1_Duty^(0+128)+1)
  1830  0C7F  1283               	bcf	3,5	;RP0=0, select bank0
  1831  0C80  1303               	bcf	3,6	;RP1=0, select bank0
  1832  0C81  086E               	movf	PWM1_Duty@freq,w
  1833  0C82  1683               	bsf	3,5	;RP0=1, select bank1
  1834  0C83  1303               	bcf	3,6	;RP1=0, select bank1
  1835  0C84  00D1               	movwf	??_PWM1_Duty^(0+128)
  1836  0C85  1003               	clrc
  1837  0C86  0DD1               	rlf	??_PWM1_Duty^(0+128),f
  1838  0C87  0DD2               	rlf	(??_PWM1_Duty^(0+128)+1),f
  1839  0C88  1003               	clrc
  1840  0C89  0DD1               	rlf	??_PWM1_Duty^(0+128),f
  1841  0C8A  0DD2               	rlf	(??_PWM1_Duty^(0+128)+1),f
  1842  0C8B  0851               	movf	??_PWM1_Duty^(0+128),w
  1843  0C8C  00F0               	movwf	___aldiv@divisor
  1844  0C8D  0852               	movf	(??_PWM1_Duty+1)^(0+128),w
  1845  0C8E  00F1               	movwf	___aldiv@divisor+1
  1846  0C8F  01F2               	clrf	___aldiv@divisor+2
  1847  0C90  01F3               	clrf	___aldiv@divisor+3
  1848  0C91  120A  158A  22DB  120A  158A  	fcall	___aldiv
  1849  0C96  0873               	movf	?___aldiv+3,w
  1850  0C97  1283               	bcf	3,5	;RP0=0, select bank0
  1851  0C98  1303               	bcf	3,6	;RP1=0, select bank0
  1852  0C99  00A9               	movwf	___xxtofl@val+3
  1853  0C9A  0872               	movf	?___aldiv+2,w
  1854  0C9B  00A8               	movwf	___xxtofl@val+2
  1855  0C9C  0871               	movf	?___aldiv+1,w
  1856  0C9D  00A7               	movwf	___xxtofl@val+1
  1857  0C9E  0870               	movf	?___aldiv,w
  1858  0C9F  00A6               	movwf	___xxtofl@val
  1859  0CA0  3001               	movlw	1
  1860  0CA1  120A  118A  202E  120A  158A  	fcall	___xxtofl
  1861  0CA6  1283               	bcf	3,5	;RP0=0, select bank0
  1862  0CA7  1303               	bcf	3,6	;RP1=0, select bank0
  1863  0CA8  0829               	movf	?___xxtofl+3,w
  1864  0CA9  00D1               	movwf	___flmul@b+3
  1865  0CAA  0828               	movf	?___xxtofl+2,w
  1866  0CAB  00D0               	movwf	___flmul@b+2
  1867  0CAC  0827               	movf	?___xxtofl+1,w
  1868  0CAD  00CF               	movwf	___flmul@b+1
  1869  0CAE  0826               	movf	?___xxtofl,w
  1870  0CAF  00CE               	movwf	___flmul@b
  1871  0CB0  120A  118A  2463  120A  158A  	fcall	___flmul
  1872  0CB5  1283               	bcf	3,5	;RP0=0, select bank0
  1873  0CB6  1303               	bcf	3,6	;RP1=0, select bank0
  1874  0CB7  0851               	movf	?___flmul+3,w
  1875  0CB8  00EB               	movwf	___fltol@f1+3
  1876  0CB9  0850               	movf	?___flmul+2,w
  1877  0CBA  00EA               	movwf	___fltol@f1+2
  1878  0CBB  084F               	movf	?___flmul+1,w
  1879  0CBC  00E9               	movwf	___fltol@f1+1
  1880  0CBD  084E               	movf	?___flmul,w
  1881  0CBE  00E8               	movwf	___fltol@f1
  1882  0CBF  120A  158A  2240  120A  158A  	fcall	___fltol
  1883  0CC4  1283               	bcf	3,5	;RP0=0, select bank0
  1884  0CC5  1303               	bcf	3,6	;RP1=0, select bank0
  1885  0CC6  0869               	movf	?___fltol+1,w
  1886  0CC7  00ED               	movwf	PWM1_Duty@duty+1
  1887  0CC8  0868               	movf	?___fltol,w
  1888  0CC9  00EC               	movwf	PWM1_Duty@duty
  1889  0CCA                     l2396:
  1890                           
  1891                           ;PWM.c: 23:     CCP1X = duty & 0b00000010;
  1892  0CCA  1297               	bcf	23,5	;volatile
  1893  0CCB                     l2398:
  1894                           
  1895                           ;PWM.c: 24:     CCP1Y = duty & 0b00000001;
  1896  0CCB  186C               	btfsc	PWM1_Duty@duty,0
  1897  0CCC  2CCE               	goto	u3211
  1898  0CCD  2CD2               	goto	u3210
  1899  0CCE                     u3211:
  1900  0CCE  1283               	bcf	3,5	;RP0=0, select bank0
  1901  0CCF  1303               	bcf	3,6	;RP1=0, select bank0
  1902  0CD0  1617               	bsf	23,4	;volatile
  1903  0CD1  2CD5               	goto	u3224
  1904  0CD2                     u3210:
  1905  0CD2  1283               	bcf	3,5	;RP0=0, select bank0
  1906  0CD3  1303               	bcf	3,6	;RP1=0, select bank0
  1907  0CD4  1217               	bcf	23,4	;volatile
  1908  0CD5                     u3224:
  1909  0CD5                     l2400:
  1910                           
  1911                           ;PWM.c: 25:     CCPR1L = (unsigned char)duty>>2;
  1912  0CD5  086C               	movf	PWM1_Duty@duty,w
  1913  0CD6  1683               	bsf	3,5	;RP0=1, select bank1
  1914  0CD7  1303               	bcf	3,6	;RP1=0, select bank1
  1915  0CD8  00D1               	movwf	??_PWM1_Duty^(0+128)
  1916  0CD9  3002               	movlw	2
  1917  0CDA                     u3235:
  1918  0CDA  1003               	clrc
  1919  0CDB  0CD1               	rrf	??_PWM1_Duty^(0+128),f
  1920  0CDC  3EFF               	addlw	-1
  1921  0CDD  1D03               	skipz
  1922  0CDE  2CDA               	goto	u3235
  1923  0CDF  0851               	movf	??_PWM1_Duty^(0+128),w
  1924  0CE0  1283               	bcf	3,5	;RP0=0, select bank0
  1925  0CE1  1303               	bcf	3,6	;RP1=0, select bank0
  1926  0CE2  0095               	movwf	21	;volatile
  1927  0CE3                     l194:
  1928  0CE3  0008               	return
  1929  0CE4                     __end_of_PWM1_Duty:
  1930                           
  1931                           	psect	text4
  1932  17CA                     __ptext4:	
  1933 ;; *************** function _lcd_init *****************
  1934 ;; Defined at:
  1935 ;;		line 57 in file "lcd.c"
  1936 ;; Parameters:    Size  Location     Type
  1937 ;;		None
  1938 ;; Auto vars:     Size  Location     Type
  1939 ;;		None
  1940 ;; Return value:  Size  Location     Type
  1941 ;;                  1    wreg      void 
  1942 ;; Registers used:
  1943 ;;		wreg, status,2, status,0, pclath, cstack
  1944 ;; Tracked objects:
  1945 ;;		On entry : 0/0
  1946 ;;		On exit  : 0/0
  1947 ;;		Unchanged: 0/0
  1948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1949 ;;      Params:         0       0       0       0       0
  1950 ;;      Locals:         0       0       0       0       0
  1951 ;;      Temps:          0       0       0       0       0
  1952 ;;      Totals:         0       0       0       0       0
  1953 ;;Total ram usage:        0 bytes
  1954 ;; Hardware stack levels used: 1
  1955 ;; Hardware stack levels required when called: 2
  1956 ;; This function calls:
  1957 ;;		_lcd_cmd
  1958 ;; This function is called by:
  1959 ;;		_main
  1960 ;; This function uses a non-reentrant model
  1961 ;;
  1962                           
  1963                           
  1964                           ;psect for function _lcd_init
  1965  17CA                     _lcd_init:
  1966  17CA                     l2662:	
  1967                           ;incstack = 0
  1968                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1969                           
  1970                           
  1971                           ;lcd.c: 59:  PORTEbits.RE1=0;
  1972  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  1973  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  1974  17CC  1089               	bcf	9,1	;volatile
  1975                           
  1976                           ;lcd.c: 60:  PORTEbits.RE0=0;
  1977  17CD  1009               	bcf	9,0	;volatile
  1978                           
  1979                           ;lcd.c: 62:  PORTEbits.RE1=1;
  1980  17CE  1489               	bsf	9,1	;volatile
  1981  17CF                     l2664:
  1982                           
  1983                           ;lcd.c: 64:  lcd_cmd(0x38);
  1984  17CF  3038               	movlw	56
  1985  17D0  160A  118A  26F3  160A  118A  	fcall	_lcd_cmd
  1986                           
  1987                           ;lcd.c: 66:  lcd_cmd(0x38);
  1988  17D5  3038               	movlw	56
  1989  17D6  160A  118A  26F3  160A  118A  	fcall	_lcd_cmd
  1990                           
  1991                           ;lcd.c: 68:  lcd_cmd(0x38);
  1992  17DB  3038               	movlw	56
  1993  17DC  160A  118A  26F3  160A  118A  	fcall	_lcd_cmd
  1994                           
  1995                           ;lcd.c: 69:  lcd_cmd(0x08);
  1996  17E1  3008               	movlw	8
  1997  17E2  160A  118A  26F3  160A  118A  	fcall	_lcd_cmd
  1998                           
  1999                           ;lcd.c: 70:  lcd_cmd(0x0F);
  2000  17E7  300F               	movlw	15
  2001  17E8  160A  118A  26F3  160A  118A  	fcall	_lcd_cmd
  2002                           
  2003                           ;lcd.c: 71:  lcd_cmd(0x01);
  2004  17ED  3001               	movlw	1
  2005  17EE  160A  118A  26F3  160A  118A  	fcall	_lcd_cmd
  2006                           
  2007                           ;lcd.c: 72:  lcd_cmd(0x38);
  2008  17F3  3038               	movlw	56
  2009  17F4  160A  118A  26F3  160A  118A  	fcall	_lcd_cmd
  2010                           
  2011                           ;lcd.c: 73:     lcd_cmd(0x80);
  2012  17F9  3080               	movlw	128
  2013  17FA  160A  118A  26F3  160A  118A  	fcall	_lcd_cmd
  2014  17FF                     l248:
  2015  17FF  0008               	return
  2016  1800                     __end_of_lcd_init:
  2017                           
  2018                           	psect	text5
  2019  00EA                     __ptext5:	
  2020 ;; *************** function _imprimirValoresLcd *****************
  2021 ;; Defined at:
  2022 ;;		line 133 in file "main.c"
  2023 ;; Parameters:    Size  Location     Type
  2024 ;;		None
  2025 ;; Auto vars:     Size  Location     Type
  2026 ;;  centena         2   16[BANK0 ] int 
  2027 ;;  milhar          2   14[BANK0 ] int 
  2028 ;; Return value:  Size  Location     Type
  2029 ;;                  1    wreg      void 
  2030 ;; Registers used:
  2031 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2032 ;; Tracked objects:
  2033 ;;		On entry : 0/0
  2034 ;;		On exit  : 0/0
  2035 ;;		Unchanged: 0/0
  2036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2037 ;;      Params:         0       0       0       0       0
  2038 ;;      Locals:         0       4       0       0       0
  2039 ;;      Temps:          0       1       0       0       0
  2040 ;;      Totals:         0       5       0       0       0
  2041 ;;Total ram usage:        5 bytes
  2042 ;; Hardware stack levels used: 1
  2043 ;; Hardware stack levels required when called: 3
  2044 ;; This function calls:
  2045 ;;		___awdiv
  2046 ;;		___awmod
  2047 ;;		_lcd_cmd
  2048 ;;		_lcd_str
  2049 ;;		_sprintf
  2050 ;; This function is called by:
  2051 ;;		_main
  2052 ;; This function uses a non-reentrant model
  2053 ;;
  2054                           
  2055                           
  2056                           ;psect for function _imprimirValoresLcd
  2057  00EA                     _imprimirValoresLcd:
  2058  00EA                     l2580:	
  2059                           ;incstack = 0
  2060                           ; Regs used in _imprimirValoresLcd: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2061                           
  2062                           
  2063                           ;main.c: 134:     if (menu == 1){
  2064  00EA  1683               	bsf	3,5	;RP0=1, select bank1
  2065  00EB  1303               	bcf	3,6	;RP1=0, select bank1
  2066  00EC  033E               	decf	_menu^(0+128),w
  2067  00ED  043F               	iorwf	(_menu+1)^(0+128),w
  2068  00EE  1D03               	btfss	3,2
  2069  00EF  28F1               	goto	u3681
  2070  00F0  28F2               	goto	u3680
  2071  00F1                     u3681:
  2072  00F1  28F8               	goto	l2584
  2073  00F2                     u3680:
  2074  00F2                     l2582:
  2075                           
  2076                           ;main.c: 135:         lcd_cmd(0x87);
  2077  00F2  3087               	movlw	135
  2078  00F3  160A  118A  26F3  120A  118A  	fcall	_lcd_cmd
  2079  00F8                     l2584:
  2080                           
  2081                           ;main.c: 138:     if (menu == 2){
  2082  00F8  3002               	movlw	2
  2083  00F9  1683               	bsf	3,5	;RP0=1, select bank1
  2084  00FA  1303               	bcf	3,6	;RP1=0, select bank1
  2085  00FB  063E               	xorwf	_menu^(0+128),w
  2086  00FC  043F               	iorwf	(_menu+1)^(0+128),w
  2087  00FD  1D03               	btfss	3,2
  2088  00FE  2900               	goto	u3691
  2089  00FF  2901               	goto	u3690
  2090  0100                     u3691:
  2091  0100  2907               	goto	l2588
  2092  0101                     u3690:
  2093  0101                     l2586:
  2094                           
  2095                           ;main.c: 139:         lcd_cmd(0xC7);
  2096  0101  30C7               	movlw	199
  2097  0102  160A  118A  26F3  120A  118A  	fcall	_lcd_cmd
  2098  0107                     l2588:
  2099                           
  2100                           ;main.c: 142:     if (menu == 3){
  2101  0107  3003               	movlw	3
  2102  0108  1683               	bsf	3,5	;RP0=1, select bank1
  2103  0109  1303               	bcf	3,6	;RP1=0, select bank1
  2104  010A  063E               	xorwf	_menu^(0+128),w
  2105  010B  043F               	iorwf	(_menu+1)^(0+128),w
  2106  010C  1D03               	btfss	3,2
  2107  010D  290F               	goto	u3701
  2108  010E  2910               	goto	u3700
  2109  010F                     u3701:
  2110  010F  2916               	goto	l2592
  2111  0110                     u3700:
  2112  0110                     l2590:
  2113                           
  2114                           ;main.c: 143:         lcd_cmd(0x89 +6);
  2115  0110  308F               	movlw	143
  2116  0111  160A  118A  26F3  120A  118A  	fcall	_lcd_cmd
  2117  0116                     l2592:
  2118                           
  2119                           ;main.c: 146:     if (menu == 4){
  2120  0116  3004               	movlw	4
  2121  0117  1683               	bsf	3,5	;RP0=1, select bank1
  2122  0118  1303               	bcf	3,6	;RP1=0, select bank1
  2123  0119  063E               	xorwf	_menu^(0+128),w
  2124  011A  043F               	iorwf	(_menu+1)^(0+128),w
  2125  011B  1D03               	btfss	3,2
  2126  011C  291E               	goto	u3711
  2127  011D  291F               	goto	u3710
  2128  011E                     u3711:
  2129  011E  2925               	goto	l2596
  2130  011F                     u3710:
  2131  011F                     l2594:
  2132                           
  2133                           ;main.c: 147:         lcd_cmd(0xC9 +6);
  2134  011F  30CF               	movlw	207
  2135  0120  160A  118A  26F3  120A  118A  	fcall	_lcd_cmd
  2136  0125                     l2596:
  2137                           
  2138                           ;main.c: 150:     if (setPoint != setPointReferencia){
  2139  0125  1683               	bsf	3,5	;RP0=1, select bank1
  2140  0126  1303               	bcf	3,6	;RP1=0, select bank1
  2141  0127  083B               	movf	(_setPointReferencia+1)^(0+128),w
  2142  0128  065D               	xorwf	(_setPoint+1)^(0+128),w
  2143  0129  1D03               	skipz
  2144  012A  292D               	goto	u3725
  2145  012B  083A               	movf	_setPointReferencia^(0+128),w
  2146  012C  065C               	xorwf	_setPoint^(0+128),w
  2147  012D                     u3725:
  2148  012D  1903               	skipnz
  2149  012E  2930               	goto	u3721
  2150  012F  2931               	goto	u3720
  2151  0130                     u3721:
  2152  0130  29B3               	goto	l2606
  2153  0131                     u3720:
  2154  0131                     l2598:
  2155                           
  2156                           ;main.c: 151:          int milhar = setPoint/1000;
  2157  0131  30E8               	movlw	232
  2158  0132  00F7               	movwf	___awdiv@divisor
  2159  0133  3003               	movlw	3
  2160  0134  00F8               	movwf	___awdiv@divisor+1
  2161  0135  085D               	movf	(_setPoint+1)^(0+128),w
  2162  0136  00FA               	movwf	___awdiv@dividend+1
  2163  0137  085C               	movf	_setPoint^(0+128),w
  2164  0138  00F9               	movwf	___awdiv@dividend
  2165  0139  120A  158A  2163  120A  118A  	fcall	___awdiv
  2166  013E  0878               	movf	?___awdiv+1,w
  2167  013F  1283               	bcf	3,5	;RP0=0, select bank0
  2168  0140  1303               	bcf	3,6	;RP1=0, select bank0
  2169  0141  00AF               	movwf	imprimirValoresLcd@milhar+1
  2170  0142  0877               	movf	?___awdiv,w
  2171  0143  00AE               	movwf	imprimirValoresLcd@milhar
  2172                           
  2173                           ;main.c: 152:          int centena = (setPoint%1000)/100;
  2174  0144  3064               	movlw	100
  2175  0145  00F7               	movwf	___awdiv@divisor
  2176  0146  3000               	movlw	0
  2177  0147  00F8               	movwf	___awdiv@divisor+1
  2178  0148  1683               	bsf	3,5	;RP0=1, select bank1
  2179  0149  1303               	bcf	3,6	;RP1=0, select bank1
  2180  014A  085D               	movf	(_setPoint+1)^(0+128),w
  2181  014B  00F3               	movwf	___awmod@dividend+1
  2182  014C  085C               	movf	_setPoint^(0+128),w
  2183  014D  00F2               	movwf	___awmod@dividend
  2184  014E  30E8               	movlw	232
  2185  014F  00F0               	movwf	___awmod@divisor
  2186  0150  3003               	movlw	3
  2187  0151  00F1               	movwf	___awmod@divisor+1
  2188  0152  120A  158A  210A  120A  118A  	fcall	___awmod
  2189  0157  0871               	movf	?___awmod+1,w
  2190  0158  00FA               	movwf	___awdiv@dividend+1
  2191  0159  0870               	movf	?___awmod,w
  2192  015A  00F9               	movwf	___awdiv@dividend
  2193  015B  120A  158A  2163  120A  118A  	fcall	___awdiv
  2194  0160  0878               	movf	?___awdiv+1,w
  2195  0161  1283               	bcf	3,5	;RP0=0, select bank0
  2196  0162  1303               	bcf	3,6	;RP1=0, select bank0
  2197  0163  00B1               	movwf	imprimirValoresLcd@centena+1
  2198  0164  0877               	movf	?___awdiv,w
  2199  0165  00B0               	movwf	imprimirValoresLcd@centena
  2200                           
  2201                           ;main.c: 154:          lcd_cmd(0x83);
  2202  0166  3083               	movlw	131
  2203  0167  160A  118A  26F3  120A  118A  	fcall	_lcd_cmd
  2204  016C                     l2600:
  2205                           
  2206                           ;main.c: 155:          lcd_str("  C  ");
  2207  016C  3029               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2208  016D  00F2               	movwf	lcd_str@str
  2209  016E  3080               	movlw	128
  2210  016F  00F3               	movwf	lcd_str@str+1
  2211  0170  120A  118A  2003  120A  118A  	fcall	_lcd_str
  2212  0175                     l2602:
  2213                           
  2214                           ;main.c: 156:          lcd_cmd(0x83);
  2215  0175  3083               	movlw	131
  2216  0176  160A  118A  26F3  120A  118A  	fcall	_lcd_cmd
  2217                           
  2218                           ;main.c: 157:          sprintf(string, "%d", milhar);
  2219  017B  302F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2220  017C  1283               	bcf	3,5	;RP0=0, select bank0
  2221  017D  1303               	bcf	3,6	;RP1=0, select bank0
  2222  017E  00AD               	movwf	??_imprimirValoresLcd
  2223  017F  082D               	movf	??_imprimirValoresLcd,w
  2224  0180  00A0               	movwf	sprintf@f
  2225  0181  082F               	movf	imprimirValoresLcd@milhar+1,w
  2226  0182  00A2               	movwf	?_sprintf+2
  2227  0183  082E               	movf	imprimirValoresLcd@milhar,w
  2228  0184  00A1               	movwf	?_sprintf+1
  2229  0185  3090               	movlw	(low (_string| (0+256)))& (0+255)
  2230  0186  120A  158A  24E4  120A  118A  	fcall	_sprintf
  2231                           
  2232                           ;main.c: 158:          lcd_str(string);
  2233  018B  3090               	movlw	(low (_string| (0+256)))& (0+255)
  2234  018C  00F2               	movwf	lcd_str@str
  2235  018D  3001               	movlw	1
  2236  018E  00F3               	movwf	lcd_str@str+1
  2237  018F  120A  118A  2003  120A  118A  	fcall	_lcd_str
  2238                           
  2239                           ;main.c: 159:          sprintf(string, "%d", centena);
  2240  0194  302F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2241  0195  1283               	bcf	3,5	;RP0=0, select bank0
  2242  0196  1303               	bcf	3,6	;RP1=0, select bank0
  2243  0197  00AD               	movwf	??_imprimirValoresLcd
  2244  0198  082D               	movf	??_imprimirValoresLcd,w
  2245  0199  00A0               	movwf	sprintf@f
  2246  019A  0831               	movf	imprimirValoresLcd@centena+1,w
  2247  019B  00A2               	movwf	?_sprintf+2
  2248  019C  0830               	movf	imprimirValoresLcd@centena,w
  2249  019D  00A1               	movwf	?_sprintf+1
  2250  019E  3090               	movlw	(low (_string| (0+256)))& (0+255)
  2251  019F  120A  158A  24E4  120A  118A  	fcall	_sprintf
  2252                           
  2253                           ;main.c: 160:          lcd_str(string);
  2254  01A4  3090               	movlw	(low (_string| (0+256)))& (0+255)
  2255  01A5  00F2               	movwf	lcd_str@str
  2256  01A6  3001               	movlw	1
  2257  01A7  00F3               	movwf	lcd_str@str+1
  2258  01A8  120A  118A  2003  120A  118A  	fcall	_lcd_str
  2259  01AD                     l2604:
  2260                           
  2261                           ;main.c: 162:          setPointReferencia = setPoint;
  2262  01AD  1683               	bsf	3,5	;RP0=1, select bank1
  2263  01AE  1303               	bcf	3,6	;RP1=0, select bank1
  2264  01AF  085D               	movf	(_setPoint+1)^(0+128),w
  2265  01B0  00BB               	movwf	(_setPointReferencia+1)^(0+128)
  2266  01B1  085C               	movf	_setPoint^(0+128),w
  2267  01B2  00BA               	movwf	_setPointReferencia^(0+128)
  2268  01B3                     l2606:
  2269                           
  2270                           ;main.c: 165:     if (kp != kpReferencia){
  2271  01B3  0835               	movf	(_kpReferencia+1)^(0+128),w
  2272  01B4  065B               	xorwf	(_kp+1)^(0+128),w
  2273  01B5  1D03               	skipz
  2274  01B6  29B9               	goto	u3735
  2275  01B7  0834               	movf	_kpReferencia^(0+128),w
  2276  01B8  065A               	xorwf	_kp^(0+128),w
  2277  01B9                     u3735:
  2278  01B9  1903               	skipnz
  2279  01BA  29BC               	goto	u3731
  2280  01BB  29BD               	goto	u3730
  2281  01BC                     u3731:
  2282  01BC  29F9               	goto	l2616
  2283  01BD                     u3730:
  2284  01BD                     l2608:
  2285                           
  2286                           ;main.c: 166:         lcd_cmd(0xC3);
  2287  01BD  30C3               	movlw	195
  2288  01BE  160A  118A  26F3  120A  118A  	fcall	_lcd_cmd
  2289  01C3                     l2610:
  2290                           
  2291                           ;main.c: 167:         lcd_str("     ");
  2292  01C3  3023               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2293  01C4  00F2               	movwf	lcd_str@str
  2294  01C5  3080               	movlw	128
  2295  01C6  00F3               	movwf	lcd_str@str+1
  2296  01C7  120A  118A  2003  120A  118A  	fcall	_lcd_str
  2297  01CC                     l2612:
  2298                           
  2299                           ;main.c: 168:         lcd_cmd(0xC3);
  2300  01CC  30C3               	movlw	195
  2301  01CD  160A  118A  26F3  120A  118A  	fcall	_lcd_cmd
  2302                           
  2303                           ;main.c: 169:         sprintf(string, "%d", kp);
  2304  01D2  302F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2305  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  2306  01D4  1303               	bcf	3,6	;RP1=0, select bank0
  2307  01D5  00AD               	movwf	??_imprimirValoresLcd
  2308  01D6  082D               	movf	??_imprimirValoresLcd,w
  2309  01D7  00A0               	movwf	sprintf@f
  2310  01D8  1683               	bsf	3,5	;RP0=1, select bank1
  2311  01D9  1303               	bcf	3,6	;RP1=0, select bank1
  2312  01DA  085B               	movf	(_kp+1)^(0+128),w
  2313  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  2314  01DC  1303               	bcf	3,6	;RP1=0, select bank0
  2315  01DD  00A2               	movwf	?_sprintf+2
  2316  01DE  1683               	bsf	3,5	;RP0=1, select bank1
  2317  01DF  1303               	bcf	3,6	;RP1=0, select bank1
  2318  01E0  085A               	movf	_kp^(0+128),w
  2319  01E1  1283               	bcf	3,5	;RP0=0, select bank0
  2320  01E2  1303               	bcf	3,6	;RP1=0, select bank0
  2321  01E3  00A1               	movwf	?_sprintf+1
  2322  01E4  3090               	movlw	(low (_string| (0+256)))& (0+255)
  2323  01E5  120A  158A  24E4  120A  118A  	fcall	_sprintf
  2324                           
  2325                           ;main.c: 170:         lcd_str(string);
  2326  01EA  3090               	movlw	(low (_string| (0+256)))& (0+255)
  2327  01EB  00F2               	movwf	lcd_str@str
  2328  01EC  3001               	movlw	1
  2329  01ED  00F3               	movwf	lcd_str@str+1
  2330  01EE  120A  118A  2003  120A  118A  	fcall	_lcd_str
  2331  01F3                     l2614:
  2332                           
  2333                           ;main.c: 171:         kpReferencia = kp;
  2334  01F3  1683               	bsf	3,5	;RP0=1, select bank1
  2335  01F4  1303               	bcf	3,6	;RP1=0, select bank1
  2336  01F5  085B               	movf	(_kp+1)^(0+128),w
  2337  01F6  00B5               	movwf	(_kpReferencia+1)^(0+128)
  2338  01F7  085A               	movf	_kp^(0+128),w
  2339  01F8  00B4               	movwf	_kpReferencia^(0+128)
  2340  01F9                     l2616:
  2341                           
  2342                           ;main.c: 174:     if (ki != kiReferencia){
  2343  01F9  0833               	movf	(_kiReferencia+1)^(0+128),w
  2344  01FA  0659               	xorwf	(_ki+1)^(0+128),w
  2345  01FB  1D03               	skipz
  2346  01FC  29FF               	goto	u3745
  2347  01FD  0832               	movf	_kiReferencia^(0+128),w
  2348  01FE  0658               	xorwf	_ki^(0+128),w
  2349  01FF                     u3745:
  2350  01FF  1903               	skipnz
  2351  0200  2A02               	goto	u3741
  2352  0201  2A03               	goto	u3740
  2353  0202                     u3741:
  2354  0202  2A3F               	goto	l2626
  2355  0203                     u3740:
  2356  0203                     l2618:
  2357                           
  2358                           ;main.c: 175:         lcd_cmd(0x89 +2);
  2359  0203  308B               	movlw	139
  2360  0204  160A  118A  26F3  120A  118A  	fcall	_lcd_cmd
  2361  0209                     l2620:
  2362                           
  2363                           ;main.c: 176:         lcd_str("     ");
  2364  0209  3023               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2365  020A  00F2               	movwf	lcd_str@str
  2366  020B  3080               	movlw	128
  2367  020C  00F3               	movwf	lcd_str@str+1
  2368  020D  120A  118A  2003  120A  118A  	fcall	_lcd_str
  2369  0212                     l2622:
  2370                           
  2371                           ;main.c: 177:         lcd_cmd(0x89 +2);
  2372  0212  308B               	movlw	139
  2373  0213  160A  118A  26F3  120A  118A  	fcall	_lcd_cmd
  2374                           
  2375                           ;main.c: 178:         sprintf(string, "%d", ki);
  2376  0218  302F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2377  0219  1283               	bcf	3,5	;RP0=0, select bank0
  2378  021A  1303               	bcf	3,6	;RP1=0, select bank0
  2379  021B  00AD               	movwf	??_imprimirValoresLcd
  2380  021C  082D               	movf	??_imprimirValoresLcd,w
  2381  021D  00A0               	movwf	sprintf@f
  2382  021E  1683               	bsf	3,5	;RP0=1, select bank1
  2383  021F  1303               	bcf	3,6	;RP1=0, select bank1
  2384  0220  0859               	movf	(_ki+1)^(0+128),w
  2385  0221  1283               	bcf	3,5	;RP0=0, select bank0
  2386  0222  1303               	bcf	3,6	;RP1=0, select bank0
  2387  0223  00A2               	movwf	?_sprintf+2
  2388  0224  1683               	bsf	3,5	;RP0=1, select bank1
  2389  0225  1303               	bcf	3,6	;RP1=0, select bank1
  2390  0226  0858               	movf	_ki^(0+128),w
  2391  0227  1283               	bcf	3,5	;RP0=0, select bank0
  2392  0228  1303               	bcf	3,6	;RP1=0, select bank0
  2393  0229  00A1               	movwf	?_sprintf+1
  2394  022A  3090               	movlw	(low (_string| (0+256)))& (0+255)
  2395  022B  120A  158A  24E4  120A  118A  	fcall	_sprintf
  2396                           
  2397                           ;main.c: 179:         lcd_str(string);
  2398  0230  3090               	movlw	(low (_string| (0+256)))& (0+255)
  2399  0231  00F2               	movwf	lcd_str@str
  2400  0232  3001               	movlw	1
  2401  0233  00F3               	movwf	lcd_str@str+1
  2402  0234  120A  118A  2003  120A  118A  	fcall	_lcd_str
  2403  0239                     l2624:
  2404                           
  2405                           ;main.c: 180:         kiReferencia = ki;
  2406  0239  1683               	bsf	3,5	;RP0=1, select bank1
  2407  023A  1303               	bcf	3,6	;RP1=0, select bank1
  2408  023B  0859               	movf	(_ki+1)^(0+128),w
  2409  023C  00B3               	movwf	(_kiReferencia+1)^(0+128)
  2410  023D  0858               	movf	_ki^(0+128),w
  2411  023E  00B2               	movwf	_kiReferencia^(0+128)
  2412  023F                     l2626:
  2413                           
  2414                           ;main.c: 192:     if (PID != PIDRef){
  2415  023F  0823               	movf	(_PIDRef+1)^(0+128),w
  2416  0240  0629               	xorwf	(_PID+1)^(0+128),w
  2417  0241  1D03               	skipz
  2418  0242  2A45               	goto	u3755
  2419  0243  0822               	movf	_PIDRef^(0+128),w
  2420  0244  0628               	xorwf	_PID^(0+128),w
  2421  0245                     u3755:
  2422  0245  1903               	skipnz
  2423  0246  2A48               	goto	u3751
  2424  0247  2A49               	goto	u3750
  2425  0248                     u3751:
  2426  0248  2A85               	goto	l140
  2427  0249                     u3750:
  2428  0249                     l2628:
  2429                           
  2430                           ;main.c: 193:         lcd_cmd(0xC9 +2);
  2431  0249  30CB               	movlw	203
  2432  024A  160A  118A  26F3  120A  118A  	fcall	_lcd_cmd
  2433  024F                     l2630:
  2434                           
  2435                           ;main.c: 194:         lcd_str("     ");
  2436  024F  3023               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2437  0250  00F2               	movwf	lcd_str@str
  2438  0251  3080               	movlw	128
  2439  0252  00F3               	movwf	lcd_str@str+1
  2440  0253  120A  118A  2003  120A  118A  	fcall	_lcd_str
  2441  0258                     l2632:
  2442                           
  2443                           ;main.c: 195:         lcd_cmd(0xC9 +2);
  2444  0258  30CB               	movlw	203
  2445  0259  160A  118A  26F3  120A  118A  	fcall	_lcd_cmd
  2446                           
  2447                           ;main.c: 196:         sprintf(string, "%d", PID);
  2448  025E  302F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2449  025F  1283               	bcf	3,5	;RP0=0, select bank0
  2450  0260  1303               	bcf	3,6	;RP1=0, select bank0
  2451  0261  00AD               	movwf	??_imprimirValoresLcd
  2452  0262  082D               	movf	??_imprimirValoresLcd,w
  2453  0263  00A0               	movwf	sprintf@f
  2454  0264  1683               	bsf	3,5	;RP0=1, select bank1
  2455  0265  1303               	bcf	3,6	;RP1=0, select bank1
  2456  0266  0829               	movf	(_PID+1)^(0+128),w
  2457  0267  1283               	bcf	3,5	;RP0=0, select bank0
  2458  0268  1303               	bcf	3,6	;RP1=0, select bank0
  2459  0269  00A2               	movwf	?_sprintf+2
  2460  026A  1683               	bsf	3,5	;RP0=1, select bank1
  2461  026B  1303               	bcf	3,6	;RP1=0, select bank1
  2462  026C  0828               	movf	_PID^(0+128),w
  2463  026D  1283               	bcf	3,5	;RP0=0, select bank0
  2464  026E  1303               	bcf	3,6	;RP1=0, select bank0
  2465  026F  00A1               	movwf	?_sprintf+1
  2466  0270  3090               	movlw	(low (_string| (0+256)))& (0+255)
  2467  0271  120A  158A  24E4  120A  118A  	fcall	_sprintf
  2468                           
  2469                           ;main.c: 197:         lcd_str(string);
  2470  0276  3090               	movlw	(low (_string| (0+256)))& (0+255)
  2471  0277  00F2               	movwf	lcd_str@str
  2472  0278  3001               	movlw	1
  2473  0279  00F3               	movwf	lcd_str@str+1
  2474  027A  120A  118A  2003  120A  118A  	fcall	_lcd_str
  2475  027F                     l2634:
  2476                           
  2477                           ;main.c: 198:         PIDRef = PID;
  2478  027F  1683               	bsf	3,5	;RP0=1, select bank1
  2479  0280  1303               	bcf	3,6	;RP1=0, select bank1
  2480  0281  0829               	movf	(_PID+1)^(0+128),w
  2481  0282  00A3               	movwf	(_PIDRef+1)^(0+128)
  2482  0283  0828               	movf	_PID^(0+128),w
  2483  0284  00A2               	movwf	_PIDRef^(0+128)
  2484  0285                     l140:
  2485  0285  0008               	return
  2486  0286                     __end_of_imprimirValoresLcd:
  2487                           
  2488                           	psect	text6
  2489  0CE4                     __ptext6:	
  2490 ;; *************** function _sprintf *****************
  2491 ;; Defined at:
  2492 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  2493 ;; Parameters:    Size  Location     Type
  2494 ;;  sp              1    wreg     PTR unsigned char 
  2495 ;;		 -> string(32), 
  2496 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  2497 ;;		 -> STR_9(3), STR_7(3), STR_5(3), STR_3(3), 
  2498 ;;		 -> STR_2(3), 
  2499 ;; Auto vars:     Size  Location     Type
  2500 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  2501 ;;		 -> string(32), 
  2502 ;;  tmpval          4    0        struct .
  2503 ;;  val             2    9[BANK0 ] unsigned int 
  2504 ;;  cp              2    0        PTR const unsigned char 
  2505 ;;  len             2    0        unsigned int 
  2506 ;;  c               1   12[BANK0 ] unsigned char 
  2507 ;;  prec            1    8[BANK0 ] char 
  2508 ;;  flag            1    7[BANK0 ] unsigned char 
  2509 ;;  ap              1    6[BANK0 ] PTR void [1]
  2510 ;;		 -> ?_sprintf(2), 
  2511 ;; Return value:  Size  Location     Type
  2512 ;;                  2    0[BANK0 ] int 
  2513 ;; Registers used:
  2514 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2515 ;; Tracked objects:
  2516 ;;		On entry : 0/0
  2517 ;;		On exit  : 0/0
  2518 ;;		Unchanged: 0/0
  2519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2520 ;;      Params:         0       3       0       0       0
  2521 ;;      Locals:         0       7       0       0       0
  2522 ;;      Temps:          0       3       0       0       0
  2523 ;;      Totals:         0      13       0       0       0
  2524 ;;Total ram usage:       13 bytes
  2525 ;; Hardware stack levels used: 1
  2526 ;; Hardware stack levels required when called: 1
  2527 ;; This function calls:
  2528 ;;		___lwdiv
  2529 ;;		___lwmod
  2530 ;; This function is called by:
  2531 ;;		_imprimirValoresLcd
  2532 ;; This function uses a non-reentrant model
  2533 ;;
  2534                           
  2535                           
  2536                           ;psect for function _sprintf
  2537  0CE4                     _sprintf:
  2538                           
  2539                           ;incstack = 0
  2540                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2541                           ;sprintf@sp stored from wreg
  2542  0CE4  1283               	bcf	3,5	;RP0=0, select bank0
  2543  0CE5  1303               	bcf	3,6	;RP1=0, select bank0
  2544  0CE6  00AB               	movwf	sprintf@sp
  2545  0CE7                     l2312:
  2546                           
  2547                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  2548  0CE7  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2549  0CE8  00A3               	movwf	??_sprintf
  2550  0CE9  0823               	movf	??_sprintf,w
  2551  0CEA  00A6               	movwf	sprintf@ap
  2552                           
  2553                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2554  0CEB  2DB5               	goto	l2364
  2555  0CEC                     l2314:
  2556                           
  2557                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2558  0CEC  3025               	movlw	37
  2559  0CED  062C               	xorwf	sprintf@c,w
  2560  0CEE  1903               	btfsc	3,2
  2561  0CEF  2CF1               	goto	u3101
  2562  0CF0  2CF2               	goto	u3100
  2563  0CF1                     u3101:
  2564  0CF1  2CFE               	goto	l2320
  2565  0CF2                     u3100:
  2566  0CF2                     l2316:
  2567                           
  2568                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2569  0CF2  082C               	movf	sprintf@c,w
  2570  0CF3  00A3               	movwf	??_sprintf
  2571  0CF4  082B               	movf	sprintf@sp,w
  2572  0CF5  0084               	movwf	4
  2573  0CF6  0823               	movf	??_sprintf,w
  2574  0CF7  1783               	bsf	3,7	;select IRP bank2
  2575  0CF8  0080               	movwf	0
  2576  0CF9                     l2318:
  2577  0CF9  3001               	movlw	1
  2578  0CFA  00A3               	movwf	??_sprintf
  2579  0CFB  0823               	movf	??_sprintf,w
  2580  0CFC  07AB               	addwf	sprintf@sp,f
  2581                           
  2582                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 559:    continue;
  2583  0CFD  2DB5               	goto	l2364
  2584  0CFE                     l2320:
  2585                           
  2586                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2587  0CFE  01A7               	clrf	sprintf@flag
  2588  0CFF                     l2324:	
  2589                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  2590                           
  2591  0CFF  3001               	movlw	1
  2592  0D00  07A0               	addwf	sprintf@f,f
  2593  0D01  30FF               	movlw	-1
  2594  0D02  0720               	addwf	sprintf@f,w
  2595  0D03  0084               	movwf	4
  2596  0D04  120A  158A  200A  120A  158A  	fcall	stringdir
  2597  0D09  00AC               	movwf	sprintf@c
  2598  0D0A  00A3               	movwf	??_sprintf
  2599  0D0B  01A4               	clrf	??_sprintf+1
  2600                           
  2601                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2602                           ; Switch size 1, requested type "simple"
  2603                           ; Number of cases is 1, Range of values is 0 to 0
  2604                           ; switch strategies available:
  2605                           ; Name         Instructions Cycles
  2606                           ; simple_byte            4     3 (average)
  2607                           ; direct_byte           11     8 (fixed)
  2608                           ; jumptable            260     6 (fixed)
  2609                           ;	Chosen strategy is simple_byte
  2610  0D0C  0824               	movf	??_sprintf+1,w
  2611  0D0D  3A00               	xorlw	0	; case 0
  2612  0D0E  1903               	skipnz
  2613  0D0F  2D11               	goto	l2730
  2614  0D10  2DB5               	goto	l2364
  2615  0D11                     l2730:
  2616                           
  2617                           ; Switch size 1, requested type "simple"
  2618                           ; Number of cases is 3, Range of values is 0 to 105
  2619                           ; switch strategies available:
  2620                           ; Name         Instructions Cycles
  2621                           ; simple_byte           10     6 (average)
  2622                           ; jumptable            260     6 (fixed)
  2623                           ;	Chosen strategy is simple_byte
  2624  0D11  0823               	movf	??_sprintf,w
  2625  0D12  3A00               	xorlw	0	; case 0
  2626  0D13  1903               	skipnz
  2627  0D14  2DC7               	goto	l2366
  2628  0D15  3A64               	xorlw	100	; case 100
  2629  0D16  1903               	skipnz
  2630  0D17  2D1C               	goto	l2326
  2631  0D18  3A0D               	xorlw	13	; case 105
  2632  0D19  1903               	skipnz
  2633  0D1A  2D1C               	goto	l2326
  2634  0D1B  2DB5               	goto	l2364
  2635  0D1C                     l2326:
  2636                           
  2637                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2638  0D1C  0826               	movf	sprintf@ap,w
  2639  0D1D  0084               	movwf	4
  2640  0D1E  1383               	bcf	3,7	;select IRP bank0
  2641  0D1F  0800               	movf	0,w
  2642  0D20  00A9               	movwf	sprintf@val
  2643  0D21  0A84               	incf	4,f
  2644  0D22  0800               	movf	0,w
  2645  0D23  00AA               	movwf	sprintf@val+1
  2646  0D24                     l2328:
  2647  0D24  3002               	movlw	2
  2648  0D25  00A3               	movwf	??_sprintf
  2649  0D26  0823               	movf	??_sprintf,w
  2650  0D27  07A6               	addwf	sprintf@ap,f
  2651  0D28                     l2330:
  2652                           
  2653                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2654  0D28  1FAA               	btfss	sprintf@val+1,7
  2655  0D29  2D2B               	goto	u3111
  2656  0D2A  2D2C               	goto	u3110
  2657  0D2B                     u3111:
  2658  0D2B  2D35               	goto	l2336
  2659  0D2C                     u3110:
  2660  0D2C                     l2332:
  2661                           
  2662                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2663  0D2C  3003               	movlw	3
  2664  0D2D  00A3               	movwf	??_sprintf
  2665  0D2E  0823               	movf	??_sprintf,w
  2666  0D2F  04A7               	iorwf	sprintf@flag,f
  2667  0D30                     l2334:
  2668                           
  2669                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2670  0D30  09A9               	comf	sprintf@val,f
  2671  0D31  09AA               	comf	sprintf@val+1,f
  2672  0D32  0AA9               	incf	sprintf@val,f
  2673  0D33  1903               	skipnz
  2674  0D34  0AAA               	incf	sprintf@val+1,f
  2675  0D35                     l2336:
  2676                           
  2677                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2678  0D35  01AC               	clrf	sprintf@c
  2679  0D36  0AAC               	incf	sprintf@c,f
  2680  0D37                     l2342:
  2681                           
  2682                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2683  0D37  082C               	movf	sprintf@c,w
  2684  0D38  00A3               	movwf	??_sprintf
  2685  0D39  0723               	addwf	??_sprintf,w
  2686  0D3A  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2687  0D3B  0084               	movwf	4
  2688  0D3C  120A  158A  200A  120A  158A  	fcall	stringdir
  2689  0D41  00A4               	movwf	??_sprintf+1
  2690  0D42  120A  158A  200A  120A  158A  	fcall	stringdir
  2691  0D47  00A5               	movwf	??_sprintf+2
  2692  0D48  0825               	movf	??_sprintf+2,w
  2693  0D49  022A               	subwf	sprintf@val+1,w
  2694  0D4A  1D03               	skipz
  2695  0D4B  2D4E               	goto	u3125
  2696  0D4C  0824               	movf	??_sprintf+1,w
  2697  0D4D  0229               	subwf	sprintf@val,w
  2698  0D4E                     u3125:
  2699  0D4E  1803               	skipnc
  2700  0D4F  2D51               	goto	u3121
  2701  0D50  2D52               	goto	u3120
  2702  0D51                     u3121:
  2703  0D51  2D53               	goto	l2346
  2704  0D52                     u3120:
  2705  0D52  2D5D               	goto	l2348
  2706  0D53                     l2346:
  2707  0D53  3001               	movlw	1
  2708  0D54  00A3               	movwf	??_sprintf
  2709  0D55  0823               	movf	??_sprintf,w
  2710  0D56  07AC               	addwf	sprintf@c,f
  2711  0D57  3005               	movlw	5
  2712  0D58  062C               	xorwf	sprintf@c,w
  2713  0D59  1D03               	btfss	3,2
  2714  0D5A  2D5C               	goto	u3131
  2715  0D5B  2D5D               	goto	u3130
  2716  0D5C                     u3131:
  2717  0D5C  2D37               	goto	l2342
  2718  0D5D                     u3130:
  2719  0D5D                     l2348:
  2720                           
  2721                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2722  0D5D  0827               	movf	sprintf@flag,w
  2723  0D5E  3903               	andlw	3
  2724  0D5F  1903               	btfsc	3,2
  2725  0D60  2D62               	goto	u3141
  2726  0D61  2D63               	goto	u3140
  2727  0D62                     u3141:
  2728  0D62  2D6E               	goto	l2354
  2729  0D63                     u3140:
  2730  0D63                     l2350:
  2731                           
  2732                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2733  0D63  302D               	movlw	45
  2734  0D64  00A3               	movwf	??_sprintf
  2735  0D65  082B               	movf	sprintf@sp,w
  2736  0D66  0084               	movwf	4
  2737  0D67  0823               	movf	??_sprintf,w
  2738  0D68  1783               	bsf	3,7	;select IRP bank2
  2739  0D69  0080               	movwf	0
  2740  0D6A                     l2352:
  2741  0D6A  3001               	movlw	1
  2742  0D6B  00A3               	movwf	??_sprintf
  2743  0D6C  0823               	movf	??_sprintf,w
  2744  0D6D  07AB               	addwf	sprintf@sp,f
  2745  0D6E                     l2354:
  2746                           
  2747                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2748  0D6E  082C               	movf	sprintf@c,w
  2749  0D6F  00A3               	movwf	??_sprintf
  2750  0D70  0823               	movf	??_sprintf,w
  2751  0D71  00A8               	movwf	sprintf@prec
  2752                           
  2753                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2754  0D72  2DAC               	goto	l2362
  2755  0D73                     l2356:
  2756                           
  2757                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2758  0D73  300A               	movlw	10
  2759  0D74  00F8               	movwf	___lwmod@divisor
  2760  0D75  3000               	movlw	0
  2761  0D76  00F9               	movwf	___lwmod@divisor+1
  2762  0D77  0828               	movf	sprintf@prec,w
  2763  0D78  00A3               	movwf	??_sprintf
  2764  0D79  0723               	addwf	??_sprintf,w
  2765  0D7A  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2766  0D7B  0084               	movwf	4
  2767  0D7C  120A  158A  200A  120A  158A  	fcall	stringdir
  2768  0D81  00F0               	movwf	___lwdiv@divisor
  2769  0D82  120A  158A  200A  120A  158A  	fcall	stringdir
  2770  0D87  00F1               	movwf	___lwdiv@divisor+1
  2771  0D88  082A               	movf	sprintf@val+1,w
  2772  0D89  00F3               	movwf	___lwdiv@dividend+1
  2773  0D8A  0829               	movf	sprintf@val,w
  2774  0D8B  00F2               	movwf	___lwdiv@dividend
  2775  0D8C  120A  158A  20C6  120A  158A  	fcall	___lwdiv
  2776  0D91  0871               	movf	?___lwdiv+1,w
  2777  0D92  00FB               	movwf	___lwmod@dividend+1
  2778  0D93  0870               	movf	?___lwdiv,w
  2779  0D94  00FA               	movwf	___lwmod@dividend
  2780  0D95  120A  158A  208C  120A  158A  	fcall	___lwmod
  2781  0D9A  0878               	movf	?___lwmod,w
  2782  0D9B  3E30               	addlw	48
  2783  0D9C  1283               	bcf	3,5	;RP0=0, select bank0
  2784  0D9D  1303               	bcf	3,6	;RP1=0, select bank0
  2785  0D9E  00A4               	movwf	??_sprintf+1
  2786  0D9F  0824               	movf	??_sprintf+1,w
  2787  0DA0  00AC               	movwf	sprintf@c
  2788  0DA1                     l2358:
  2789                           
  2790                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2791  0DA1  082C               	movf	sprintf@c,w
  2792  0DA2  00A3               	movwf	??_sprintf
  2793  0DA3  082B               	movf	sprintf@sp,w
  2794  0DA4  0084               	movwf	4
  2795  0DA5  0823               	movf	??_sprintf,w
  2796  0DA6  1783               	bsf	3,7	;select IRP bank2
  2797  0DA7  0080               	movwf	0
  2798  0DA8                     l2360:
  2799  0DA8  3001               	movlw	1
  2800  0DA9  00A3               	movwf	??_sprintf
  2801  0DAA  0823               	movf	??_sprintf,w
  2802  0DAB  07AB               	addwf	sprintf@sp,f
  2803  0DAC                     l2362:
  2804                           
  2805                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2806  0DAC  30FF               	movlw	255
  2807  0DAD  00A3               	movwf	??_sprintf
  2808  0DAE  0823               	movf	??_sprintf,w
  2809  0DAF  07A8               	addwf	sprintf@prec,f
  2810  0DB0  0A28               	incf	sprintf@prec,w
  2811  0DB1  1D03               	btfss	3,2
  2812  0DB2  2DB4               	goto	u3151
  2813  0DB3  2DB5               	goto	u3150
  2814  0DB4                     u3151:
  2815  0DB4  2D73               	goto	l2356
  2816  0DB5                     u3150:
  2817  0DB5                     l2364:
  2818                           
  2819                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2820  0DB5  3001               	movlw	1
  2821  0DB6  07A0               	addwf	sprintf@f,f
  2822  0DB7  30FF               	movlw	-1
  2823  0DB8  0720               	addwf	sprintf@f,w
  2824  0DB9  0084               	movwf	4
  2825  0DBA  120A  158A  200A  120A  158A  	fcall	stringdir
  2826  0DBF  00A3               	movwf	??_sprintf
  2827  0DC0  0823               	movf	??_sprintf,w
  2828  0DC1  00AC               	movwf	sprintf@c
  2829  0DC2  082C               	movf	sprintf@c,w
  2830  0DC3  1D03               	btfss	3,2
  2831  0DC4  2DC6               	goto	u3161
  2832  0DC5  2DC7               	goto	u3160
  2833  0DC6                     u3161:
  2834  0DC6  2CEC               	goto	l2314
  2835  0DC7                     u3160:
  2836  0DC7                     l2366:
  2837                           
  2838                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2839  0DC7  082B               	movf	sprintf@sp,w
  2840  0DC8  0084               	movwf	4
  2841  0DC9  1783               	bsf	3,7	;select IRP bank2
  2842  0DCA  0180               	clrf	0
  2843  0DCB                     l364:
  2844  0DCB  0008               	return
  2845  0DCC                     __end_of_sprintf:
  2846                           
  2847                           	psect	text7
  2848  088C                     __ptext7:	
  2849 ;; *************** function ___lwmod *****************
  2850 ;; Defined at:
  2851 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  2852 ;; Parameters:    Size  Location     Type
  2853 ;;  divisor         2    8[COMMON] unsigned int 
  2854 ;;  dividend        2   10[COMMON] unsigned int 
  2855 ;; Auto vars:     Size  Location     Type
  2856 ;;  counter         1   13[COMMON] unsigned char 
  2857 ;; Return value:  Size  Location     Type
  2858 ;;                  2    8[COMMON] unsigned int 
  2859 ;; Registers used:
  2860 ;;		wreg, status,2, status,0
  2861 ;; Tracked objects:
  2862 ;;		On entry : 0/0
  2863 ;;		On exit  : 0/0
  2864 ;;		Unchanged: 0/0
  2865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2866 ;;      Params:         4       0       0       0       0
  2867 ;;      Locals:         1       0       0       0       0
  2868 ;;      Temps:          1       0       0       0       0
  2869 ;;      Totals:         6       0       0       0       0
  2870 ;;Total ram usage:        6 bytes
  2871 ;; Hardware stack levels used: 1
  2872 ;; This function calls:
  2873 ;;		Nothing
  2874 ;; This function is called by:
  2875 ;;		_sprintf
  2876 ;; This function uses a non-reentrant model
  2877 ;;
  2878                           
  2879                           
  2880                           ;psect for function ___lwmod
  2881  088C                     ___lwmod:
  2882  088C                     l1934:	
  2883                           ;incstack = 0
  2884                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2885                           
  2886  088C  0878               	movf	___lwmod@divisor,w
  2887  088D  0479               	iorwf	___lwmod@divisor+1,w
  2888  088E  1903               	btfsc	3,2
  2889  088F  2891               	goto	u2211
  2890  0890  2892               	goto	u2210
  2891  0891                     u2211:
  2892  0891  28C1               	goto	l1952
  2893  0892                     u2210:
  2894  0892                     l1936:
  2895  0892  01FD               	clrf	___lwmod@counter
  2896  0893  0AFD               	incf	___lwmod@counter,f
  2897  0894  28A0               	goto	l1942
  2898  0895                     l1938:
  2899  0895  3001               	movlw	1
  2900  0896                     u2225:
  2901  0896  1003               	clrc
  2902  0897  0DF8               	rlf	___lwmod@divisor,f
  2903  0898  0DF9               	rlf	___lwmod@divisor+1,f
  2904  0899  3EFF               	addlw	-1
  2905  089A  1D03               	skipz
  2906  089B  2896               	goto	u2225
  2907  089C                     l1940:
  2908  089C  3001               	movlw	1
  2909  089D  00FC               	movwf	??___lwmod
  2910  089E  087C               	movf	??___lwmod,w
  2911  089F  07FD               	addwf	___lwmod@counter,f
  2912  08A0                     l1942:
  2913  08A0  1FF9               	btfss	___lwmod@divisor+1,7
  2914  08A1  28A3               	goto	u2231
  2915  08A2  28A4               	goto	u2230
  2916  08A3                     u2231:
  2917  08A3  2895               	goto	l1938
  2918  08A4                     u2230:
  2919  08A4                     l1944:
  2920  08A4  0879               	movf	___lwmod@divisor+1,w
  2921  08A5  027B               	subwf	___lwmod@dividend+1,w
  2922  08A6  1D03               	skipz
  2923  08A7  28AA               	goto	u2245
  2924  08A8  0878               	movf	___lwmod@divisor,w
  2925  08A9  027A               	subwf	___lwmod@dividend,w
  2926  08AA                     u2245:
  2927  08AA  1C03               	skipc
  2928  08AB  28AD               	goto	u2241
  2929  08AC  28AE               	goto	u2240
  2930  08AD                     u2241:
  2931  08AD  28B4               	goto	l1948
  2932  08AE                     u2240:
  2933  08AE                     l1946:
  2934  08AE  0878               	movf	___lwmod@divisor,w
  2935  08AF  02FA               	subwf	___lwmod@dividend,f
  2936  08B0  0879               	movf	___lwmod@divisor+1,w
  2937  08B1  1C03               	skipc
  2938  08B2  03FB               	decf	___lwmod@dividend+1,f
  2939  08B3  02FB               	subwf	___lwmod@dividend+1,f
  2940  08B4                     l1948:
  2941  08B4  3001               	movlw	1
  2942  08B5                     u2255:
  2943  08B5  1003               	clrc
  2944  08B6  0CF9               	rrf	___lwmod@divisor+1,f
  2945  08B7  0CF8               	rrf	___lwmod@divisor,f
  2946  08B8  3EFF               	addlw	-1
  2947  08B9  1D03               	skipz
  2948  08BA  28B5               	goto	u2255
  2949  08BB                     l1950:
  2950  08BB  3001               	movlw	1
  2951  08BC  02FD               	subwf	___lwmod@counter,f
  2952  08BD  1D03               	btfss	3,2
  2953  08BE  28C0               	goto	u2261
  2954  08BF  28C1               	goto	u2260
  2955  08C0                     u2261:
  2956  08C0  28A4               	goto	l1944
  2957  08C1                     u2260:
  2958  08C1                     l1952:
  2959  08C1  087B               	movf	___lwmod@dividend+1,w
  2960  08C2  00F9               	movwf	?___lwmod+1
  2961  08C3  087A               	movf	___lwmod@dividend,w
  2962  08C4  00F8               	movwf	?___lwmod
  2963  08C5                     l650:
  2964  08C5  0008               	return
  2965  08C6                     __end_of___lwmod:
  2966                           
  2967                           	psect	text8
  2968  08C6                     __ptext8:	
  2969 ;; *************** function ___lwdiv *****************
  2970 ;; Defined at:
  2971 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  2972 ;; Parameters:    Size  Location     Type
  2973 ;;  divisor         2    0[COMMON] unsigned int 
  2974 ;;  dividend        2    2[COMMON] unsigned int 
  2975 ;; Auto vars:     Size  Location     Type
  2976 ;;  quotient        2    5[COMMON] unsigned int 
  2977 ;;  counter         1    7[COMMON] unsigned char 
  2978 ;; Return value:  Size  Location     Type
  2979 ;;                  2    0[COMMON] unsigned int 
  2980 ;; Registers used:
  2981 ;;		wreg, status,2, status,0
  2982 ;; Tracked objects:
  2983 ;;		On entry : 0/0
  2984 ;;		On exit  : 0/0
  2985 ;;		Unchanged: 0/0
  2986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2987 ;;      Params:         4       0       0       0       0
  2988 ;;      Locals:         3       0       0       0       0
  2989 ;;      Temps:          1       0       0       0       0
  2990 ;;      Totals:         8       0       0       0       0
  2991 ;;Total ram usage:        8 bytes
  2992 ;; Hardware stack levels used: 1
  2993 ;; This function calls:
  2994 ;;		Nothing
  2995 ;; This function is called by:
  2996 ;;		_sprintf
  2997 ;; This function uses a non-reentrant model
  2998 ;;
  2999                           
  3000                           
  3001                           ;psect for function ___lwdiv
  3002  08C6                     ___lwdiv:
  3003  08C6                     l1908:	
  3004                           ;incstack = 0
  3005                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3006                           
  3007  08C6  01F5               	clrf	___lwdiv@quotient
  3008  08C7  01F6               	clrf	___lwdiv@quotient+1
  3009  08C8                     l1910:
  3010  08C8  0870               	movf	___lwdiv@divisor,w
  3011  08C9  0471               	iorwf	___lwdiv@divisor+1,w
  3012  08CA  1903               	btfsc	3,2
  3013  08CB  28CD               	goto	u2141
  3014  08CC  28CE               	goto	u2140
  3015  08CD                     u2141:
  3016  08CD  2905               	goto	l1930
  3017  08CE                     u2140:
  3018  08CE                     l1912:
  3019  08CE  01F7               	clrf	___lwdiv@counter
  3020  08CF  0AF7               	incf	___lwdiv@counter,f
  3021  08D0  28DC               	goto	l1918
  3022  08D1                     l1914:
  3023  08D1  3001               	movlw	1
  3024  08D2                     u2155:
  3025  08D2  1003               	clrc
  3026  08D3  0DF0               	rlf	___lwdiv@divisor,f
  3027  08D4  0DF1               	rlf	___lwdiv@divisor+1,f
  3028  08D5  3EFF               	addlw	-1
  3029  08D6  1D03               	skipz
  3030  08D7  28D2               	goto	u2155
  3031  08D8                     l1916:
  3032  08D8  3001               	movlw	1
  3033  08D9  00F4               	movwf	??___lwdiv
  3034  08DA  0874               	movf	??___lwdiv,w
  3035  08DB  07F7               	addwf	___lwdiv@counter,f
  3036  08DC                     l1918:
  3037  08DC  1FF1               	btfss	___lwdiv@divisor+1,7
  3038  08DD  28DF               	goto	u2161
  3039  08DE  28E0               	goto	u2160
  3040  08DF                     u2161:
  3041  08DF  28D1               	goto	l1914
  3042  08E0                     u2160:
  3043  08E0                     l1920:
  3044  08E0  3001               	movlw	1
  3045  08E1                     u2175:
  3046  08E1  1003               	clrc
  3047  08E2  0DF5               	rlf	___lwdiv@quotient,f
  3048  08E3  0DF6               	rlf	___lwdiv@quotient+1,f
  3049  08E4  3EFF               	addlw	-1
  3050  08E5  1D03               	skipz
  3051  08E6  28E1               	goto	u2175
  3052  08E7  0871               	movf	___lwdiv@divisor+1,w
  3053  08E8  0273               	subwf	___lwdiv@dividend+1,w
  3054  08E9  1D03               	skipz
  3055  08EA  28ED               	goto	u2185
  3056  08EB  0870               	movf	___lwdiv@divisor,w
  3057  08EC  0272               	subwf	___lwdiv@dividend,w
  3058  08ED                     u2185:
  3059  08ED  1C03               	skipc
  3060  08EE  28F0               	goto	u2181
  3061  08EF  28F1               	goto	u2180
  3062  08F0                     u2181:
  3063  08F0  28F8               	goto	l1926
  3064  08F1                     u2180:
  3065  08F1                     l1922:
  3066  08F1  0870               	movf	___lwdiv@divisor,w
  3067  08F2  02F2               	subwf	___lwdiv@dividend,f
  3068  08F3  0871               	movf	___lwdiv@divisor+1,w
  3069  08F4  1C03               	skipc
  3070  08F5  03F3               	decf	___lwdiv@dividend+1,f
  3071  08F6  02F3               	subwf	___lwdiv@dividend+1,f
  3072  08F7                     l1924:
  3073  08F7  1475               	bsf	___lwdiv@quotient,0
  3074  08F8                     l1926:
  3075  08F8  3001               	movlw	1
  3076  08F9                     u2195:
  3077  08F9  1003               	clrc
  3078  08FA  0CF1               	rrf	___lwdiv@divisor+1,f
  3079  08FB  0CF0               	rrf	___lwdiv@divisor,f
  3080  08FC  3EFF               	addlw	-1
  3081  08FD  1D03               	skipz
  3082  08FE  28F9               	goto	u2195
  3083  08FF                     l1928:
  3084  08FF  3001               	movlw	1
  3085  0900  02F7               	subwf	___lwdiv@counter,f
  3086  0901  1D03               	btfss	3,2
  3087  0902  2904               	goto	u2201
  3088  0903  2905               	goto	u2200
  3089  0904                     u2201:
  3090  0904  28E0               	goto	l1920
  3091  0905                     u2200:
  3092  0905                     l1930:
  3093  0905  0876               	movf	___lwdiv@quotient+1,w
  3094  0906  00F1               	movwf	?___lwdiv+1
  3095  0907  0875               	movf	___lwdiv@quotient,w
  3096  0908  00F0               	movwf	?___lwdiv
  3097  0909                     l640:
  3098  0909  0008               	return
  3099  090A                     __end_of___lwdiv:
  3100                           
  3101                           	psect	text9
  3102  0003                     __ptext9:	
  3103 ;; *************** function _lcd_str *****************
  3104 ;; Defined at:
  3105 ;;		line 76 in file "lcd.c"
  3106 ;; Parameters:    Size  Location     Type
  3107 ;;  str             2    2[COMMON] PTR const unsigned char 
  3108 ;;		 -> STR_11(12), STR_10(12), STR_8(6), STR_6(6), 
  3109 ;;		 -> STR_4(6), string(32), STR_1(6), 
  3110 ;; Auto vars:     Size  Location     Type
  3111 ;;  i               1    5[COMMON] unsigned char 
  3112 ;; Return value:  Size  Location     Type
  3113 ;;                  1    wreg      void 
  3114 ;; Registers used:
  3115 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3116 ;; Tracked objects:
  3117 ;;		On entry : 0/0
  3118 ;;		On exit  : 0/0
  3119 ;;		Unchanged: 0/0
  3120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3121 ;;      Params:         2       0       0       0       0
  3122 ;;      Locals:         1       0       0       0       0
  3123 ;;      Temps:          1       0       0       0       0
  3124 ;;      Totals:         4       0       0       0       0
  3125 ;;Total ram usage:        4 bytes
  3126 ;; Hardware stack levels used: 1
  3127 ;; Hardware stack levels required when called: 2
  3128 ;; This function calls:
  3129 ;;		_lcd_dat
  3130 ;; This function is called by:
  3131 ;;		_imprimirValoresLcd
  3132 ;;		_main
  3133 ;; This function uses a non-reentrant model
  3134 ;;
  3135                           
  3136                           
  3137                           ;psect for function _lcd_str
  3138  0003                     _lcd_str:
  3139  0003                     l2304:	
  3140                           ;incstack = 0
  3141                           ; Regs used in _lcd_str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3142                           
  3143                           
  3144                           ;lcd.c: 76: void lcd_str(const char* str);lcd.c: 77: {;lcd.c: 78:  unsigned char i=0;
  3145  0003  01F5               	clrf	lcd_str@i
  3146                           
  3147                           ;lcd.c: 80:  while(str[i] != 0 )
  3148  0004  281A               	goto	l2310
  3149  0005                     l2306:
  3150                           
  3151                           ;lcd.c: 81:  {;lcd.c: 82:    lcd_dat(str[i]);
  3152  0005  0875               	movf	lcd_str@i,w
  3153  0006  0772               	addwf	lcd_str@str,w
  3154  0007  0084               	movwf	4
  3155  0008  0873               	movf	lcd_str@str+1,w
  3156  0009  1803               	skipnc
  3157  000A  0A73               	incf	lcd_str@str+1,w
  3158  000B  00FF               	movwf	btemp+1
  3159  000C  120A  158A  2000  120A  118A  	fcall	stringtab
  3160  0011  120A  158A  2045  120A  118A  	fcall	_lcd_dat
  3161  0016                     l2308:
  3162                           
  3163                           ;lcd.c: 83:    i++;
  3164  0016  3001               	movlw	1
  3165  0017  00F4               	movwf	??_lcd_str
  3166  0018  0874               	movf	??_lcd_str,w
  3167  0019  07F5               	addwf	lcd_str@i,f
  3168  001A                     l2310:
  3169                           
  3170                           ;lcd.c: 80:  while(str[i] != 0 )
  3171  001A  0875               	movf	lcd_str@i,w
  3172  001B  0772               	addwf	lcd_str@str,w
  3173  001C  0084               	movwf	4
  3174  001D  0873               	movf	lcd_str@str+1,w
  3175  001E  1803               	skipnc
  3176  001F  0A73               	incf	lcd_str@str+1,w
  3177  0020  1283               	bcf	3,5	;RP0=0, select bank0
  3178  0021  1303               	bcf	3,6	;RP1=0, select bank0
  3179  0022  00FF               	movwf	btemp+1
  3180  0023  120A  158A  2000  120A  118A  	fcall	stringtab
  3181  0028  3A00               	xorlw	0
  3182  0029  1D03               	skipz
  3183  002A  282C               	goto	u3091
  3184  002B  282D               	goto	u3090
  3185  002C                     u3091:
  3186  002C  2805               	goto	l2306
  3187  002D                     u3090:
  3188  002D                     l254:
  3189  002D  0008               	return
  3190  002E                     __end_of_lcd_str:
  3191                           
  3192                           	psect	text10
  3193  0845                     __ptext10:	
  3194 ;; *************** function _lcd_dat *****************
  3195 ;; Defined at:
  3196 ;;		line 46 in file "lcd.c"
  3197 ;; Parameters:    Size  Location     Type
  3198 ;;  val             1    wreg     unsigned char 
  3199 ;; Auto vars:     Size  Location     Type
  3200 ;;  val             1    1[COMMON] unsigned char 
  3201 ;; Return value:  Size  Location     Type
  3202 ;;                  1    wreg      void 
  3203 ;; Registers used:
  3204 ;;		wreg, status,2, status,0, pclath, cstack
  3205 ;; Tracked objects:
  3206 ;;		On entry : 0/0
  3207 ;;		On exit  : 0/0
  3208 ;;		Unchanged: 0/0
  3209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3210 ;;      Params:         0       0       0       0       0
  3211 ;;      Locals:         1       0       0       0       0
  3212 ;;      Temps:          0       0       0       0       0
  3213 ;;      Totals:         1       0       0       0       0
  3214 ;;Total ram usage:        1 bytes
  3215 ;; Hardware stack levels used: 1
  3216 ;; Hardware stack levels required when called: 1
  3217 ;; This function calls:
  3218 ;;		_lcd_wr
  3219 ;; This function is called by:
  3220 ;;		_lcd_str
  3221 ;; This function uses a non-reentrant model
  3222 ;;
  3223                           
  3224                           
  3225                           ;psect for function _lcd_dat
  3226  0845                     _lcd_dat:
  3227                           
  3228                           ;incstack = 0
  3229                           ; Regs used in _lcd_dat: [wreg+status,2+status,0+pclath+cstack]
  3230                           ;lcd_dat@val stored from wreg
  3231  0845  00F1               	movwf	lcd_dat@val
  3232  0846                     l1862:
  3233                           
  3234                           ;lcd.c: 46: void lcd_dat(unsigned char val);lcd.c: 47: {;lcd.c: 48:  PORTEbits.RE1=1;
  3235  0846  1283               	bcf	3,5	;RP0=0, select bank0
  3236  0847  1303               	bcf	3,6	;RP1=0, select bank0
  3237  0848  1489               	bsf	9,1	;volatile
  3238  0849                     l1864:
  3239                           
  3240                           ;lcd.c: 49:         lcd_wr(val);
  3241  0849  0871               	movf	lcd_dat@val,w
  3242  084A  160A  118A  26C2  120A  158A  	fcall	_lcd_wr
  3243  084F                     l1866:
  3244                           
  3245                           ;lcd.c: 50:         PORTEbits.RE0=1;
  3246  084F  1283               	bcf	3,5	;RP0=0, select bank0
  3247  0850  1303               	bcf	3,6	;RP1=0, select bank0
  3248  0851  1409               	bsf	9,0	;volatile
  3249  0852                     l1868:
  3250                           
  3251                           ;lcd.c: 52:         PORTEbits.RE1=0;
  3252  0852  1089               	bcf	9,1	;volatile
  3253  0853                     l1870:
  3254                           
  3255                           ;lcd.c: 54:  PORTEbits.RE1=1;
  3256  0853  1489               	bsf	9,1	;volatile
  3257  0854                     l245:
  3258  0854  0008               	return
  3259  0855                     __end_of_lcd_dat:
  3260                           
  3261                           	psect	text11
  3262  16F3                     __ptext11:	
  3263 ;; *************** function _lcd_cmd *****************
  3264 ;; Defined at:
  3265 ;;		line 35 in file "lcd.c"
  3266 ;; Parameters:    Size  Location     Type
  3267 ;;  val             1    wreg     unsigned char 
  3268 ;; Auto vars:     Size  Location     Type
  3269 ;;  val             1    1[COMMON] unsigned char 
  3270 ;; Return value:  Size  Location     Type
  3271 ;;                  1    wreg      void 
  3272 ;; Registers used:
  3273 ;;		wreg, status,2, status,0, pclath, cstack
  3274 ;; Tracked objects:
  3275 ;;		On entry : 0/0
  3276 ;;		On exit  : 0/0
  3277 ;;		Unchanged: 0/0
  3278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3279 ;;      Params:         0       0       0       0       0
  3280 ;;      Locals:         1       0       0       0       0
  3281 ;;      Temps:          0       0       0       0       0
  3282 ;;      Totals:         1       0       0       0       0
  3283 ;;Total ram usage:        1 bytes
  3284 ;; Hardware stack levels used: 1
  3285 ;; Hardware stack levels required when called: 1
  3286 ;; This function calls:
  3287 ;;		_lcd_wr
  3288 ;; This function is called by:
  3289 ;;		_imprimirValoresLcd
  3290 ;;		_main
  3291 ;;		_lcd_init
  3292 ;; This function uses a non-reentrant model
  3293 ;;
  3294                           
  3295                           
  3296                           ;psect for function _lcd_cmd
  3297  16F3                     _lcd_cmd:
  3298                           
  3299                           ;incstack = 0
  3300                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  3301                           ;lcd_cmd@val stored from wreg
  3302  16F3  00F1               	movwf	lcd_cmd@val
  3303  16F4                     l2294:
  3304                           
  3305                           ;lcd.c: 35: void lcd_cmd(unsigned char val);lcd.c: 36: {;lcd.c: 37:  PORTEbits.RE1=1;
  3306  16F4  1283               	bcf	3,5	;RP0=0, select bank0
  3307  16F5  1303               	bcf	3,6	;RP1=0, select bank0
  3308  16F6  1489               	bsf	9,1	;volatile
  3309  16F7                     l2296:
  3310                           
  3311                           ;lcd.c: 38:         lcd_wr(val);
  3312  16F7  0871               	movf	lcd_cmd@val,w
  3313  16F8  160A  118A  26C2  160A  118A  	fcall	_lcd_wr
  3314  16FD                     l2298:
  3315                           
  3316                           ;lcd.c: 39:         PORTEbits.RE0=0;
  3317  16FD  1283               	bcf	3,5	;RP0=0, select bank0
  3318  16FE  1303               	bcf	3,6	;RP1=0, select bank0
  3319  16FF  1009               	bcf	9,0	;volatile
  3320  1700                     l2300:
  3321                           
  3322                           ;lcd.c: 41:         PORTEbits.RE1=0;
  3323  1700  1089               	bcf	9,1	;volatile
  3324  1701                     l2302:
  3325                           
  3326                           ;lcd.c: 43:  PORTEbits.RE1=1;
  3327  1701  1489               	bsf	9,1	;volatile
  3328  1702                     l242:
  3329  1702  0008               	return
  3330  1703                     __end_of_lcd_cmd:
  3331                           
  3332                           	psect	text12
  3333  16C2                     __ptext12:	
  3334 ;; *************** function _lcd_wr *****************
  3335 ;; Defined at:
  3336 ;;		line 30 in file "lcd.c"
  3337 ;; Parameters:    Size  Location     Type
  3338 ;;  val             1    wreg     unsigned char 
  3339 ;; Auto vars:     Size  Location     Type
  3340 ;;  val             1    0[COMMON] unsigned char 
  3341 ;; Return value:  Size  Location     Type
  3342 ;;                  1    wreg      void 
  3343 ;; Registers used:
  3344 ;;		wreg
  3345 ;; Tracked objects:
  3346 ;;		On entry : 0/0
  3347 ;;		On exit  : 0/0
  3348 ;;		Unchanged: 0/0
  3349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3350 ;;      Params:         0       0       0       0       0
  3351 ;;      Locals:         1       0       0       0       0
  3352 ;;      Temps:          0       0       0       0       0
  3353 ;;      Totals:         1       0       0       0       0
  3354 ;;Total ram usage:        1 bytes
  3355 ;; Hardware stack levels used: 1
  3356 ;; This function calls:
  3357 ;;		Nothing
  3358 ;; This function is called by:
  3359 ;;		_lcd_cmd
  3360 ;;		_lcd_dat
  3361 ;; This function uses a non-reentrant model
  3362 ;;
  3363                           
  3364                           
  3365                           ;psect for function _lcd_wr
  3366  16C2                     _lcd_wr:
  3367                           
  3368                           ;incstack = 0
  3369                           ; Regs used in _lcd_wr: [wreg]
  3370                           ;lcd_wr@val stored from wreg
  3371  16C2  00F0               	movwf	lcd_wr@val
  3372  16C3                     l1804:
  3373                           
  3374                           ;lcd.c: 30: void lcd_wr(unsigned char val);lcd.c: 31: {;lcd.c: 32:   PORTD=val;
  3375  16C3  0870               	movf	lcd_wr@val,w
  3376  16C4  1283               	bcf	3,5	;RP0=0, select bank0
  3377  16C5  1303               	bcf	3,6	;RP1=0, select bank0
  3378  16C6  0088               	movwf	8	;volatile
  3379  16C7                     l239:
  3380  16C7  0008               	return
  3381  16C8                     __end_of_lcd_wr:
  3382                           
  3383                           	psect	text13
  3384  090A                     __ptext13:	
  3385 ;; *************** function ___awmod *****************
  3386 ;; Defined at:
  3387 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  3388 ;; Parameters:    Size  Location     Type
  3389 ;;  divisor         2    0[COMMON] int 
  3390 ;;  dividend        2    2[COMMON] int 
  3391 ;; Auto vars:     Size  Location     Type
  3392 ;;  sign            1    6[COMMON] unsigned char 
  3393 ;;  counter         1    5[COMMON] unsigned char 
  3394 ;; Return value:  Size  Location     Type
  3395 ;;                  2    0[COMMON] int 
  3396 ;; Registers used:
  3397 ;;		wreg, status,2, status,0
  3398 ;; Tracked objects:
  3399 ;;		On entry : 0/0
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3403 ;;      Params:         4       0       0       0       0
  3404 ;;      Locals:         2       0       0       0       0
  3405 ;;      Temps:          1       0       0       0       0
  3406 ;;      Totals:         7       0       0       0       0
  3407 ;;Total ram usage:        7 bytes
  3408 ;; Hardware stack levels used: 1
  3409 ;; This function calls:
  3410 ;;		Nothing
  3411 ;; This function is called by:
  3412 ;;		_imprimirValoresLcd
  3413 ;; This function uses a non-reentrant model
  3414 ;;
  3415                           
  3416                           
  3417                           ;psect for function ___awmod
  3418  090A                     ___awmod:
  3419  090A                     l2472:	
  3420                           ;incstack = 0
  3421                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3422                           
  3423  090A  01F6               	clrf	___awmod@sign
  3424  090B                     l2474:
  3425  090B  1FF3               	btfss	___awmod@dividend+1,7
  3426  090C  290E               	goto	u3421
  3427  090D  290F               	goto	u3420
  3428  090E                     u3421:
  3429  090E  2916               	goto	l2480
  3430  090F                     u3420:
  3431  090F                     l2476:
  3432  090F  09F2               	comf	___awmod@dividend,f
  3433  0910  09F3               	comf	___awmod@dividend+1,f
  3434  0911  0AF2               	incf	___awmod@dividend,f
  3435  0912  1903               	skipnz
  3436  0913  0AF3               	incf	___awmod@dividend+1,f
  3437  0914                     l2478:
  3438  0914  01F6               	clrf	___awmod@sign
  3439  0915  0AF6               	incf	___awmod@sign,f
  3440  0916                     l2480:
  3441  0916  1FF1               	btfss	___awmod@divisor+1,7
  3442  0917  2919               	goto	u3431
  3443  0918  291A               	goto	u3430
  3444  0919                     u3431:
  3445  0919  291F               	goto	l2484
  3446  091A                     u3430:
  3447  091A                     l2482:
  3448  091A  09F0               	comf	___awmod@divisor,f
  3449  091B  09F1               	comf	___awmod@divisor+1,f
  3450  091C  0AF0               	incf	___awmod@divisor,f
  3451  091D  1903               	skipnz
  3452  091E  0AF1               	incf	___awmod@divisor+1,f
  3453  091F                     l2484:
  3454  091F  0870               	movf	___awmod@divisor,w
  3455  0920  0471               	iorwf	___awmod@divisor+1,w
  3456  0921  1903               	btfsc	3,2
  3457  0922  2924               	goto	u3441
  3458  0923  2925               	goto	u3440
  3459  0924                     u3441:
  3460  0924  2954               	goto	l2502
  3461  0925                     u3440:
  3462  0925                     l2486:
  3463  0925  01F5               	clrf	___awmod@counter
  3464  0926  0AF5               	incf	___awmod@counter,f
  3465  0927  2933               	goto	l2492
  3466  0928                     l2488:
  3467  0928  3001               	movlw	1
  3468  0929                     u3455:
  3469  0929  1003               	clrc
  3470  092A  0DF0               	rlf	___awmod@divisor,f
  3471  092B  0DF1               	rlf	___awmod@divisor+1,f
  3472  092C  3EFF               	addlw	-1
  3473  092D  1D03               	skipz
  3474  092E  2929               	goto	u3455
  3475  092F                     l2490:
  3476  092F  3001               	movlw	1
  3477  0930  00F4               	movwf	??___awmod
  3478  0931  0874               	movf	??___awmod,w
  3479  0932  07F5               	addwf	___awmod@counter,f
  3480  0933                     l2492:
  3481  0933  1FF1               	btfss	___awmod@divisor+1,7
  3482  0934  2936               	goto	u3461
  3483  0935  2937               	goto	u3460
  3484  0936                     u3461:
  3485  0936  2928               	goto	l2488
  3486  0937                     u3460:
  3487  0937                     l2494:
  3488  0937  0871               	movf	___awmod@divisor+1,w
  3489  0938  0273               	subwf	___awmod@dividend+1,w
  3490  0939  1D03               	skipz
  3491  093A  293D               	goto	u3475
  3492  093B  0870               	movf	___awmod@divisor,w
  3493  093C  0272               	subwf	___awmod@dividend,w
  3494  093D                     u3475:
  3495  093D  1C03               	skipc
  3496  093E  2940               	goto	u3471
  3497  093F  2941               	goto	u3470
  3498  0940                     u3471:
  3499  0940  2947               	goto	l2498
  3500  0941                     u3470:
  3501  0941                     l2496:
  3502  0941  0870               	movf	___awmod@divisor,w
  3503  0942  02F2               	subwf	___awmod@dividend,f
  3504  0943  0871               	movf	___awmod@divisor+1,w
  3505  0944  1C03               	skipc
  3506  0945  03F3               	decf	___awmod@dividend+1,f
  3507  0946  02F3               	subwf	___awmod@dividend+1,f
  3508  0947                     l2498:
  3509  0947  3001               	movlw	1
  3510  0948                     u3485:
  3511  0948  1003               	clrc
  3512  0949  0CF1               	rrf	___awmod@divisor+1,f
  3513  094A  0CF0               	rrf	___awmod@divisor,f
  3514  094B  3EFF               	addlw	-1
  3515  094C  1D03               	skipz
  3516  094D  2948               	goto	u3485
  3517  094E                     l2500:
  3518  094E  3001               	movlw	1
  3519  094F  02F5               	subwf	___awmod@counter,f
  3520  0950  1D03               	btfss	3,2
  3521  0951  2953               	goto	u3491
  3522  0952  2954               	goto	u3490
  3523  0953                     u3491:
  3524  0953  2937               	goto	l2494
  3525  0954                     u3490:
  3526  0954                     l2502:
  3527  0954  0876               	movf	___awmod@sign,w
  3528  0955  1903               	btfsc	3,2
  3529  0956  2958               	goto	u3501
  3530  0957  2959               	goto	u3500
  3531  0958                     u3501:
  3532  0958  295E               	goto	l2506
  3533  0959                     u3500:
  3534  0959                     l2504:
  3535  0959  09F2               	comf	___awmod@dividend,f
  3536  095A  09F3               	comf	___awmod@dividend+1,f
  3537  095B  0AF2               	incf	___awmod@dividend,f
  3538  095C  1903               	skipnz
  3539  095D  0AF3               	incf	___awmod@dividend+1,f
  3540  095E                     l2506:
  3541  095E  0873               	movf	___awmod@dividend+1,w
  3542  095F  00F1               	movwf	?___awmod+1
  3543  0960  0872               	movf	___awmod@dividend,w
  3544  0961  00F0               	movwf	?___awmod
  3545  0962                     l534:
  3546  0962  0008               	return
  3547  0963                     __end_of___awmod:
  3548                           
  3549                           	psect	text14
  3550  0963                     __ptext14:	
  3551 ;; *************** function ___awdiv *****************
  3552 ;; Defined at:
  3553 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  3554 ;; Parameters:    Size  Location     Type
  3555 ;;  divisor         2    7[COMMON] int 
  3556 ;;  dividend        2    9[COMMON] int 
  3557 ;; Auto vars:     Size  Location     Type
  3558 ;;  quotient        2    2[BANK0 ] int 
  3559 ;;  sign            1    1[BANK0 ] unsigned char 
  3560 ;;  counter         1    0[BANK0 ] unsigned char 
  3561 ;; Return value:  Size  Location     Type
  3562 ;;                  2    7[COMMON] int 
  3563 ;; Registers used:
  3564 ;;		wreg, status,2, status,0
  3565 ;; Tracked objects:
  3566 ;;		On entry : 0/0
  3567 ;;		On exit  : 0/0
  3568 ;;		Unchanged: 0/0
  3569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3570 ;;      Params:         4       0       0       0       0
  3571 ;;      Locals:         0       4       0       0       0
  3572 ;;      Temps:          1       0       0       0       0
  3573 ;;      Totals:         5       4       0       0       0
  3574 ;;Total ram usage:        9 bytes
  3575 ;; Hardware stack levels used: 1
  3576 ;; This function calls:
  3577 ;;		Nothing
  3578 ;; This function is called by:
  3579 ;;		_imprimirValoresLcd
  3580 ;;		_realizarCalculo
  3581 ;; This function uses a non-reentrant model
  3582 ;;
  3583                           
  3584                           
  3585                           ;psect for function ___awdiv
  3586  0963                     ___awdiv:
  3587  0963                     l2428:	
  3588                           ;incstack = 0
  3589                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3590                           
  3591  0963  1283               	bcf	3,5	;RP0=0, select bank0
  3592  0964  1303               	bcf	3,6	;RP1=0, select bank0
  3593  0965  01A1               	clrf	___awdiv@sign
  3594  0966                     l2430:
  3595  0966  1FF8               	btfss	___awdiv@divisor+1,7
  3596  0967  2969               	goto	u3321
  3597  0968  296A               	goto	u3320
  3598  0969                     u3321:
  3599  0969  2971               	goto	l2436
  3600  096A                     u3320:
  3601  096A                     l2432:
  3602  096A  09F7               	comf	___awdiv@divisor,f
  3603  096B  09F8               	comf	___awdiv@divisor+1,f
  3604  096C  0AF7               	incf	___awdiv@divisor,f
  3605  096D  1903               	skipnz
  3606  096E  0AF8               	incf	___awdiv@divisor+1,f
  3607  096F                     l2434:
  3608  096F  01A1               	clrf	___awdiv@sign
  3609  0970  0AA1               	incf	___awdiv@sign,f
  3610  0971                     l2436:
  3611  0971  1FFA               	btfss	___awdiv@dividend+1,7
  3612  0972  2974               	goto	u3331
  3613  0973  2975               	goto	u3330
  3614  0974                     u3331:
  3615  0974  297E               	goto	l2442
  3616  0975                     u3330:
  3617  0975                     l2438:
  3618  0975  09F9               	comf	___awdiv@dividend,f
  3619  0976  09FA               	comf	___awdiv@dividend+1,f
  3620  0977  0AF9               	incf	___awdiv@dividend,f
  3621  0978  1903               	skipnz
  3622  0979  0AFA               	incf	___awdiv@dividend+1,f
  3623  097A                     l2440:
  3624  097A  3001               	movlw	1
  3625  097B  00FB               	movwf	??___awdiv
  3626  097C  087B               	movf	??___awdiv,w
  3627  097D  06A1               	xorwf	___awdiv@sign,f
  3628  097E                     l2442:
  3629  097E  01A2               	clrf	___awdiv@quotient
  3630  097F  01A3               	clrf	___awdiv@quotient+1
  3631  0980                     l2444:
  3632  0980  0877               	movf	___awdiv@divisor,w
  3633  0981  0478               	iorwf	___awdiv@divisor+1,w
  3634  0982  1903               	btfsc	3,2
  3635  0983  2985               	goto	u3341
  3636  0984  2986               	goto	u3340
  3637  0985                     u3341:
  3638  0985  29BD               	goto	l2464
  3639  0986                     u3340:
  3640  0986                     l2446:
  3641  0986  01A0               	clrf	___awdiv@counter
  3642  0987  0AA0               	incf	___awdiv@counter,f
  3643  0988  2994               	goto	l2452
  3644  0989                     l2448:
  3645  0989  3001               	movlw	1
  3646  098A                     u3355:
  3647  098A  1003               	clrc
  3648  098B  0DF7               	rlf	___awdiv@divisor,f
  3649  098C  0DF8               	rlf	___awdiv@divisor+1,f
  3650  098D  3EFF               	addlw	-1
  3651  098E  1D03               	skipz
  3652  098F  298A               	goto	u3355
  3653  0990                     l2450:
  3654  0990  3001               	movlw	1
  3655  0991  00FB               	movwf	??___awdiv
  3656  0992  087B               	movf	??___awdiv,w
  3657  0993  07A0               	addwf	___awdiv@counter,f
  3658  0994                     l2452:
  3659  0994  1FF8               	btfss	___awdiv@divisor+1,7
  3660  0995  2997               	goto	u3361
  3661  0996  2998               	goto	u3360
  3662  0997                     u3361:
  3663  0997  2989               	goto	l2448
  3664  0998                     u3360:
  3665  0998                     l2454:
  3666  0998  3001               	movlw	1
  3667  0999                     u3375:
  3668  0999  1003               	clrc
  3669  099A  0DA2               	rlf	___awdiv@quotient,f
  3670  099B  0DA3               	rlf	___awdiv@quotient+1,f
  3671  099C  3EFF               	addlw	-1
  3672  099D  1D03               	skipz
  3673  099E  2999               	goto	u3375
  3674  099F  0878               	movf	___awdiv@divisor+1,w
  3675  09A0  027A               	subwf	___awdiv@dividend+1,w
  3676  09A1  1D03               	skipz
  3677  09A2  29A5               	goto	u3385
  3678  09A3  0877               	movf	___awdiv@divisor,w
  3679  09A4  0279               	subwf	___awdiv@dividend,w
  3680  09A5                     u3385:
  3681  09A5  1C03               	skipc
  3682  09A6  29A8               	goto	u3381
  3683  09A7  29A9               	goto	u3380
  3684  09A8                     u3381:
  3685  09A8  29B0               	goto	l2460
  3686  09A9                     u3380:
  3687  09A9                     l2456:
  3688  09A9  0877               	movf	___awdiv@divisor,w
  3689  09AA  02F9               	subwf	___awdiv@dividend,f
  3690  09AB  0878               	movf	___awdiv@divisor+1,w
  3691  09AC  1C03               	skipc
  3692  09AD  03FA               	decf	___awdiv@dividend+1,f
  3693  09AE  02FA               	subwf	___awdiv@dividend+1,f
  3694  09AF                     l2458:
  3695  09AF  1422               	bsf	___awdiv@quotient,0
  3696  09B0                     l2460:
  3697  09B0  3001               	movlw	1
  3698  09B1                     u3395:
  3699  09B1  1003               	clrc
  3700  09B2  0CF8               	rrf	___awdiv@divisor+1,f
  3701  09B3  0CF7               	rrf	___awdiv@divisor,f
  3702  09B4  3EFF               	addlw	-1
  3703  09B5  1D03               	skipz
  3704  09B6  29B1               	goto	u3395
  3705  09B7                     l2462:
  3706  09B7  3001               	movlw	1
  3707  09B8  02A0               	subwf	___awdiv@counter,f
  3708  09B9  1D03               	btfss	3,2
  3709  09BA  29BC               	goto	u3401
  3710  09BB  29BD               	goto	u3400
  3711  09BC                     u3401:
  3712  09BC  2998               	goto	l2454
  3713  09BD                     u3400:
  3714  09BD                     l2464:
  3715  09BD  0821               	movf	___awdiv@sign,w
  3716  09BE  1903               	btfsc	3,2
  3717  09BF  29C1               	goto	u3411
  3718  09C0  29C2               	goto	u3410
  3719  09C1                     u3411:
  3720  09C1  29C7               	goto	l2468
  3721  09C2                     u3410:
  3722  09C2                     l2466:
  3723  09C2  09A2               	comf	___awdiv@quotient,f
  3724  09C3  09A3               	comf	___awdiv@quotient+1,f
  3725  09C4  0AA2               	incf	___awdiv@quotient,f
  3726  09C5  1903               	skipnz
  3727  09C6  0AA3               	incf	___awdiv@quotient+1,f
  3728  09C7                     l2468:
  3729  09C7  0823               	movf	___awdiv@quotient+1,w
  3730  09C8  00F8               	movwf	?___awdiv+1
  3731  09C9  0822               	movf	___awdiv@quotient,w
  3732  09CA  00F7               	movwf	?___awdiv
  3733  09CB                     l521:
  3734  09CB  0008               	return
  3735  09CC                     __end_of___awdiv:
  3736                           
  3737                           	psect	text15
  3738  0DCC                     __ptext15:	
  3739 ;; *************** function _controlarValores *****************
  3740 ;; Defined at:
  3741 ;;		line 46 in file "main.c"
  3742 ;; Parameters:    Size  Location     Type
  3743 ;;		None
  3744 ;; Auto vars:     Size  Location     Type
  3745 ;;		None
  3746 ;; Return value:  Size  Location     Type
  3747 ;;                  1    wreg      void 
  3748 ;; Registers used:
  3749 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3750 ;; Tracked objects:
  3751 ;;		On entry : 0/0
  3752 ;;		On exit  : 0/0
  3753 ;;		Unchanged: 0/0
  3754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3755 ;;      Params:         0       0       0       0       0
  3756 ;;      Locals:         0       0       0       0       0
  3757 ;;      Temps:          1       0       0       0       0
  3758 ;;      Totals:         1       0       0       0       0
  3759 ;;Total ram usage:        1 bytes
  3760 ;; Hardware stack levels used: 1
  3761 ;; Hardware stack levels required when called: 1
  3762 ;; This function calls:
  3763 ;;		_controleMaximoMinimo
  3764 ;; This function is called by:
  3765 ;;		_main
  3766 ;; This function uses a non-reentrant model
  3767 ;;
  3768                           
  3769                           
  3770                           ;psect for function _controlarValores
  3771  0DCC                     _controlarValores:
  3772  0DCC                     l2510:	
  3773                           ;incstack = 0
  3774                           ; Regs used in _controlarValores: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3775                           
  3776                           
  3777                           ;main.c: 47:     static char S1Anterior;;main.c: 48:     static char S1Atual;;main.c: 49
      +                          :     static char S2Anterior;;main.c: 50:     static char S2Atual;;main.c: 51:     stati
      +                          c char S3Anterior;;main.c: 52:     static char S3Atual;;main.c: 53:     static char S4An
      +                          terior;;main.c: 54:     static char S4Atual;;main.c: 56:     S1Atual = RB0;
  3778  0DCC  3000               	movlw	0
  3779  0DCD  1283               	bcf	3,5	;RP0=0, select bank0
  3780  0DCE  1303               	bcf	3,6	;RP1=0, select bank0
  3781  0DCF  1806               	btfsc	6,0	;volatile
  3782  0DD0  3001               	movlw	1
  3783  0DD1  1683               	bsf	3,5	;RP0=1, select bank1
  3784  0DD2  1303               	bcf	3,6	;RP1=0, select bank1
  3785  0DD3  00CA               	movwf	controlarValores@S1Atual^(0+128)
  3786  0DD4                     l2512:
  3787                           
  3788                           ;main.c: 58:     if((S1Atual)&&(!S1Anterior)){
  3789  0DD4  084A               	movf	controlarValores@S1Atual^(0+128),w
  3790  0DD5  1903               	btfsc	3,2
  3791  0DD6  2DD8               	goto	u3511
  3792  0DD7  2DD9               	goto	u3510
  3793  0DD8                     u3511:
  3794  0DD8  2E11               	goto	l111
  3795  0DD9                     u3510:
  3796  0DD9                     l2514:
  3797  0DD9  084B               	movf	controlarValores@S1Anterior^(0+128),w
  3798  0DDA  1D03               	btfss	3,2
  3799  0DDB  2DDD               	goto	u3521
  3800  0DDC  2DDE               	goto	u3520
  3801  0DDD                     u3521:
  3802  0DDD  2E11               	goto	l111
  3803  0DDE                     u3520:
  3804  0DDE                     l2516:
  3805                           
  3806                           ;main.c: 59:         if (menu == 1){
  3807  0DDE  033E               	decf	_menu^(0+128),w
  3808  0DDF  043F               	iorwf	(_menu+1)^(0+128),w
  3809  0DE0  1D03               	btfss	3,2
  3810  0DE1  2DE3               	goto	u3531
  3811  0DE2  2DE4               	goto	u3530
  3812  0DE3                     u3531:
  3813  0DE3  2DEA               	goto	l2520
  3814  0DE4                     u3530:
  3815  0DE4                     l2518:
  3816                           
  3817                           ;main.c: 60:             setPoint += 100;
  3818  0DE4  3064               	movlw	100
  3819  0DE5  07DC               	addwf	_setPoint^(0+128),f
  3820  0DE6  1803               	skipnc
  3821  0DE7  0ADD               	incf	(_setPoint+1)^(0+128),f
  3822  0DE8  3000               	movlw	0
  3823  0DE9  07DD               	addwf	(_setPoint+1)^(0+128),f
  3824  0DEA                     l2520:
  3825                           
  3826                           ;main.c: 63:         if (menu == 2){
  3827  0DEA  3002               	movlw	2
  3828  0DEB  063E               	xorwf	_menu^(0+128),w
  3829  0DEC  043F               	iorwf	(_menu+1)^(0+128),w
  3830  0DED  1D03               	btfss	3,2
  3831  0DEE  2DF0               	goto	u3541
  3832  0DEF  2DF1               	goto	u3540
  3833  0DF0                     u3541:
  3834  0DF0  2DF7               	goto	l2524
  3835  0DF1                     u3540:
  3836  0DF1                     l2522:
  3837                           
  3838                           ;main.c: 64:             kp += 5;
  3839  0DF1  3005               	movlw	5
  3840  0DF2  07DA               	addwf	_kp^(0+128),f
  3841  0DF3  1803               	skipnc
  3842  0DF4  0ADB               	incf	(_kp+1)^(0+128),f
  3843  0DF5  3000               	movlw	0
  3844  0DF6  07DB               	addwf	(_kp+1)^(0+128),f
  3845  0DF7                     l2524:
  3846                           
  3847                           ;main.c: 67:         if (menu == 3){
  3848  0DF7  3003               	movlw	3
  3849  0DF8  063E               	xorwf	_menu^(0+128),w
  3850  0DF9  043F               	iorwf	(_menu+1)^(0+128),w
  3851  0DFA  1D03               	btfss	3,2
  3852  0DFB  2DFD               	goto	u3551
  3853  0DFC  2DFE               	goto	u3550
  3854  0DFD                     u3551:
  3855  0DFD  2E04               	goto	l2528
  3856  0DFE                     u3550:
  3857  0DFE                     l2526:
  3858                           
  3859                           ;main.c: 68:             ki += 1;
  3860  0DFE  3001               	movlw	1
  3861  0DFF  07D8               	addwf	_ki^(0+128),f
  3862  0E00  1803               	skipnc
  3863  0E01  0AD9               	incf	(_ki+1)^(0+128),f
  3864  0E02  3000               	movlw	0
  3865  0E03  07D9               	addwf	(_ki+1)^(0+128),f
  3866  0E04                     l2528:
  3867                           
  3868                           ;main.c: 71:         if (menu == 4){
  3869  0E04  3004               	movlw	4
  3870  0E05  063E               	xorwf	_menu^(0+128),w
  3871  0E06  043F               	iorwf	(_menu+1)^(0+128),w
  3872  0E07  1D03               	btfss	3,2
  3873  0E08  2E0A               	goto	u3561
  3874  0E09  2E0B               	goto	u3560
  3875  0E0A                     u3561:
  3876  0E0A  2E11               	goto	l111
  3877  0E0B                     u3560:
  3878  0E0B                     l2530:
  3879                           
  3880                           ;main.c: 72:             kd += 1;
  3881  0E0B  3001               	movlw	1
  3882  0E0C  07B6               	addwf	_kd^(0+128),f
  3883  0E0D  1803               	skipnc
  3884  0E0E  0AB7               	incf	(_kd+1)^(0+128),f
  3885  0E0F  3000               	movlw	0
  3886  0E10  07B7               	addwf	(_kd+1)^(0+128),f
  3887  0E11                     l111:	
  3888                           ;main.c: 74:     }
  3889                           
  3890                           
  3891                           ;main.c: 76:     S1Anterior = S1Atual;
  3892  0E11  084A               	movf	controlarValores@S1Atual^(0+128),w
  3893  0E12  00F2               	movwf	??_controlarValores
  3894  0E13  0872               	movf	??_controlarValores,w
  3895  0E14  00CB               	movwf	controlarValores@S1Anterior^(0+128)
  3896  0E15                     l2532:
  3897                           
  3898                           ;main.c: 77:     S2Atual = RB1;
  3899  0E15  3000               	movlw	0
  3900  0E16  1283               	bcf	3,5	;RP0=0, select bank0
  3901  0E17  1303               	bcf	3,6	;RP1=0, select bank0
  3902  0E18  1886               	btfsc	6,1	;volatile
  3903  0E19  3001               	movlw	1
  3904  0E1A  1683               	bsf	3,5	;RP0=1, select bank1
  3905  0E1B  1303               	bcf	3,6	;RP1=0, select bank1
  3906  0E1C  00C8               	movwf	controlarValores@S2Atual^(0+128)
  3907  0E1D                     l2534:
  3908                           
  3909                           ;main.c: 79:     if((S2Atual)&&(!S2Anterior)){
  3910  0E1D  0848               	movf	controlarValores@S2Atual^(0+128),w
  3911  0E1E  1903               	btfsc	3,2
  3912  0E1F  2E21               	goto	u3571
  3913  0E20  2E22               	goto	u3570
  3914  0E21                     u3571:
  3915  0E21  2E5A               	goto	l116
  3916  0E22                     u3570:
  3917  0E22                     l2536:
  3918  0E22  0849               	movf	controlarValores@S2Anterior^(0+128),w
  3919  0E23  1D03               	btfss	3,2
  3920  0E24  2E26               	goto	u3581
  3921  0E25  2E27               	goto	u3580
  3922  0E26                     u3581:
  3923  0E26  2E5A               	goto	l116
  3924  0E27                     u3580:
  3925  0E27                     l2538:
  3926                           
  3927                           ;main.c: 80:         if (menu == 1){
  3928  0E27  033E               	decf	_menu^(0+128),w
  3929  0E28  043F               	iorwf	(_menu+1)^(0+128),w
  3930  0E29  1D03               	btfss	3,2
  3931  0E2A  2E2C               	goto	u3591
  3932  0E2B  2E2D               	goto	u3590
  3933  0E2C                     u3591:
  3934  0E2C  2E33               	goto	l2542
  3935  0E2D                     u3590:
  3936  0E2D                     l2540:
  3937                           
  3938                           ;main.c: 81:             setPoint -= 100;
  3939  0E2D  309C               	movlw	156
  3940  0E2E  07DC               	addwf	_setPoint^(0+128),f
  3941  0E2F  1803               	skipnc
  3942  0E30  0ADD               	incf	(_setPoint+1)^(0+128),f
  3943  0E31  30FF               	movlw	255
  3944  0E32  07DD               	addwf	(_setPoint+1)^(0+128),f
  3945  0E33                     l2542:
  3946                           
  3947                           ;main.c: 84:         if (menu == 2){
  3948  0E33  3002               	movlw	2
  3949  0E34  063E               	xorwf	_menu^(0+128),w
  3950  0E35  043F               	iorwf	(_menu+1)^(0+128),w
  3951  0E36  1D03               	btfss	3,2
  3952  0E37  2E39               	goto	u3601
  3953  0E38  2E3A               	goto	u3600
  3954  0E39                     u3601:
  3955  0E39  2E40               	goto	l2546
  3956  0E3A                     u3600:
  3957  0E3A                     l2544:
  3958                           
  3959                           ;main.c: 85:             kp -= 5;
  3960  0E3A  30FB               	movlw	251
  3961  0E3B  07DA               	addwf	_kp^(0+128),f
  3962  0E3C  1803               	skipnc
  3963  0E3D  0ADB               	incf	(_kp+1)^(0+128),f
  3964  0E3E  30FF               	movlw	255
  3965  0E3F  07DB               	addwf	(_kp+1)^(0+128),f
  3966  0E40                     l2546:
  3967                           
  3968                           ;main.c: 88:         if (menu == 3){
  3969  0E40  3003               	movlw	3
  3970  0E41  063E               	xorwf	_menu^(0+128),w
  3971  0E42  043F               	iorwf	(_menu+1)^(0+128),w
  3972  0E43  1D03               	btfss	3,2
  3973  0E44  2E46               	goto	u3611
  3974  0E45  2E47               	goto	u3610
  3975  0E46                     u3611:
  3976  0E46  2E4D               	goto	l2550
  3977  0E47                     u3610:
  3978  0E47                     l2548:
  3979                           
  3980                           ;main.c: 89:             ki -= 1;
  3981  0E47  30FF               	movlw	255
  3982  0E48  07D8               	addwf	_ki^(0+128),f
  3983  0E49  1803               	skipnc
  3984  0E4A  0AD9               	incf	(_ki+1)^(0+128),f
  3985  0E4B  30FF               	movlw	255
  3986  0E4C  07D9               	addwf	(_ki+1)^(0+128),f
  3987  0E4D                     l2550:
  3988                           
  3989                           ;main.c: 92:         if (menu == 4){
  3990  0E4D  3004               	movlw	4
  3991  0E4E  063E               	xorwf	_menu^(0+128),w
  3992  0E4F  043F               	iorwf	(_menu+1)^(0+128),w
  3993  0E50  1D03               	btfss	3,2
  3994  0E51  2E53               	goto	u3621
  3995  0E52  2E54               	goto	u3620
  3996  0E53                     u3621:
  3997  0E53  2E5A               	goto	l116
  3998  0E54                     u3620:
  3999  0E54                     l2552:
  4000                           
  4001                           ;main.c: 93:             kd -= 1;
  4002  0E54  30FF               	movlw	255
  4003  0E55  07B6               	addwf	_kd^(0+128),f
  4004  0E56  1803               	skipnc
  4005  0E57  0AB7               	incf	(_kd+1)^(0+128),f
  4006  0E58  30FF               	movlw	255
  4007  0E59  07B7               	addwf	(_kd+1)^(0+128),f
  4008  0E5A                     l116:	
  4009                           ;main.c: 95:     }
  4010                           
  4011                           
  4012                           ;main.c: 97:     S2Anterior = S2Atual;
  4013  0E5A  0848               	movf	controlarValores@S2Atual^(0+128),w
  4014  0E5B  00F2               	movwf	??_controlarValores
  4015  0E5C  0872               	movf	??_controlarValores,w
  4016  0E5D  00C9               	movwf	controlarValores@S2Anterior^(0+128)
  4017  0E5E                     l2554:
  4018                           
  4019                           ;main.c: 98:     S3Atual = RB2;
  4020  0E5E  3000               	movlw	0
  4021  0E5F  1283               	bcf	3,5	;RP0=0, select bank0
  4022  0E60  1303               	bcf	3,6	;RP1=0, select bank0
  4023  0E61  1906               	btfsc	6,2	;volatile
  4024  0E62  3001               	movlw	1
  4025  0E63  1683               	bsf	3,5	;RP0=1, select bank1
  4026  0E64  1303               	bcf	3,6	;RP1=0, select bank1
  4027  0E65  00C6               	movwf	controlarValores@S3Atual^(0+128)
  4028  0E66                     l2556:
  4029                           
  4030                           ;main.c: 100:     if((S3Atual)&&(!S3Anterior)){
  4031  0E66  0846               	movf	controlarValores@S3Atual^(0+128),w
  4032  0E67  1903               	btfsc	3,2
  4033  0E68  2E6A               	goto	u3631
  4034  0E69  2E6B               	goto	u3630
  4035  0E6A                     u3631:
  4036  0E6A  2E74               	goto	l121
  4037  0E6B                     u3630:
  4038  0E6B                     l2558:
  4039  0E6B  0847               	movf	controlarValores@S3Anterior^(0+128),w
  4040  0E6C  1D03               	btfss	3,2
  4041  0E6D  2E6F               	goto	u3641
  4042  0E6E  2E70               	goto	u3640
  4043  0E6F                     u3641:
  4044  0E6F  2E74               	goto	l121
  4045  0E70                     u3640:
  4046  0E70                     l2560:
  4047                           
  4048                           ;main.c: 101:         setPointCalculo = setPoint;
  4049  0E70  085D               	movf	(_setPoint+1)^(0+128),w
  4050  0E71  00BD               	movwf	(_setPointCalculo+1)^(0+128)
  4051  0E72  085C               	movf	_setPoint^(0+128),w
  4052  0E73  00BC               	movwf	_setPointCalculo^(0+128)
  4053  0E74                     l121:	
  4054                           ;main.c: 102:     }
  4055                           
  4056                           
  4057                           ;main.c: 104:     S3Anterior = S3Atual;
  4058  0E74  0846               	movf	controlarValores@S3Atual^(0+128),w
  4059  0E75  00F2               	movwf	??_controlarValores
  4060  0E76  0872               	movf	??_controlarValores,w
  4061  0E77  00C7               	movwf	controlarValores@S3Anterior^(0+128)
  4062  0E78                     l2562:
  4063                           
  4064                           ;main.c: 106:     S4Atual = RB3;
  4065  0E78  3000               	movlw	0
  4066  0E79  1283               	bcf	3,5	;RP0=0, select bank0
  4067  0E7A  1303               	bcf	3,6	;RP1=0, select bank0
  4068  0E7B  1986               	btfsc	6,3	;volatile
  4069  0E7C  3001               	movlw	1
  4070  0E7D  1683               	bsf	3,5	;RP0=1, select bank1
  4071  0E7E  1303               	bcf	3,6	;RP1=0, select bank1
  4072  0E7F  00C4               	movwf	controlarValores@S4Atual^(0+128)
  4073  0E80                     l2564:
  4074                           
  4075                           ;main.c: 107:     if((S4Atual)&&(!S4Anterior)){
  4076  0E80  0844               	movf	controlarValores@S4Atual^(0+128),w
  4077  0E81  1903               	btfsc	3,2
  4078  0E82  2E84               	goto	u3651
  4079  0E83  2E85               	goto	u3650
  4080  0E84                     u3651:
  4081  0E84  2E9B               	goto	l122
  4082  0E85                     u3650:
  4083  0E85                     l2566:
  4084  0E85  0845               	movf	controlarValores@S4Anterior^(0+128),w
  4085  0E86  1D03               	btfss	3,2
  4086  0E87  2E89               	goto	u3661
  4087  0E88  2E8A               	goto	u3660
  4088  0E89                     u3661:
  4089  0E89  2E9B               	goto	l122
  4090  0E8A                     u3660:
  4091  0E8A                     l2568:
  4092                           
  4093                           ;main.c: 108:         menu += 1;
  4094  0E8A  3001               	movlw	1
  4095  0E8B  07BE               	addwf	_menu^(0+128),f
  4096  0E8C  1803               	skipnc
  4097  0E8D  0ABF               	incf	(_menu+1)^(0+128),f
  4098  0E8E  3000               	movlw	0
  4099  0E8F  07BF               	addwf	(_menu+1)^(0+128),f
  4100  0E90                     l2570:
  4101                           
  4102                           ;main.c: 110:         if (menu == 5){
  4103  0E90  3005               	movlw	5
  4104  0E91  063E               	xorwf	_menu^(0+128),w
  4105  0E92  043F               	iorwf	(_menu+1)^(0+128),w
  4106  0E93  1D03               	btfss	3,2
  4107  0E94  2E96               	goto	u3671
  4108  0E95  2E97               	goto	u3670
  4109  0E96                     u3671:
  4110  0E96  2E9B               	goto	l122
  4111  0E97                     u3670:
  4112  0E97                     l2572:
  4113                           
  4114                           ;main.c: 111:             menu = 1;
  4115  0E97  3001               	movlw	1
  4116  0E98  00BE               	movwf	_menu^(0+128)
  4117  0E99  3000               	movlw	0
  4118  0E9A  00BF               	movwf	(_menu^(0+128)+1)
  4119  0E9B                     l122:	
  4120                           ;main.c: 113:     }
  4121                           
  4122                           
  4123                           ;main.c: 114:     S4Anterior = S4Atual;
  4124  0E9B  0844               	movf	controlarValores@S4Atual^(0+128),w
  4125  0E9C  00F2               	movwf	??_controlarValores
  4126  0E9D  0872               	movf	??_controlarValores,w
  4127  0E9E  00C5               	movwf	controlarValores@S4Anterior^(0+128)
  4128  0E9F                     l2574:
  4129                           
  4130                           ;main.c: 116:     kp = controleMaximoMinimo(kp);
  4131  0E9F  085B               	movf	(_kp+1)^(0+128),w
  4132  0EA0  00F1               	movwf	controleMaximoMinimo@valor+1
  4133  0EA1  085A               	movf	_kp^(0+128),w
  4134  0EA2  00F0               	movwf	controleMaximoMinimo@valor
  4135  0EA3  160A  118A  2703  120A  158A  	fcall	_controleMaximoMinimo
  4136  0EA8  0871               	movf	?_controleMaximoMinimo+1,w
  4137  0EA9  1683               	bsf	3,5	;RP0=1, select bank1
  4138  0EAA  1303               	bcf	3,6	;RP1=0, select bank1
  4139  0EAB  00DB               	movwf	(_kp+1)^(0+128)
  4140  0EAC  0870               	movf	?_controleMaximoMinimo,w
  4141  0EAD  00DA               	movwf	_kp^(0+128)
  4142  0EAE                     l2576:
  4143                           
  4144                           ;main.c: 117:     ki = controleMaximoMinimo(ki);
  4145  0EAE  0859               	movf	(_ki+1)^(0+128),w
  4146  0EAF  00F1               	movwf	controleMaximoMinimo@valor+1
  4147  0EB0  0858               	movf	_ki^(0+128),w
  4148  0EB1  00F0               	movwf	controleMaximoMinimo@valor
  4149  0EB2  160A  118A  2703  120A  158A  	fcall	_controleMaximoMinimo
  4150  0EB7  0871               	movf	?_controleMaximoMinimo+1,w
  4151  0EB8  1683               	bsf	3,5	;RP0=1, select bank1
  4152  0EB9  1303               	bcf	3,6	;RP1=0, select bank1
  4153  0EBA  00D9               	movwf	(_ki+1)^(0+128)
  4154  0EBB  0870               	movf	?_controleMaximoMinimo,w
  4155  0EBC  00D8               	movwf	_ki^(0+128)
  4156  0EBD                     l2578:
  4157                           
  4158                           ;main.c: 118:     kd = controleMaximoMinimo(kd);
  4159  0EBD  0837               	movf	(_kd+1)^(0+128),w
  4160  0EBE  00F1               	movwf	controleMaximoMinimo@valor+1
  4161  0EBF  0836               	movf	_kd^(0+128),w
  4162  0EC0  00F0               	movwf	controleMaximoMinimo@valor
  4163  0EC1  160A  118A  2703  120A  158A  	fcall	_controleMaximoMinimo
  4164  0EC6  0871               	movf	?_controleMaximoMinimo+1,w
  4165  0EC7  1683               	bsf	3,5	;RP0=1, select bank1
  4166  0EC8  1303               	bcf	3,6	;RP1=0, select bank1
  4167  0EC9  00B7               	movwf	(_kd+1)^(0+128)
  4168  0ECA  0870               	movf	?_controleMaximoMinimo,w
  4169  0ECB  00B6               	movwf	_kd^(0+128)
  4170  0ECC                     l124:
  4171  0ECC  0008               	return
  4172  0ECD                     __end_of_controlarValores:
  4173                           
  4174                           	psect	text16
  4175  1767                     __ptext16:	
  4176 ;; *************** function _controlarCooler *****************
  4177 ;; Defined at:
  4178 ;;		line 225 in file "main.c"
  4179 ;; Parameters:    Size  Location     Type
  4180 ;;		None
  4181 ;; Auto vars:     Size  Location     Type
  4182 ;;  cooler          2    7[BANK1 ] int 
  4183 ;; Return value:  Size  Location     Type
  4184 ;;                  1    wreg      void 
  4185 ;; Registers used:
  4186 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4187 ;; Tracked objects:
  4188 ;;		On entry : 0/0
  4189 ;;		On exit  : 0/0
  4190 ;;		Unchanged: 0/0
  4191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4192 ;;      Params:         0       0       0       0       0
  4193 ;;      Locals:         0       0       2       0       0
  4194 ;;      Temps:          0       0       0       0       0
  4195 ;;      Totals:         0       0       2       0       0
  4196 ;;Total ram usage:        2 bytes
  4197 ;; Hardware stack levels used: 1
  4198 ;; Hardware stack levels required when called: 3
  4199 ;; This function calls:
  4200 ;;		_ADC_Read
  4201 ;;		_PWM2_Duty
  4202 ;;		_controleMaximoMinimo
  4203 ;; This function is called by:
  4204 ;;		_main
  4205 ;; This function uses a non-reentrant model
  4206 ;;
  4207                           
  4208                           
  4209                           ;psect for function _controlarCooler
  4210  1767                     _controlarCooler:
  4211  1767                     l2650:	
  4212                           ;incstack = 0
  4213                           ; Regs used in _controlarCooler: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4214                           
  4215                           
  4216                           ;main.c: 226:     int cooler = (unsigned int)ADC_Read(1);
  4217  1767  3001               	movlw	1
  4218  1768  160A  118A  2796  160A  118A  	fcall	_ADC_Read
  4219  176D  0871               	movf	?_ADC_Read+1,w
  4220  176E  1683               	bsf	3,5	;RP0=1, select bank1
  4221  176F  1303               	bcf	3,6	;RP1=0, select bank1
  4222  1770  00D4               	movwf	(controlarCooler@cooler+1)^(0+128)
  4223  1771  0870               	movf	?_ADC_Read,w
  4224  1772  00D3               	movwf	controlarCooler@cooler^(0+128)
  4225  1773                     l2652:
  4226                           
  4227                           ;main.c: 227:     cooler = controleMaximoMinimo(cooler);
  4228  1773  0854               	movf	(controlarCooler@cooler+1)^(0+128),w
  4229  1774  00F1               	movwf	controleMaximoMinimo@valor+1
  4230  1775  0853               	movf	controlarCooler@cooler^(0+128),w
  4231  1776  00F0               	movwf	controleMaximoMinimo@valor
  4232  1777  160A  118A  2703  160A  118A  	fcall	_controleMaximoMinimo
  4233  177C  0871               	movf	?_controleMaximoMinimo+1,w
  4234  177D  1683               	bsf	3,5	;RP0=1, select bank1
  4235  177E  1303               	bcf	3,6	;RP1=0, select bank1
  4236  177F  00D4               	movwf	(controlarCooler@cooler+1)^(0+128)
  4237  1780  0870               	movf	?_controleMaximoMinimo,w
  4238  1781  00D3               	movwf	controlarCooler@cooler^(0+128)
  4239  1782                     l2654:
  4240                           
  4241                           ;main.c: 228:     PWM2_Duty(cooler, 4000);
  4242  1782  0854               	movf	(controlarCooler@cooler+1)^(0+128),w
  4243  1783  1283               	bcf	3,5	;RP0=0, select bank0
  4244  1784  1303               	bcf	3,6	;RP1=0, select bank0
  4245  1785  00ED               	movwf	PWM2_Duty@duty+1
  4246  1786  1683               	bsf	3,5	;RP0=1, select bank1
  4247  1787  1303               	bcf	3,6	;RP1=0, select bank1
  4248  1788  0853               	movf	controlarCooler@cooler^(0+128),w
  4249  1789  1283               	bcf	3,5	;RP0=0, select bank0
  4250  178A  1303               	bcf	3,6	;RP1=0, select bank0
  4251  178B  00EC               	movwf	PWM2_Duty@duty
  4252  178C  30A0               	movlw	160
  4253  178D  00EE               	movwf	PWM2_Duty@freq
  4254  178E  300F               	movlw	15
  4255  178F  00EF               	movwf	PWM2_Duty@freq+1
  4256  1790  120A  158A  2378  160A  118A  	fcall	_PWM2_Duty
  4257  1795                     l146:
  4258  1795  0008               	return
  4259  1796                     __end_of_controlarCooler:
  4260                           
  4261                           	psect	text17
  4262  1703                     __ptext17:	
  4263 ;; *************** function _controleMaximoMinimo *****************
  4264 ;; Defined at:
  4265 ;;		line 121 in file "main.c"
  4266 ;; Parameters:    Size  Location     Type
  4267 ;;  valor           2    0[COMMON] int 
  4268 ;; Auto vars:     Size  Location     Type
  4269 ;;		None
  4270 ;; Return value:  Size  Location     Type
  4271 ;;                  2    0[COMMON] int 
  4272 ;; Registers used:
  4273 ;;		wreg, status,2, btemp+1
  4274 ;; Tracked objects:
  4275 ;;		On entry : 0/0
  4276 ;;		On exit  : 0/0
  4277 ;;		Unchanged: 0/0
  4278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4279 ;;      Params:         2       0       0       0       0
  4280 ;;      Locals:         0       0       0       0       0
  4281 ;;      Temps:          0       0       0       0       0
  4282 ;;      Totals:         2       0       0       0       0
  4283 ;;Total ram usage:        2 bytes
  4284 ;; Hardware stack levels used: 1
  4285 ;; This function calls:
  4286 ;;		Nothing
  4287 ;; This function is called by:
  4288 ;;		_controlarValores
  4289 ;;		_realizarCalculo
  4290 ;;		_controlarCooler
  4291 ;; This function uses a non-reentrant model
  4292 ;;
  4293                           
  4294                           
  4295                           ;psect for function _controleMaximoMinimo
  4296  1703                     _controleMaximoMinimo:
  4297  1703                     l2282:	
  4298                           ;incstack = 0
  4299                           ; Regs used in _controleMaximoMinimo: [wreg+status,2+btemp+1]
  4300                           
  4301                           
  4302                           ;main.c: 122:     if (valor < 0){
  4303  1703  1FF1               	btfss	controleMaximoMinimo@valor+1,7
  4304  1704  2F06               	goto	u3071
  4305  1705  2F07               	goto	u3070
  4306  1706                     u3071:
  4307  1706  2F09               	goto	l2286
  4308  1707                     u3070:
  4309  1707                     l2284:
  4310                           
  4311                           ;main.c: 123:         valor = 0;
  4312  1707  01F0               	clrf	controleMaximoMinimo@valor
  4313  1708  01F1               	clrf	controleMaximoMinimo@valor+1
  4314  1709                     l2286:
  4315                           
  4316                           ;main.c: 126:     if (valor > 1023){
  4317  1709  0871               	movf	controleMaximoMinimo@valor+1,w
  4318  170A  3A80               	xorlw	128
  4319  170B  00FF               	movwf	btemp+1
  4320  170C  3084               	movlw	132
  4321  170D  027F               	subwf	btemp+1,w
  4322  170E  1D03               	skipz
  4323  170F  2F12               	goto	u3085
  4324  1710  3000               	movlw	0
  4325  1711  0270               	subwf	controleMaximoMinimo@valor,w
  4326  1712                     u3085:
  4327  1712  1C03               	skipc
  4328  1713  2F15               	goto	u3081
  4329  1714  2F16               	goto	u3080
  4330  1715                     u3081:
  4331  1715  2F1A               	goto	l2290
  4332  1716                     u3080:
  4333  1716                     l2288:
  4334                           
  4335                           ;main.c: 127:         valor = 1023;
  4336  1716  30FF               	movlw	255
  4337  1717  00F0               	movwf	controleMaximoMinimo@valor
  4338  1718  3003               	movlw	3
  4339  1719  00F1               	movwf	controleMaximoMinimo@valor+1
  4340  171A                     l2290:
  4341  171A                     l129:	
  4342                           ;main.c: 130:     return valor;
  4343                           
  4344  171A  0008               	return
  4345  171B                     __end_of_controleMaximoMinimo:
  4346                           
  4347                           	psect	text18
  4348  0B78                     __ptext18:	
  4349 ;; *************** function _PWM2_Duty *****************
  4350 ;; Defined at:
  4351 ;;		line 29 in file "PWM.c"
  4352 ;; Parameters:    Size  Location     Type
  4353 ;;  duty            2   76[BANK0 ] unsigned int 
  4354 ;;  freq            2   78[BANK0 ] unsigned int 
  4355 ;; Auto vars:     Size  Location     Type
  4356 ;;		None
  4357 ;; Return value:  Size  Location     Type
  4358 ;;                  1    wreg      void 
  4359 ;; Registers used:
  4360 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4361 ;; Tracked objects:
  4362 ;;		On entry : 0/0
  4363 ;;		On exit  : 0/0
  4364 ;;		Unchanged: 0/0
  4365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4366 ;;      Params:         0       4       0       0       0
  4367 ;;      Locals:         0       0       0       0       0
  4368 ;;      Temps:          0       0       2       0       0
  4369 ;;      Totals:         0       4       2       0       0
  4370 ;;Total ram usage:        6 bytes
  4371 ;; Hardware stack levels used: 1
  4372 ;; Hardware stack levels required when called: 2
  4373 ;; This function calls:
  4374 ;;		_PWM_Init
  4375 ;;		___aldiv
  4376 ;;		___fldiv
  4377 ;;		___flmul
  4378 ;;		___fltol
  4379 ;;		___xxtofl
  4380 ;; This function is called by:
  4381 ;;		_controlarCooler
  4382 ;; This function uses a non-reentrant model
  4383 ;;
  4384                           
  4385                           
  4386                           ;psect for function _PWM2_Duty
  4387  0B78                     _PWM2_Duty:
  4388  0B78                     l2402:	
  4389                           ;incstack = 0
  4390                           ; Regs used in _PWM2_Duty: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4391                           
  4392                           
  4393                           ;PWM.c: 29: void PWM2_Duty(unsigned int duty, unsigned int freq);PWM.c: 30: {;PWM.c: 31:
      +                             PWM_Init(freq);
  4394  0B78  1283               	bcf	3,5	;RP0=0, select bank0
  4395  0B79  1303               	bcf	3,6	;RP1=0, select bank0
  4396  0B7A  086E               	movf	PWM2_Duty@freq,w
  4397  0B7B  00A6               	movwf	PWM_Init@freq
  4398  0B7C  086F               	movf	PWM2_Duty@freq+1,w
  4399  0B7D  00A7               	movwf	PWM_Init@freq+1
  4400  0B7E  01A8               	clrf	PWM_Init@freq+2
  4401  0B7F  01A9               	clrf	PWM_Init@freq+3
  4402  0B80  120A  158A  2055  120A  158A  	fcall	_PWM_Init
  4403  0B85                     l2404:
  4404                           
  4405                           ;PWM.c: 32:   if(duty<1024)
  4406  0B85  3004               	movlw	4
  4407  0B86  1283               	bcf	3,5	;RP0=0, select bank0
  4408  0B87  1303               	bcf	3,6	;RP1=0, select bank0
  4409  0B88  026D               	subwf	PWM2_Duty@duty+1,w
  4410  0B89  3000               	movlw	0
  4411  0B8A  1903               	skipnz
  4412  0B8B  026C               	subwf	PWM2_Duty@duty,w
  4413  0B8C  1803               	skipnc
  4414  0B8D  2B8F               	goto	u3241
  4415  0B8E  2B90               	goto	u3240
  4416  0B8F                     u3241:
  4417  0B8F  2C2D               	goto	l198
  4418  0B90                     u3240:
  4419  0B90                     l2406:
  4420                           
  4421                           ;PWM.c: 33:   {;PWM.c: 34:     duty = ((float)duty/1023.0)*(4000000/(freq*4));
  4422  0B90  086C               	movf	PWM2_Duty@duty,w
  4423  0B91  00A6               	movwf	___xxtofl@val
  4424  0B92  086D               	movf	PWM2_Duty@duty+1,w
  4425  0B93  00A7               	movwf	___xxtofl@val+1
  4426  0B94  01A8               	clrf	___xxtofl@val+2
  4427  0B95  01A9               	clrf	___xxtofl@val+3
  4428  0B96  3000               	movlw	0
  4429  0B97  120A  118A  202E  120A  158A  	fcall	___xxtofl
  4430  0B9C  1283               	bcf	3,5	;RP0=0, select bank0
  4431  0B9D  1303               	bcf	3,6	;RP1=0, select bank0
  4432  0B9E  0829               	movf	?___xxtofl+3,w
  4433  0B9F  00BB               	movwf	___fldiv@b+3
  4434  0BA0  0828               	movf	?___xxtofl+2,w
  4435  0BA1  00BA               	movwf	___fldiv@b+2
  4436  0BA2  0827               	movf	?___xxtofl+1,w
  4437  0BA3  00B9               	movwf	___fldiv@b+1
  4438  0BA4  0826               	movf	?___xxtofl,w
  4439  0BA5  00B8               	movwf	___fldiv@b
  4440  0BA6  3044               	movlw	68
  4441  0BA7  00B7               	movwf	___fldiv@a+3
  4442  0BA8  307F               	movlw	127
  4443  0BA9  00B6               	movwf	___fldiv@a+2
  4444  0BAA  30C0               	movlw	192
  4445  0BAB  00B5               	movwf	___fldiv@a+1
  4446  0BAC  3000               	movlw	0
  4447  0BAD  00B4               	movwf	___fldiv@a
  4448  0BAE  120A  118A  2286  120A  158A  	fcall	___fldiv
  4449  0BB3  1283               	bcf	3,5	;RP0=0, select bank0
  4450  0BB4  1303               	bcf	3,6	;RP1=0, select bank0
  4451  0BB5  0837               	movf	?___fldiv+3,w
  4452  0BB6  00D5               	movwf	___flmul@a+3
  4453  0BB7  0836               	movf	?___fldiv+2,w
  4454  0BB8  00D4               	movwf	___flmul@a+2
  4455  0BB9  0835               	movf	?___fldiv+1,w
  4456  0BBA  00D3               	movwf	___flmul@a+1
  4457  0BBB  0834               	movf	?___fldiv,w
  4458  0BBC  00D2               	movwf	___flmul@a
  4459  0BBD  3000               	movlw	0
  4460  0BBE  00F7               	movwf	___aldiv@dividend+3
  4461  0BBF  303D               	movlw	61
  4462  0BC0  00F6               	movwf	___aldiv@dividend+2
  4463  0BC1  3009               	movlw	9
  4464  0BC2  00F5               	movwf	___aldiv@dividend+1
  4465  0BC3  3000               	movlw	0
  4466  0BC4  00F4               	movwf	___aldiv@dividend
  4467  0BC5  086F               	movf	PWM2_Duty@freq+1,w
  4468  0BC6  1683               	bsf	3,5	;RP0=1, select bank1
  4469  0BC7  1303               	bcf	3,6	;RP1=0, select bank1
  4470  0BC8  00D2               	movwf	(??_PWM2_Duty^(0+128)+1)
  4471  0BC9  1283               	bcf	3,5	;RP0=0, select bank0
  4472  0BCA  1303               	bcf	3,6	;RP1=0, select bank0
  4473  0BCB  086E               	movf	PWM2_Duty@freq,w
  4474  0BCC  1683               	bsf	3,5	;RP0=1, select bank1
  4475  0BCD  1303               	bcf	3,6	;RP1=0, select bank1
  4476  0BCE  00D1               	movwf	??_PWM2_Duty^(0+128)
  4477  0BCF  1003               	clrc
  4478  0BD0  0DD1               	rlf	??_PWM2_Duty^(0+128),f
  4479  0BD1  0DD2               	rlf	(??_PWM2_Duty^(0+128)+1),f
  4480  0BD2  1003               	clrc
  4481  0BD3  0DD1               	rlf	??_PWM2_Duty^(0+128),f
  4482  0BD4  0DD2               	rlf	(??_PWM2_Duty^(0+128)+1),f
  4483  0BD5  0851               	movf	??_PWM2_Duty^(0+128),w
  4484  0BD6  00F0               	movwf	___aldiv@divisor
  4485  0BD7  0852               	movf	(??_PWM2_Duty+1)^(0+128),w
  4486  0BD8  00F1               	movwf	___aldiv@divisor+1
  4487  0BD9  01F2               	clrf	___aldiv@divisor+2
  4488  0BDA  01F3               	clrf	___aldiv@divisor+3
  4489  0BDB  120A  158A  22DB  120A  158A  	fcall	___aldiv
  4490  0BE0  0873               	movf	?___aldiv+3,w
  4491  0BE1  1283               	bcf	3,5	;RP0=0, select bank0
  4492  0BE2  1303               	bcf	3,6	;RP1=0, select bank0
  4493  0BE3  00A9               	movwf	___xxtofl@val+3
  4494  0BE4  0872               	movf	?___aldiv+2,w
  4495  0BE5  00A8               	movwf	___xxtofl@val+2
  4496  0BE6  0871               	movf	?___aldiv+1,w
  4497  0BE7  00A7               	movwf	___xxtofl@val+1
  4498  0BE8  0870               	movf	?___aldiv,w
  4499  0BE9  00A6               	movwf	___xxtofl@val
  4500  0BEA  3001               	movlw	1
  4501  0BEB  120A  118A  202E  120A  158A  	fcall	___xxtofl
  4502  0BF0  1283               	bcf	3,5	;RP0=0, select bank0
  4503  0BF1  1303               	bcf	3,6	;RP1=0, select bank0
  4504  0BF2  0829               	movf	?___xxtofl+3,w
  4505  0BF3  00D1               	movwf	___flmul@b+3
  4506  0BF4  0828               	movf	?___xxtofl+2,w
  4507  0BF5  00D0               	movwf	___flmul@b+2
  4508  0BF6  0827               	movf	?___xxtofl+1,w
  4509  0BF7  00CF               	movwf	___flmul@b+1
  4510  0BF8  0826               	movf	?___xxtofl,w
  4511  0BF9  00CE               	movwf	___flmul@b
  4512  0BFA  120A  118A  2463  120A  158A  	fcall	___flmul
  4513  0BFF  1283               	bcf	3,5	;RP0=0, select bank0
  4514  0C00  1303               	bcf	3,6	;RP1=0, select bank0
  4515  0C01  0851               	movf	?___flmul+3,w
  4516  0C02  00EB               	movwf	___fltol@f1+3
  4517  0C03  0850               	movf	?___flmul+2,w
  4518  0C04  00EA               	movwf	___fltol@f1+2
  4519  0C05  084F               	movf	?___flmul+1,w
  4520  0C06  00E9               	movwf	___fltol@f1+1
  4521  0C07  084E               	movf	?___flmul,w
  4522  0C08  00E8               	movwf	___fltol@f1
  4523  0C09  120A  158A  2240  120A  158A  	fcall	___fltol
  4524  0C0E  1283               	bcf	3,5	;RP0=0, select bank0
  4525  0C0F  1303               	bcf	3,6	;RP1=0, select bank0
  4526  0C10  0869               	movf	?___fltol+1,w
  4527  0C11  00ED               	movwf	PWM2_Duty@duty+1
  4528  0C12  0868               	movf	?___fltol,w
  4529  0C13  00EC               	movwf	PWM2_Duty@duty
  4530  0C14                     l2408:
  4531                           
  4532                           ;PWM.c: 35:     CCP2X = duty & 0b00000010;;
  4533  0C14  129D               	bcf	29,5	;volatile
  4534  0C15                     l2410:
  4535                           
  4536                           ;PWM.c: 36:     CCP2Y = duty & 0b00000001;;
  4537  0C15  186C               	btfsc	PWM2_Duty@duty,0
  4538  0C16  2C18               	goto	u3251
  4539  0C17  2C1C               	goto	u3250
  4540  0C18                     u3251:
  4541  0C18  1283               	bcf	3,5	;RP0=0, select bank0
  4542  0C19  1303               	bcf	3,6	;RP1=0, select bank0
  4543  0C1A  161D               	bsf	29,4	;volatile
  4544  0C1B  2C1F               	goto	u3264
  4545  0C1C                     u3250:
  4546  0C1C  1283               	bcf	3,5	;RP0=0, select bank0
  4547  0C1D  1303               	bcf	3,6	;RP1=0, select bank0
  4548  0C1E  121D               	bcf	29,4	;volatile
  4549  0C1F                     u3264:
  4550  0C1F                     l2412:
  4551                           
  4552                           ;PWM.c: 37:     CCPR2L = (unsigned char)duty>>2;
  4553  0C1F  086C               	movf	PWM2_Duty@duty,w
  4554  0C20  1683               	bsf	3,5	;RP0=1, select bank1
  4555  0C21  1303               	bcf	3,6	;RP1=0, select bank1
  4556  0C22  00D1               	movwf	??_PWM2_Duty^(0+128)
  4557  0C23  3002               	movlw	2
  4558  0C24                     u3275:
  4559  0C24  1003               	clrc
  4560  0C25  0CD1               	rrf	??_PWM2_Duty^(0+128),f
  4561  0C26  3EFF               	addlw	-1
  4562  0C27  1D03               	skipz
  4563  0C28  2C24               	goto	u3275
  4564  0C29  0851               	movf	??_PWM2_Duty^(0+128),w
  4565  0C2A  1283               	bcf	3,5	;RP0=0, select bank0
  4566  0C2B  1303               	bcf	3,6	;RP1=0, select bank0
  4567  0C2C  009B               	movwf	27	;volatile
  4568  0C2D                     l198:
  4569  0C2D  0008               	return
  4570  0C2E                     __end_of_PWM2_Duty:
  4571                           
  4572                           	psect	text19
  4573  002E                     __ptext19:	
  4574 ;; *************** function ___xxtofl *****************
  4575 ;; Defined at:
  4576 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\xxtofl.c"
  4577 ;; Parameters:    Size  Location     Type
  4578 ;;  sign            1    wreg     unsigned char 
  4579 ;;  val             4    6[BANK0 ] long 
  4580 ;; Auto vars:     Size  Location     Type
  4581 ;;  sign            1   14[BANK0 ] unsigned char 
  4582 ;;  arg             4   16[BANK0 ] unsigned long 
  4583 ;;  exp             1   15[BANK0 ] unsigned char 
  4584 ;; Return value:  Size  Location     Type
  4585 ;;                  4    6[BANK0 ] unsigned char 
  4586 ;; Registers used:
  4587 ;;		wreg, status,2, status,0
  4588 ;; Tracked objects:
  4589 ;;		On entry : 0/0
  4590 ;;		On exit  : 0/0
  4591 ;;		Unchanged: 0/0
  4592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4593 ;;      Params:         0       4       0       0       0
  4594 ;;      Locals:         0       6       0       0       0
  4595 ;;      Temps:          0       4       0       0       0
  4596 ;;      Totals:         0      14       0       0       0
  4597 ;;Total ram usage:       14 bytes
  4598 ;; Hardware stack levels used: 1
  4599 ;; This function calls:
  4600 ;;		Nothing
  4601 ;; This function is called by:
  4602 ;;		_realizarCalculo
  4603 ;;		_PWM1_Duty
  4604 ;;		_PWM2_Duty
  4605 ;; This function uses a non-reentrant model
  4606 ;;
  4607                           
  4608                           
  4609                           ;psect for function ___xxtofl
  4610  002E                     ___xxtofl:
  4611                           
  4612                           ;incstack = 0
  4613                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4614                           ;___xxtofl@sign stored from wreg
  4615  002E  1283               	bcf	3,5	;RP0=0, select bank0
  4616  002F  1303               	bcf	3,6	;RP1=0, select bank0
  4617  0030  00AE               	movwf	___xxtofl@sign
  4618  0031                     l2238:
  4619  0031  082E               	movf	___xxtofl@sign,w
  4620  0032  1903               	btfsc	3,2
  4621  0033  2835               	goto	u2931
  4622  0034  2836               	goto	u2930
  4623  0035                     u2931:
  4624  0035  284A               	goto	l2244
  4625  0036                     u2930:
  4626  0036                     l2240:
  4627  0036  1FA9               	btfss	___xxtofl@val+3,7
  4628  0037  2839               	goto	u2941
  4629  0038  283A               	goto	u2940
  4630  0039                     u2941:
  4631  0039  284A               	goto	l2244
  4632  003A                     u2940:
  4633  003A                     l2242:
  4634  003A  0926               	comf	___xxtofl@val,w
  4635  003B  00B0               	movwf	___xxtofl@arg
  4636  003C  0927               	comf	___xxtofl@val+1,w
  4637  003D  00B1               	movwf	___xxtofl@arg+1
  4638  003E  0928               	comf	___xxtofl@val+2,w
  4639  003F  00B2               	movwf	___xxtofl@arg+2
  4640  0040  0929               	comf	___xxtofl@val+3,w
  4641  0041  00B3               	movwf	___xxtofl@arg+3
  4642  0042  0AB0               	incf	___xxtofl@arg,f
  4643  0043  1903               	skipnz
  4644  0044  0AB1               	incf	___xxtofl@arg+1,f
  4645  0045  1903               	skipnz
  4646  0046  0AB2               	incf	___xxtofl@arg+2,f
  4647  0047  1903               	skipnz
  4648  0048  0AB3               	incf	___xxtofl@arg+3,f
  4649  0049  2852               	goto	l801
  4650  004A                     l2244:
  4651  004A  0829               	movf	___xxtofl@val+3,w
  4652  004B  00B3               	movwf	___xxtofl@arg+3
  4653  004C  0828               	movf	___xxtofl@val+2,w
  4654  004D  00B2               	movwf	___xxtofl@arg+2
  4655  004E  0827               	movf	___xxtofl@val+1,w
  4656  004F  00B1               	movwf	___xxtofl@arg+1
  4657  0050  0826               	movf	___xxtofl@val,w
  4658  0051  00B0               	movwf	___xxtofl@arg
  4659  0052                     l801:
  4660  0052  0829               	movf	___xxtofl@val+3,w
  4661  0053  0428               	iorwf	___xxtofl@val+2,w
  4662  0054  0427               	iorwf	___xxtofl@val+1,w
  4663  0055  0426               	iorwf	___xxtofl@val,w
  4664  0056  1D03               	skipz
  4665  0057  2859               	goto	u2951
  4666  0058  285A               	goto	u2950
  4667  0059                     u2951:
  4668  0059  2863               	goto	l2250
  4669  005A                     u2950:
  4670  005A                     l2246:
  4671  005A  3000               	movlw	0
  4672  005B  00A9               	movwf	?___xxtofl+3
  4673  005C  3000               	movlw	0
  4674  005D  00A8               	movwf	?___xxtofl+2
  4675  005E  3000               	movlw	0
  4676  005F  00A7               	movwf	?___xxtofl+1
  4677  0060  3000               	movlw	0
  4678  0061  00A6               	movwf	?___xxtofl
  4679  0062  28E9               	goto	l803
  4680  0063                     l2250:
  4681  0063  3096               	movlw	150
  4682  0064  00AA               	movwf	??___xxtofl
  4683  0065  082A               	movf	??___xxtofl,w
  4684  0066  00AF               	movwf	___xxtofl@exp
  4685  0067  2875               	goto	l2254
  4686  0068                     l2252:
  4687  0068  3001               	movlw	1
  4688  0069  00AA               	movwf	??___xxtofl
  4689  006A  082A               	movf	??___xxtofl,w
  4690  006B  07AF               	addwf	___xxtofl@exp,f
  4691  006C  3001               	movlw	1
  4692  006D                     u2965:
  4693  006D  1003               	clrc
  4694  006E  0CB3               	rrf	___xxtofl@arg+3,f
  4695  006F  0CB2               	rrf	___xxtofl@arg+2,f
  4696  0070  0CB1               	rrf	___xxtofl@arg+1,f
  4697  0071  0CB0               	rrf	___xxtofl@arg,f
  4698  0072  3EFF               	addlw	-1
  4699  0073  1D03               	skipz
  4700  0074  286D               	goto	u2965
  4701  0075                     l2254:
  4702  0075  30FE               	movlw	254
  4703  0076  0533               	andwf	___xxtofl@arg+3,w
  4704  0077  1D03               	btfss	3,2
  4705  0078  287A               	goto	u2971
  4706  0079  287B               	goto	u2970
  4707  007A                     u2971:
  4708  007A  2868               	goto	l2252
  4709  007B                     u2970:
  4710  007B  2897               	goto	l807
  4711  007C                     l2256:
  4712  007C  3001               	movlw	1
  4713  007D  00AA               	movwf	??___xxtofl
  4714  007E  082A               	movf	??___xxtofl,w
  4715  007F  07AF               	addwf	___xxtofl@exp,f
  4716  0080                     l2258:
  4717  0080  3001               	movlw	1
  4718  0081  07B0               	addwf	___xxtofl@arg,f
  4719  0082  3000               	movlw	0
  4720  0083  1803               	skipnc
  4721  0084  3001               	movlw	1
  4722  0085  07B1               	addwf	___xxtofl@arg+1,f
  4723  0086  3000               	movlw	0
  4724  0087  1803               	skipnc
  4725  0088  3001               	movlw	1
  4726  0089  07B2               	addwf	___xxtofl@arg+2,f
  4727  008A  3000               	movlw	0
  4728  008B  1803               	skipnc
  4729  008C  3001               	movlw	1
  4730  008D  07B3               	addwf	___xxtofl@arg+3,f
  4731  008E                     l2260:
  4732  008E  3001               	movlw	1
  4733  008F                     u2985:
  4734  008F  1003               	clrc
  4735  0090  0CB3               	rrf	___xxtofl@arg+3,f
  4736  0091  0CB2               	rrf	___xxtofl@arg+2,f
  4737  0092  0CB1               	rrf	___xxtofl@arg+1,f
  4738  0093  0CB0               	rrf	___xxtofl@arg,f
  4739  0094  3EFF               	addlw	-1
  4740  0095  1D03               	skipz
  4741  0096  288F               	goto	u2985
  4742  0097                     l807:
  4743  0097  30FF               	movlw	255
  4744  0098  0533               	andwf	___xxtofl@arg+3,w
  4745  0099  1D03               	btfss	3,2
  4746  009A  289C               	goto	u2991
  4747  009B  289D               	goto	u2990
  4748  009C                     u2991:
  4749  009C  287C               	goto	l2256
  4750  009D                     u2990:
  4751  009D  28A9               	goto	l2264
  4752  009E                     l2262:
  4753  009E  3001               	movlw	1
  4754  009F  02AF               	subwf	___xxtofl@exp,f
  4755  00A0  3001               	movlw	1
  4756  00A1  00AA               	movwf	??___xxtofl
  4757  00A2                     u3005:
  4758  00A2  1003               	clrc
  4759  00A3  0DB0               	rlf	___xxtofl@arg,f
  4760  00A4  0DB1               	rlf	___xxtofl@arg+1,f
  4761  00A5  0DB2               	rlf	___xxtofl@arg+2,f
  4762  00A6  0DB3               	rlf	___xxtofl@arg+3,f
  4763  00A7  0BAA               	decfsz	??___xxtofl,f
  4764  00A8  28A2               	goto	u3005
  4765  00A9                     l2264:
  4766  00A9  1BB2               	btfsc	___xxtofl@arg+2,7
  4767  00AA  28AC               	goto	u3011
  4768  00AB  28AD               	goto	u3010
  4769  00AC                     u3011:
  4770  00AC  28B3               	goto	l814
  4771  00AD                     u3010:
  4772  00AD                     l2266:
  4773  00AD  3002               	movlw	2
  4774  00AE  022F               	subwf	___xxtofl@exp,w
  4775  00AF  1803               	skipnc
  4776  00B0  28B2               	goto	u3021
  4777  00B1  28B3               	goto	u3020
  4778  00B2                     u3021:
  4779  00B2  289E               	goto	l2262
  4780  00B3                     u3020:
  4781  00B3                     l814:
  4782  00B3  182F               	btfsc	___xxtofl@exp,0
  4783  00B4  28B6               	goto	u3031
  4784  00B5  28B7               	goto	u3030
  4785  00B6                     u3031:
  4786  00B6  28BF               	goto	l815
  4787  00B7                     u3030:
  4788  00B7                     l2268:
  4789  00B7  30FF               	movlw	255
  4790  00B8  05B0               	andwf	___xxtofl@arg,f
  4791  00B9  30FF               	movlw	255
  4792  00BA  05B1               	andwf	___xxtofl@arg+1,f
  4793  00BB  307F               	movlw	127
  4794  00BC  05B2               	andwf	___xxtofl@arg+2,f
  4795  00BD  30FF               	movlw	255
  4796  00BE  05B3               	andwf	___xxtofl@arg+3,f
  4797  00BF                     l815:
  4798  00BF  1003               	clrc
  4799  00C0  0CAF               	rrf	___xxtofl@exp,f
  4800  00C1                     l2270:
  4801  00C1  082F               	movf	___xxtofl@exp,w
  4802  00C2  00AA               	movwf	??___xxtofl
  4803  00C3  01AB               	clrf	??___xxtofl+1
  4804  00C4  01AC               	clrf	??___xxtofl+2
  4805  00C5  01AD               	clrf	??___xxtofl+3
  4806  00C6  3018               	movlw	24
  4807  00C7                     u3045:
  4808  00C7  1003               	clrc
  4809  00C8  0DAA               	rlf	??___xxtofl,f
  4810  00C9  0DAB               	rlf	??___xxtofl+1,f
  4811  00CA  0DAC               	rlf	??___xxtofl+2,f
  4812  00CB  0DAD               	rlf	??___xxtofl+3,f
  4813  00CC                     u3040:
  4814  00CC  3EFF               	addlw	-1
  4815  00CD  1D03               	skipz
  4816  00CE  28C7               	goto	u3045
  4817  00CF  082A               	movf	??___xxtofl,w
  4818  00D0  04B0               	iorwf	___xxtofl@arg,f
  4819  00D1  082B               	movf	??___xxtofl+1,w
  4820  00D2  04B1               	iorwf	___xxtofl@arg+1,f
  4821  00D3  082C               	movf	??___xxtofl+2,w
  4822  00D4  04B2               	iorwf	___xxtofl@arg+2,f
  4823  00D5  082D               	movf	??___xxtofl+3,w
  4824  00D6  04B3               	iorwf	___xxtofl@arg+3,f
  4825  00D7                     l2272:
  4826  00D7  082E               	movf	___xxtofl@sign,w
  4827  00D8  1903               	btfsc	3,2
  4828  00D9  28DB               	goto	u3051
  4829  00DA  28DC               	goto	u3050
  4830  00DB                     u3051:
  4831  00DB  28E1               	goto	l2278
  4832  00DC                     u3050:
  4833  00DC                     l2274:
  4834  00DC  1FA9               	btfss	___xxtofl@val+3,7
  4835  00DD  28DF               	goto	u3061
  4836  00DE  28E0               	goto	u3060
  4837  00DF                     u3061:
  4838  00DF  28E1               	goto	l2278
  4839  00E0                     u3060:
  4840  00E0                     l2276:
  4841  00E0  17B3               	bsf	___xxtofl@arg+3,7
  4842  00E1                     l2278:
  4843  00E1  0833               	movf	___xxtofl@arg+3,w
  4844  00E2  00A9               	movwf	?___xxtofl+3
  4845  00E3  0832               	movf	___xxtofl@arg+2,w
  4846  00E4  00A8               	movwf	?___xxtofl+2
  4847  00E5  0831               	movf	___xxtofl@arg+1,w
  4848  00E6  00A7               	movwf	?___xxtofl+1
  4849  00E7  0830               	movf	___xxtofl@arg,w
  4850  00E8  00A6               	movwf	?___xxtofl
  4851  00E9                     l803:
  4852  00E9  0008               	return
  4853  00EA                     __end_of___xxtofl:
  4854                           
  4855                           	psect	text20
  4856  0A40                     __ptext20:	
  4857 ;; *************** function ___fltol *****************
  4858 ;; Defined at:
  4859 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fltol.c"
  4860 ;; Parameters:    Size  Location     Type
  4861 ;;  f1              4   72[BANK0 ] unsigned char 
  4862 ;; Auto vars:     Size  Location     Type
  4863 ;;  exp1            1   12[COMMON] unsigned char 
  4864 ;;  sign1           1   11[COMMON] unsigned char 
  4865 ;; Return value:  Size  Location     Type
  4866 ;;                  4   72[BANK0 ] long 
  4867 ;; Registers used:
  4868 ;;		wreg, status,2, status,0
  4869 ;; Tracked objects:
  4870 ;;		On entry : 0/0
  4871 ;;		On exit  : 0/0
  4872 ;;		Unchanged: 0/0
  4873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4874 ;;      Params:         0       4       0       0       0
  4875 ;;      Locals:         2       0       0       0       0
  4876 ;;      Temps:          0       0       5       0       0
  4877 ;;      Totals:         2       4       5       0       0
  4878 ;;Total ram usage:       11 bytes
  4879 ;; Hardware stack levels used: 1
  4880 ;; This function calls:
  4881 ;;		Nothing
  4882 ;; This function is called by:
  4883 ;;		_realizarCalculo
  4884 ;;		_PWM1_Duty
  4885 ;;		_PWM2_Duty
  4886 ;; This function uses a non-reentrant model
  4887 ;;
  4888                           
  4889                           
  4890                           ;psect for function ___fltol
  4891  0A40                     ___fltol:
  4892  0A40                     l1872:	
  4893                           ;incstack = 0
  4894                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4895                           
  4896  0A40  1003               	clrc
  4897  0A41  1283               	bcf	3,5	;RP0=0, select bank0
  4898  0A42  1303               	bcf	3,6	;RP1=0, select bank0
  4899  0A43  0D6A               	rlf	___fltol@f1+2,w
  4900  0A44  0D6B               	rlf	___fltol@f1+3,w
  4901  0A45  1683               	bsf	3,5	;RP0=1, select bank1
  4902  0A46  1303               	bcf	3,6	;RP1=0, select bank1
  4903  0A47  00CC               	movwf	??___fltol^(0+128)
  4904  0A48  084C               	movf	??___fltol^(0+128),w
  4905  0A49  00FC               	movwf	___fltol@exp1
  4906  0A4A  087C               	movf	___fltol@exp1,w
  4907  0A4B  1D03               	btfss	3,2
  4908  0A4C  2A4E               	goto	u2041
  4909  0A4D  2A4F               	goto	u2040
  4910  0A4E                     u2041:
  4911  0A4E  2A59               	goto	l1878
  4912  0A4F                     u2040:
  4913  0A4F                     l1874:
  4914  0A4F  3000               	movlw	0
  4915  0A50  1283               	bcf	3,5	;RP0=0, select bank0
  4916  0A51  00EB               	movwf	?___fltol+3
  4917  0A52  3000               	movlw	0
  4918  0A53  00EA               	movwf	?___fltol+2
  4919  0A54  3000               	movlw	0
  4920  0A55  00E9               	movwf	?___fltol+1
  4921  0A56  3000               	movlw	0
  4922  0A57  00E8               	movwf	?___fltol
  4923  0A58  2ADA               	goto	l554
  4924  0A59                     l1878:
  4925  0A59  1283               	bcf	3,5	;RP0=0, select bank0
  4926  0A5A  1303               	bcf	3,6	;RP1=0, select bank0
  4927  0A5B  0868               	movf	___fltol@f1,w
  4928  0A5C  1683               	bsf	3,5	;RP0=1, select bank1
  4929  0A5D  1303               	bcf	3,6	;RP1=0, select bank1
  4930  0A5E  00CC               	movwf	??___fltol^(0+128)
  4931  0A5F  1283               	bcf	3,5	;RP0=0, select bank0
  4932  0A60  1303               	bcf	3,6	;RP1=0, select bank0
  4933  0A61  0869               	movf	___fltol@f1+1,w
  4934  0A62  1683               	bsf	3,5	;RP0=1, select bank1
  4935  0A63  1303               	bcf	3,6	;RP1=0, select bank1
  4936  0A64  00CD               	movwf	(??___fltol^(0+128)+1)
  4937  0A65  1283               	bcf	3,5	;RP0=0, select bank0
  4938  0A66  1303               	bcf	3,6	;RP1=0, select bank0
  4939  0A67  086A               	movf	___fltol@f1+2,w
  4940  0A68  1683               	bsf	3,5	;RP0=1, select bank1
  4941  0A69  1303               	bcf	3,6	;RP1=0, select bank1
  4942  0A6A  00CE               	movwf	(??___fltol^(0+128)+2)
  4943  0A6B  1283               	bcf	3,5	;RP0=0, select bank0
  4944  0A6C  1303               	bcf	3,6	;RP1=0, select bank0
  4945  0A6D  086B               	movf	___fltol@f1+3,w
  4946  0A6E  1683               	bsf	3,5	;RP0=1, select bank1
  4947  0A6F  1303               	bcf	3,6	;RP1=0, select bank1
  4948  0A70  00CF               	movwf	(??___fltol^(0+128)+3)
  4949  0A71  301F               	movlw	31
  4950  0A72                     u2055:
  4951  0A72  1003               	clrc
  4952  0A73  0CCF               	rrf	(??___fltol^(0+128)+3),f
  4953  0A74  0CCE               	rrf	(??___fltol^(0+128)+2),f
  4954  0A75  0CCD               	rrf	(??___fltol^(0+128)+1),f
  4955  0A76  0CCC               	rrf	??___fltol^(0+128),f
  4956  0A77                     u2050:
  4957  0A77  3EFF               	addlw	-1
  4958  0A78  1D03               	skipz
  4959  0A79  2A72               	goto	u2055
  4960  0A7A  084C               	movf	??___fltol^(0+128),w
  4961  0A7B  00D0               	movwf	(??___fltol+4)^(0+128)
  4962  0A7C  0850               	movf	(??___fltol+4)^(0+128),w
  4963  0A7D  00FB               	movwf	___fltol@sign1
  4964  0A7E                     l1880:
  4965  0A7E  1283               	bcf	3,5	;RP0=0, select bank0
  4966  0A7F  1303               	bcf	3,6	;RP1=0, select bank0
  4967  0A80  17EA               	bsf	___fltol@f1+2,7
  4968  0A81                     l1882:
  4969  0A81  30FF               	movlw	255
  4970  0A82  05E8               	andwf	___fltol@f1,f
  4971  0A83  30FF               	movlw	255
  4972  0A84  05E9               	andwf	___fltol@f1+1,f
  4973  0A85  30FF               	movlw	255
  4974  0A86  05EA               	andwf	___fltol@f1+2,f
  4975  0A87  3000               	movlw	0
  4976  0A88  05EB               	andwf	___fltol@f1+3,f
  4977  0A89                     l1884:
  4978  0A89  3096               	movlw	150
  4979  0A8A  02FC               	subwf	___fltol@exp1,f
  4980  0A8B                     l1886:
  4981  0A8B  1FFC               	btfss	___fltol@exp1,7
  4982  0A8C  2A8E               	goto	u2061
  4983  0A8D  2A8F               	goto	u2060
  4984  0A8E                     u2061:
  4985  0A8E  2AAC               	goto	l1896
  4986  0A8F                     u2060:
  4987  0A8F                     l1888:
  4988  0A8F  087C               	movf	___fltol@exp1,w
  4989  0A90  3A80               	xorlw	128
  4990  0A91  3E97               	addlw	151
  4991  0A92  1803               	skipnc
  4992  0A93  2A95               	goto	u2071
  4993  0A94  2A96               	goto	u2070
  4994  0A95                     u2071:
  4995  0A95  2A97               	goto	l1894
  4996  0A96                     u2070:
  4997  0A96  2A4F               	goto	l1874
  4998  0A97                     l1894:
  4999  0A97  3001               	movlw	1
  5000  0A98                     u2085:
  5001  0A98  1003               	clrc
  5002  0A99  1283               	bcf	3,5	;RP0=0, select bank0
  5003  0A9A  0CEB               	rrf	___fltol@f1+3,f
  5004  0A9B  0CEA               	rrf	___fltol@f1+2,f
  5005  0A9C  0CE9               	rrf	___fltol@f1+1,f
  5006  0A9D  0CE8               	rrf	___fltol@f1,f
  5007  0A9E  3EFF               	addlw	-1
  5008  0A9F  1D03               	skipz
  5009  0AA0  2A98               	goto	u2085
  5010  0AA1  3001               	movlw	1
  5011  0AA2  1683               	bsf	3,5	;RP0=1, select bank1
  5012  0AA3  1303               	bcf	3,6	;RP1=0, select bank1
  5013  0AA4  00CC               	movwf	??___fltol^(0+128)
  5014  0AA5  084C               	movf	??___fltol^(0+128),w
  5015  0AA6  07FC               	addwf	___fltol@exp1,f
  5016  0AA7  1D03               	btfss	3,2
  5017  0AA8  2AAA               	goto	u2091
  5018  0AA9  2AAB               	goto	u2090
  5019  0AAA                     u2091:
  5020  0AAA  2A97               	goto	l1894
  5021  0AAB                     u2090:
  5022  0AAB  2AC9               	goto	l1904
  5023  0AAC                     l1896:
  5024  0AAC  3020               	movlw	32
  5025  0AAD  027C               	subwf	___fltol@exp1,w
  5026  0AAE  1C03               	skipc
  5027  0AAF  2AB1               	goto	u2101
  5028  0AB0  2AB2               	goto	u2100
  5029  0AB1                     u2101:
  5030  0AB1  2AC4               	goto	l561
  5031  0AB2                     u2100:
  5032  0AB2  2A4F               	goto	l1874
  5033  0AB3                     l1902:
  5034  0AB3  3001               	movlw	1
  5035  0AB4  1683               	bsf	3,5	;RP0=1, select bank1
  5036  0AB5  1303               	bcf	3,6	;RP1=0, select bank1
  5037  0AB6  00CC               	movwf	??___fltol^(0+128)
  5038  0AB7                     u2115:
  5039  0AB7  1003               	clrc
  5040  0AB8  1283               	bcf	3,5	;RP0=0, select bank0
  5041  0AB9  1303               	bcf	3,6	;RP1=0, select bank0
  5042  0ABA  0DE8               	rlf	___fltol@f1,f
  5043  0ABB  0DE9               	rlf	___fltol@f1+1,f
  5044  0ABC  0DEA               	rlf	___fltol@f1+2,f
  5045  0ABD  0DEB               	rlf	___fltol@f1+3,f
  5046  0ABE  1683               	bsf	3,5	;RP0=1, select bank1
  5047  0ABF  1303               	bcf	3,6	;RP1=0, select bank1
  5048  0AC0  0BCC               	decfsz	??___fltol^(0+128),f
  5049  0AC1  2AB7               	goto	u2115
  5050  0AC2  3001               	movlw	1
  5051  0AC3  02FC               	subwf	___fltol@exp1,f
  5052  0AC4                     l561:
  5053  0AC4  087C               	movf	___fltol@exp1,w
  5054  0AC5  1D03               	btfss	3,2
  5055  0AC6  2AC8               	goto	u2121
  5056  0AC7  2AC9               	goto	u2120
  5057  0AC8                     u2121:
  5058  0AC8  2AB3               	goto	l1902
  5059  0AC9                     u2120:
  5060  0AC9                     l1904:
  5061  0AC9  087B               	movf	___fltol@sign1,w
  5062  0ACA  1903               	btfsc	3,2
  5063  0ACB  2ACD               	goto	u2131
  5064  0ACC  2ACE               	goto	u2130
  5065  0ACD                     u2131:
  5066  0ACD  2ADA               	goto	l564
  5067  0ACE                     u2130:
  5068  0ACE                     l1906:
  5069  0ACE  1283               	bcf	3,5	;RP0=0, select bank0
  5070  0ACF  09E8               	comf	___fltol@f1,f
  5071  0AD0  09E9               	comf	___fltol@f1+1,f
  5072  0AD1  09EA               	comf	___fltol@f1+2,f
  5073  0AD2  09EB               	comf	___fltol@f1+3,f
  5074  0AD3  0AE8               	incf	___fltol@f1,f
  5075  0AD4  1903               	skipnz
  5076  0AD5  0AE9               	incf	___fltol@f1+1,f
  5077  0AD6  1903               	skipnz
  5078  0AD7  0AEA               	incf	___fltol@f1+2,f
  5079  0AD8  1903               	skipnz
  5080  0AD9  0AEB               	incf	___fltol@f1+3,f
  5081  0ADA                     l564:
  5082  0ADA                     l554:
  5083  0ADA  0008               	return
  5084  0ADB                     __end_of___fltol:
  5085                           
  5086                           	psect	text21
  5087  0463                     __ptext21:	
  5088 ;; *************** function ___flmul *****************
  5089 ;; Defined at:
  5090 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcmul.c"
  5091 ;; Parameters:    Size  Location     Type
  5092 ;;  b               4   46[BANK0 ] long 
  5093 ;;  a               4   50[BANK0 ] long 
  5094 ;; Auto vars:     Size  Location     Type
  5095 ;;  prod            4   66[BANK0 ] struct .
  5096 ;;  grs             4   60[BANK0 ] unsigned long 
  5097 ;;  temp            2   70[BANK0 ] struct .
  5098 ;;  bexp            1   65[BANK0 ] unsigned char 
  5099 ;;  aexp            1   64[BANK0 ] unsigned char 
  5100 ;;  sign            1   59[BANK0 ] unsigned char 
  5101 ;; Return value:  Size  Location     Type
  5102 ;;                  4   46[BANK0 ] unsigned char 
  5103 ;; Registers used:
  5104 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5105 ;; Tracked objects:
  5106 ;;		On entry : 0/0
  5107 ;;		On exit  : 0/0
  5108 ;;		Unchanged: 0/0
  5109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5110 ;;      Params:         0       8       0       0       0
  5111 ;;      Locals:         0      13       0       0       0
  5112 ;;      Temps:          0       5       0       0       0
  5113 ;;      Totals:         0      26       0       0       0
  5114 ;;Total ram usage:       26 bytes
  5115 ;; Hardware stack levels used: 1
  5116 ;; Hardware stack levels required when called: 1
  5117 ;; This function calls:
  5118 ;;		__Umul8_16
  5119 ;; This function is called by:
  5120 ;;		_realizarCalculo
  5121 ;;		_PWM1_Duty
  5122 ;;		_PWM2_Duty
  5123 ;; This function uses a non-reentrant model
  5124 ;;
  5125                           
  5126                           
  5127                           ;psect for function ___flmul
  5128  0463                     ___flmul:
  5129  0463                     l2098:	
  5130                           ;incstack = 0
  5131                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5132                           
  5133  0463  1283               	bcf	3,5	;RP0=0, select bank0
  5134  0464  1303               	bcf	3,6	;RP1=0, select bank0
  5135  0465  0851               	movf	___flmul@b+3,w
  5136  0466  3980               	andlw	128
  5137  0467  00D6               	movwf	??___flmul
  5138  0468  0856               	movf	??___flmul,w
  5139  0469  00DB               	movwf	___flmul@sign
  5140  046A                     l2100:
  5141  046A  0851               	movf	___flmul@b+3,w
  5142  046B  00D6               	movwf	??___flmul
  5143  046C  0756               	addwf	??___flmul,w
  5144  046D  00D7               	movwf	??___flmul+1
  5145  046E  0857               	movf	??___flmul+1,w
  5146  046F  00E1               	movwf	___flmul@bexp
  5147  0470                     l2102:
  5148  0470  1FD0               	btfss	___flmul@b+2,7
  5149  0471  2C73               	goto	u2561
  5150  0472  2C74               	goto	u2560
  5151  0473                     u2561:
  5152  0473  2C75               	goto	l2106
  5153  0474                     u2560:
  5154  0474                     l2104:
  5155  0474  1461               	bsf	___flmul@bexp,0
  5156  0475                     l2106:
  5157  0475  0861               	movf	___flmul@bexp,w
  5158  0476  1903               	btfsc	3,2
  5159  0477  2C79               	goto	u2571
  5160  0478  2C7A               	goto	u2570
  5161  0479                     u2571:
  5162  0479  2C89               	goto	l2114
  5163  047A                     u2570:
  5164  047A                     l2108:
  5165  047A  0A61               	incf	___flmul@bexp,w
  5166  047B  1D03               	btfss	3,2
  5167  047C  2C7E               	goto	u2581
  5168  047D  2C7F               	goto	u2580
  5169  047E                     u2581:
  5170  047E  2C87               	goto	l2112
  5171  047F                     u2580:
  5172  047F                     l2110:
  5173  047F  3000               	movlw	0
  5174  0480  00D1               	movwf	___flmul@b+3
  5175  0481  3000               	movlw	0
  5176  0482  00D0               	movwf	___flmul@b+2
  5177  0483  3000               	movlw	0
  5178  0484  00CF               	movwf	___flmul@b+1
  5179  0485  3000               	movlw	0
  5180  0486  00CE               	movwf	___flmul@b
  5181  0487                     l2112:
  5182  0487  17D0               	bsf	___flmul@b+2,7
  5183  0488  2C91               	goto	l2116
  5184  0489                     l2114:
  5185  0489  3000               	movlw	0
  5186  048A  00D1               	movwf	___flmul@b+3
  5187  048B  3000               	movlw	0
  5188  048C  00D0               	movwf	___flmul@b+2
  5189  048D  3000               	movlw	0
  5190  048E  00CF               	movwf	___flmul@b+1
  5191  048F  3000               	movlw	0
  5192  0490  00CE               	movwf	___flmul@b
  5193  0491                     l2116:
  5194  0491  0855               	movf	___flmul@a+3,w
  5195  0492  3980               	andlw	128
  5196  0493  00D6               	movwf	??___flmul
  5197  0494  0856               	movf	??___flmul,w
  5198  0495  06DB               	xorwf	___flmul@sign,f
  5199  0496                     l2118:
  5200  0496  0855               	movf	___flmul@a+3,w
  5201  0497  00D6               	movwf	??___flmul
  5202  0498  0756               	addwf	??___flmul,w
  5203  0499  00D7               	movwf	??___flmul+1
  5204  049A  0857               	movf	??___flmul+1,w
  5205  049B  00E0               	movwf	___flmul@aexp
  5206  049C                     l2120:
  5207  049C  1FD4               	btfss	___flmul@a+2,7
  5208  049D  2C9F               	goto	u2591
  5209  049E  2CA0               	goto	u2590
  5210  049F                     u2591:
  5211  049F  2CA1               	goto	l2124
  5212  04A0                     u2590:
  5213  04A0                     l2122:
  5214  04A0  1460               	bsf	___flmul@aexp,0
  5215  04A1                     l2124:
  5216  04A1  0860               	movf	___flmul@aexp,w
  5217  04A2  1903               	btfsc	3,2
  5218  04A3  2CA5               	goto	u2601
  5219  04A4  2CA6               	goto	u2600
  5220  04A5                     u2601:
  5221  04A5  2CB5               	goto	l2132
  5222  04A6                     u2600:
  5223  04A6                     l2126:
  5224  04A6  0A60               	incf	___flmul@aexp,w
  5225  04A7  1D03               	btfss	3,2
  5226  04A8  2CAA               	goto	u2611
  5227  04A9  2CAB               	goto	u2610
  5228  04AA                     u2611:
  5229  04AA  2CB3               	goto	l2130
  5230  04AB                     u2610:
  5231  04AB                     l2128:
  5232  04AB  3000               	movlw	0
  5233  04AC  00D5               	movwf	___flmul@a+3
  5234  04AD  3000               	movlw	0
  5235  04AE  00D4               	movwf	___flmul@a+2
  5236  04AF  3000               	movlw	0
  5237  04B0  00D3               	movwf	___flmul@a+1
  5238  04B1  3000               	movlw	0
  5239  04B2  00D2               	movwf	___flmul@a
  5240  04B3                     l2130:
  5241  04B3  17D4               	bsf	___flmul@a+2,7
  5242  04B4  2CBD               	goto	l2134
  5243  04B5                     l2132:
  5244  04B5  3000               	movlw	0
  5245  04B6  00D5               	movwf	___flmul@a+3
  5246  04B7  3000               	movlw	0
  5247  04B8  00D4               	movwf	___flmul@a+2
  5248  04B9  3000               	movlw	0
  5249  04BA  00D3               	movwf	___flmul@a+1
  5250  04BB  3000               	movlw	0
  5251  04BC  00D2               	movwf	___flmul@a
  5252  04BD                     l2134:
  5253  04BD  0860               	movf	___flmul@aexp,w
  5254  04BE  1903               	btfsc	3,2
  5255  04BF  2CC1               	goto	u2621
  5256  04C0  2CC2               	goto	u2620
  5257  04C1                     u2621:
  5258  04C1  2CC7               	goto	l2138
  5259  04C2                     u2620:
  5260  04C2                     l2136:
  5261  04C2  0861               	movf	___flmul@bexp,w
  5262  04C3  1D03               	btfss	3,2
  5263  04C4  2CC6               	goto	u2631
  5264  04C5  2CC7               	goto	u2630
  5265  04C6                     u2631:
  5266  04C6  2CD0               	goto	l2142
  5267  04C7                     u2630:
  5268  04C7                     l2138:
  5269  04C7  3000               	movlw	0
  5270  04C8  00D1               	movwf	?___flmul+3
  5271  04C9  3000               	movlw	0
  5272  04CA  00D0               	movwf	?___flmul+2
  5273  04CB  3000               	movlw	0
  5274  04CC  00CF               	movwf	?___flmul+1
  5275  04CD  3000               	movlw	0
  5276  04CE  00CE               	movwf	?___flmul
  5277  04CF  2FC3               	goto	l757
  5278  04D0                     l2142:
  5279  04D0  084E               	movf	___flmul@b,w
  5280  04D1  00D6               	movwf	??___flmul
  5281  04D2  0856               	movf	??___flmul,w
  5282  04D3  00F0               	movwf	__Umul8_16@multiplicand
  5283  04D4  0854               	movf	___flmul@a+2,w
  5284  04D5  160A  118A  2740  120A  118A  	fcall	__Umul8_16
  5285  04DA  0871               	movf	?__Umul8_16+1,w
  5286  04DB  1283               	bcf	3,5	;RP0=0, select bank0
  5287  04DC  1303               	bcf	3,6	;RP1=0, select bank0
  5288  04DD  00E7               	movwf	___flmul@temp+1
  5289  04DE  0870               	movf	?__Umul8_16,w
  5290  04DF  00E6               	movwf	___flmul@temp
  5291  04E0                     l2144:
  5292  04E0  0866               	movf	___flmul@temp,w
  5293  04E1  00D6               	movwf	??___flmul
  5294  04E2  01D7               	clrf	??___flmul+1
  5295  04E3  01D8               	clrf	??___flmul+2
  5296  04E4  01D9               	clrf	??___flmul+3
  5297  04E5  0859               	movf	??___flmul+3,w
  5298  04E6  00DF               	movwf	___flmul@grs+3
  5299  04E7  0858               	movf	??___flmul+2,w
  5300  04E8  00DE               	movwf	___flmul@grs+2
  5301  04E9  0857               	movf	??___flmul+1,w
  5302  04EA  00DD               	movwf	___flmul@grs+1
  5303  04EB  0856               	movf	??___flmul,w
  5304  04EC  00DC               	movwf	___flmul@grs
  5305  04ED                     l2146:
  5306  04ED  0867               	movf	___flmul@temp+1,w
  5307  04EE  00D6               	movwf	??___flmul
  5308  04EF  01D7               	clrf	??___flmul+1
  5309  04F0  01D8               	clrf	??___flmul+2
  5310  04F1  01D9               	clrf	??___flmul+3
  5311  04F2  0859               	movf	??___flmul+3,w
  5312  04F3  00E5               	movwf	___flmul@prod+3
  5313  04F4  0858               	movf	??___flmul+2,w
  5314  04F5  00E4               	movwf	___flmul@prod+2
  5315  04F6  0857               	movf	??___flmul+1,w
  5316  04F7  00E3               	movwf	___flmul@prod+1
  5317  04F8  0856               	movf	??___flmul,w
  5318  04F9  00E2               	movwf	___flmul@prod
  5319  04FA  084F               	movf	___flmul@b+1,w
  5320  04FB  00D6               	movwf	??___flmul
  5321  04FC  0856               	movf	??___flmul,w
  5322  04FD  00F0               	movwf	__Umul8_16@multiplicand
  5323  04FE  0853               	movf	___flmul@a+1,w
  5324  04FF  160A  118A  2740  120A  118A  	fcall	__Umul8_16
  5325  0504  0871               	movf	?__Umul8_16+1,w
  5326  0505  1283               	bcf	3,5	;RP0=0, select bank0
  5327  0506  1303               	bcf	3,6	;RP1=0, select bank0
  5328  0507  00E7               	movwf	___flmul@temp+1
  5329  0508  0870               	movf	?__Umul8_16,w
  5330  0509  00E6               	movwf	___flmul@temp
  5331  050A                     l2148:
  5332  050A  0866               	movf	___flmul@temp,w
  5333  050B  00D6               	movwf	??___flmul
  5334  050C  01D7               	clrf	??___flmul+1
  5335  050D  01D8               	clrf	??___flmul+2
  5336  050E  01D9               	clrf	??___flmul+3
  5337  050F  0856               	movf	??___flmul,w
  5338  0510  07DC               	addwf	___flmul@grs,f
  5339  0511  0857               	movf	??___flmul+1,w
  5340  0512  1103               	clrz
  5341  0513  1803               	skipnc
  5342  0514  3E01               	addlw	1
  5343  0515  1903               	skipnz
  5344  0516  2D18               	goto	u2641
  5345  0517  07DD               	addwf	___flmul@grs+1,f
  5346  0518                     u2641:
  5347  0518  0858               	movf	??___flmul+2,w
  5348  0519  1103               	clrz
  5349  051A  1803               	skipnc
  5350  051B  3E01               	addlw	1
  5351  051C  1903               	skipnz
  5352  051D  2D1F               	goto	u2642
  5353  051E  07DE               	addwf	___flmul@grs+2,f
  5354  051F                     u2642:
  5355  051F  0859               	movf	??___flmul+3,w
  5356  0520  1103               	clrz
  5357  0521  1803               	skipnc
  5358  0522  3E01               	addlw	1
  5359  0523  1903               	skipnz
  5360  0524  2D26               	goto	u2643
  5361  0525  07DF               	addwf	___flmul@grs+3,f
  5362  0526                     u2643:
  5363  0526                     l2150:
  5364  0526  0867               	movf	___flmul@temp+1,w
  5365  0527  00D6               	movwf	??___flmul
  5366  0528  01D7               	clrf	??___flmul+1
  5367  0529  01D8               	clrf	??___flmul+2
  5368  052A  01D9               	clrf	??___flmul+3
  5369  052B  0856               	movf	??___flmul,w
  5370  052C  07E2               	addwf	___flmul@prod,f
  5371  052D  0857               	movf	??___flmul+1,w
  5372  052E  1103               	clrz
  5373  052F  1803               	skipnc
  5374  0530  3E01               	addlw	1
  5375  0531  1903               	skipnz
  5376  0532  2D34               	goto	u2651
  5377  0533  07E3               	addwf	___flmul@prod+1,f
  5378  0534                     u2651:
  5379  0534  0858               	movf	??___flmul+2,w
  5380  0535  1103               	clrz
  5381  0536  1803               	skipnc
  5382  0537  3E01               	addlw	1
  5383  0538  1903               	skipnz
  5384  0539  2D3B               	goto	u2652
  5385  053A  07E4               	addwf	___flmul@prod+2,f
  5386  053B                     u2652:
  5387  053B  0859               	movf	??___flmul+3,w
  5388  053C  1103               	clrz
  5389  053D  1803               	skipnc
  5390  053E  3E01               	addlw	1
  5391  053F  1903               	skipnz
  5392  0540  2D42               	goto	u2653
  5393  0541  07E5               	addwf	___flmul@prod+3,f
  5394  0542                     u2653:
  5395  0542  0850               	movf	___flmul@b+2,w
  5396  0543  00D6               	movwf	??___flmul
  5397  0544  0856               	movf	??___flmul,w
  5398  0545  00F0               	movwf	__Umul8_16@multiplicand
  5399  0546  0852               	movf	___flmul@a,w
  5400  0547  160A  118A  2740  120A  118A  	fcall	__Umul8_16
  5401  054C  0871               	movf	?__Umul8_16+1,w
  5402  054D  1283               	bcf	3,5	;RP0=0, select bank0
  5403  054E  1303               	bcf	3,6	;RP1=0, select bank0
  5404  054F  00E7               	movwf	___flmul@temp+1
  5405  0550  0870               	movf	?__Umul8_16,w
  5406  0551  00E6               	movwf	___flmul@temp
  5407  0552                     l2152:
  5408  0552  0866               	movf	___flmul@temp,w
  5409  0553  00D6               	movwf	??___flmul
  5410  0554  01D7               	clrf	??___flmul+1
  5411  0555  01D8               	clrf	??___flmul+2
  5412  0556  01D9               	clrf	??___flmul+3
  5413  0557  0856               	movf	??___flmul,w
  5414  0558  07DC               	addwf	___flmul@grs,f
  5415  0559  0857               	movf	??___flmul+1,w
  5416  055A  1103               	clrz
  5417  055B  1803               	skipnc
  5418  055C  3E01               	addlw	1
  5419  055D  1903               	skipnz
  5420  055E  2D60               	goto	u2661
  5421  055F  07DD               	addwf	___flmul@grs+1,f
  5422  0560                     u2661:
  5423  0560  0858               	movf	??___flmul+2,w
  5424  0561  1103               	clrz
  5425  0562  1803               	skipnc
  5426  0563  3E01               	addlw	1
  5427  0564  1903               	skipnz
  5428  0565  2D67               	goto	u2662
  5429  0566  07DE               	addwf	___flmul@grs+2,f
  5430  0567                     u2662:
  5431  0567  0859               	movf	??___flmul+3,w
  5432  0568  1103               	clrz
  5433  0569  1803               	skipnc
  5434  056A  3E01               	addlw	1
  5435  056B  1903               	skipnz
  5436  056C  2D6E               	goto	u2663
  5437  056D  07DF               	addwf	___flmul@grs+3,f
  5438  056E                     u2663:
  5439  056E                     l2154:
  5440  056E  0867               	movf	___flmul@temp+1,w
  5441  056F  00D6               	movwf	??___flmul
  5442  0570  01D7               	clrf	??___flmul+1
  5443  0571  01D8               	clrf	??___flmul+2
  5444  0572  01D9               	clrf	??___flmul+3
  5445  0573  0856               	movf	??___flmul,w
  5446  0574  07E2               	addwf	___flmul@prod,f
  5447  0575  0857               	movf	??___flmul+1,w
  5448  0576  1103               	clrz
  5449  0577  1803               	skipnc
  5450  0578  3E01               	addlw	1
  5451  0579  1903               	skipnz
  5452  057A  2D7C               	goto	u2671
  5453  057B  07E3               	addwf	___flmul@prod+1,f
  5454  057C                     u2671:
  5455  057C  0858               	movf	??___flmul+2,w
  5456  057D  1103               	clrz
  5457  057E  1803               	skipnc
  5458  057F  3E01               	addlw	1
  5459  0580  1903               	skipnz
  5460  0581  2D83               	goto	u2672
  5461  0582  07E4               	addwf	___flmul@prod+2,f
  5462  0583                     u2672:
  5463  0583  0859               	movf	??___flmul+3,w
  5464  0584  1103               	clrz
  5465  0585  1803               	skipnc
  5466  0586  3E01               	addlw	1
  5467  0587  1903               	skipnz
  5468  0588  2D8A               	goto	u2673
  5469  0589  07E5               	addwf	___flmul@prod+3,f
  5470  058A                     u2673:
  5471  058A                     l2156:
  5472  058A  3008               	movlw	8
  5473  058B  00D6               	movwf	??___flmul
  5474  058C                     u2685:
  5475  058C  1003               	clrc
  5476  058D  0DDC               	rlf	___flmul@grs,f
  5477  058E  0DDD               	rlf	___flmul@grs+1,f
  5478  058F  0DDE               	rlf	___flmul@grs+2,f
  5479  0590  0DDF               	rlf	___flmul@grs+3,f
  5480  0591  0BD6               	decfsz	??___flmul,f
  5481  0592  2D8C               	goto	u2685
  5482  0593                     l2158:
  5483  0593  084F               	movf	___flmul@b+1,w
  5484  0594  00D6               	movwf	??___flmul
  5485  0595  0856               	movf	??___flmul,w
  5486  0596  00F0               	movwf	__Umul8_16@multiplicand
  5487  0597  0852               	movf	___flmul@a,w
  5488  0598  160A  118A  2740  120A  118A  	fcall	__Umul8_16
  5489  059D  0871               	movf	?__Umul8_16+1,w
  5490  059E  1283               	bcf	3,5	;RP0=0, select bank0
  5491  059F  1303               	bcf	3,6	;RP1=0, select bank0
  5492  05A0  00E7               	movwf	___flmul@temp+1
  5493  05A1  0870               	movf	?__Umul8_16,w
  5494  05A2  00E6               	movwf	___flmul@temp
  5495  05A3                     l2160:
  5496  05A3  0866               	movf	___flmul@temp,w
  5497  05A4  00D6               	movwf	??___flmul
  5498  05A5  0867               	movf	___flmul@temp+1,w
  5499  05A6  00D7               	movwf	??___flmul+1
  5500  05A7  01D8               	clrf	??___flmul+2
  5501  05A8  01D9               	clrf	??___flmul+3
  5502  05A9  0856               	movf	??___flmul,w
  5503  05AA  07DC               	addwf	___flmul@grs,f
  5504  05AB  0857               	movf	??___flmul+1,w
  5505  05AC  1103               	clrz
  5506  05AD  1803               	skipnc
  5507  05AE  3E01               	addlw	1
  5508  05AF  1903               	skipnz
  5509  05B0  2DB2               	goto	u2691
  5510  05B1  07DD               	addwf	___flmul@grs+1,f
  5511  05B2                     u2691:
  5512  05B2  0858               	movf	??___flmul+2,w
  5513  05B3  1103               	clrz
  5514  05B4  1803               	skipnc
  5515  05B5  3E01               	addlw	1
  5516  05B6  1903               	skipnz
  5517  05B7  2DB9               	goto	u2692
  5518  05B8  07DE               	addwf	___flmul@grs+2,f
  5519  05B9                     u2692:
  5520  05B9  0859               	movf	??___flmul+3,w
  5521  05BA  1103               	clrz
  5522  05BB  1803               	skipnc
  5523  05BC  3E01               	addlw	1
  5524  05BD  1903               	skipnz
  5525  05BE  2DC0               	goto	u2693
  5526  05BF  07DF               	addwf	___flmul@grs+3,f
  5527  05C0                     u2693:
  5528  05C0                     l2162:
  5529  05C0  084E               	movf	___flmul@b,w
  5530  05C1  00D6               	movwf	??___flmul
  5531  05C2  0856               	movf	??___flmul,w
  5532  05C3  00F0               	movwf	__Umul8_16@multiplicand
  5533  05C4  0853               	movf	___flmul@a+1,w
  5534  05C5  160A  118A  2740  120A  118A  	fcall	__Umul8_16
  5535  05CA  0871               	movf	?__Umul8_16+1,w
  5536  05CB  1283               	bcf	3,5	;RP0=0, select bank0
  5537  05CC  1303               	bcf	3,6	;RP1=0, select bank0
  5538  05CD  00E7               	movwf	___flmul@temp+1
  5539  05CE  0870               	movf	?__Umul8_16,w
  5540  05CF  00E6               	movwf	___flmul@temp
  5541  05D0                     l2164:
  5542  05D0  0866               	movf	___flmul@temp,w
  5543  05D1  00D6               	movwf	??___flmul
  5544  05D2  0867               	movf	___flmul@temp+1,w
  5545  05D3  00D7               	movwf	??___flmul+1
  5546  05D4  01D8               	clrf	??___flmul+2
  5547  05D5  01D9               	clrf	??___flmul+3
  5548  05D6  0856               	movf	??___flmul,w
  5549  05D7  07DC               	addwf	___flmul@grs,f
  5550  05D8  0857               	movf	??___flmul+1,w
  5551  05D9  1103               	clrz
  5552  05DA  1803               	skipnc
  5553  05DB  3E01               	addlw	1
  5554  05DC  1903               	skipnz
  5555  05DD  2DDF               	goto	u2701
  5556  05DE  07DD               	addwf	___flmul@grs+1,f
  5557  05DF                     u2701:
  5558  05DF  0858               	movf	??___flmul+2,w
  5559  05E0  1103               	clrz
  5560  05E1  1803               	skipnc
  5561  05E2  3E01               	addlw	1
  5562  05E3  1903               	skipnz
  5563  05E4  2DE6               	goto	u2702
  5564  05E5  07DE               	addwf	___flmul@grs+2,f
  5565  05E6                     u2702:
  5566  05E6  0859               	movf	??___flmul+3,w
  5567  05E7  1103               	clrz
  5568  05E8  1803               	skipnc
  5569  05E9  3E01               	addlw	1
  5570  05EA  1903               	skipnz
  5571  05EB  2DED               	goto	u2703
  5572  05EC  07DF               	addwf	___flmul@grs+3,f
  5573  05ED                     u2703:
  5574  05ED                     l2166:
  5575  05ED  3008               	movlw	8
  5576  05EE  00D6               	movwf	??___flmul
  5577  05EF                     u2715:
  5578  05EF  1003               	clrc
  5579  05F0  0DDC               	rlf	___flmul@grs,f
  5580  05F1  0DDD               	rlf	___flmul@grs+1,f
  5581  05F2  0DDE               	rlf	___flmul@grs+2,f
  5582  05F3  0DDF               	rlf	___flmul@grs+3,f
  5583  05F4  0BD6               	decfsz	??___flmul,f
  5584  05F5  2DEF               	goto	u2715
  5585  05F6  084E               	movf	___flmul@b,w
  5586  05F7  00D6               	movwf	??___flmul
  5587  05F8  0856               	movf	??___flmul,w
  5588  05F9  00F0               	movwf	__Umul8_16@multiplicand
  5589  05FA  0852               	movf	___flmul@a,w
  5590  05FB  160A  118A  2740  120A  118A  	fcall	__Umul8_16
  5591  0600  0871               	movf	?__Umul8_16+1,w
  5592  0601  1283               	bcf	3,5	;RP0=0, select bank0
  5593  0602  1303               	bcf	3,6	;RP1=0, select bank0
  5594  0603  00E7               	movwf	___flmul@temp+1
  5595  0604  0870               	movf	?__Umul8_16,w
  5596  0605  00E6               	movwf	___flmul@temp
  5597  0606                     l2168:
  5598  0606  0866               	movf	___flmul@temp,w
  5599  0607  00D6               	movwf	??___flmul
  5600  0608  0867               	movf	___flmul@temp+1,w
  5601  0609  00D7               	movwf	??___flmul+1
  5602  060A  01D8               	clrf	??___flmul+2
  5603  060B  01D9               	clrf	??___flmul+3
  5604  060C  0856               	movf	??___flmul,w
  5605  060D  07DC               	addwf	___flmul@grs,f
  5606  060E  0857               	movf	??___flmul+1,w
  5607  060F  1103               	clrz
  5608  0610  1803               	skipnc
  5609  0611  3E01               	addlw	1
  5610  0612  1903               	skipnz
  5611  0613  2E15               	goto	u2721
  5612  0614  07DD               	addwf	___flmul@grs+1,f
  5613  0615                     u2721:
  5614  0615  0858               	movf	??___flmul+2,w
  5615  0616  1103               	clrz
  5616  0617  1803               	skipnc
  5617  0618  3E01               	addlw	1
  5618  0619  1903               	skipnz
  5619  061A  2E1C               	goto	u2722
  5620  061B  07DE               	addwf	___flmul@grs+2,f
  5621  061C                     u2722:
  5622  061C  0859               	movf	??___flmul+3,w
  5623  061D  1103               	clrz
  5624  061E  1803               	skipnc
  5625  061F  3E01               	addlw	1
  5626  0620  1903               	skipnz
  5627  0621  2E23               	goto	u2723
  5628  0622  07DF               	addwf	___flmul@grs+3,f
  5629  0623                     u2723:
  5630  0623                     l2170:
  5631  0623  084F               	movf	___flmul@b+1,w
  5632  0624  00D6               	movwf	??___flmul
  5633  0625  0856               	movf	??___flmul,w
  5634  0626  00F0               	movwf	__Umul8_16@multiplicand
  5635  0627  0854               	movf	___flmul@a+2,w
  5636  0628  160A  118A  2740  120A  118A  	fcall	__Umul8_16
  5637  062D  0871               	movf	?__Umul8_16+1,w
  5638  062E  1283               	bcf	3,5	;RP0=0, select bank0
  5639  062F  1303               	bcf	3,6	;RP1=0, select bank0
  5640  0630  00E7               	movwf	___flmul@temp+1
  5641  0631  0870               	movf	?__Umul8_16,w
  5642  0632  00E6               	movwf	___flmul@temp
  5643  0633  0866               	movf	___flmul@temp,w
  5644  0634  00D6               	movwf	??___flmul
  5645  0635  0867               	movf	___flmul@temp+1,w
  5646  0636  00D7               	movwf	??___flmul+1
  5647  0637  01D8               	clrf	??___flmul+2
  5648  0638  01D9               	clrf	??___flmul+3
  5649  0639  0856               	movf	??___flmul,w
  5650  063A  07E2               	addwf	___flmul@prod,f
  5651  063B  0857               	movf	??___flmul+1,w
  5652  063C  1103               	clrz
  5653  063D  1803               	skipnc
  5654  063E  3E01               	addlw	1
  5655  063F  1903               	skipnz
  5656  0640  2E42               	goto	u2731
  5657  0641  07E3               	addwf	___flmul@prod+1,f
  5658  0642                     u2731:
  5659  0642  0858               	movf	??___flmul+2,w
  5660  0643  1103               	clrz
  5661  0644  1803               	skipnc
  5662  0645  3E01               	addlw	1
  5663  0646  1903               	skipnz
  5664  0647  2E49               	goto	u2732
  5665  0648  07E4               	addwf	___flmul@prod+2,f
  5666  0649                     u2732:
  5667  0649  0859               	movf	??___flmul+3,w
  5668  064A  1103               	clrz
  5669  064B  1803               	skipnc
  5670  064C  3E01               	addlw	1
  5671  064D  1903               	skipnz
  5672  064E  2E50               	goto	u2733
  5673  064F  07E5               	addwf	___flmul@prod+3,f
  5674  0650                     u2733:
  5675  0650                     l2172:
  5676  0650  0850               	movf	___flmul@b+2,w
  5677  0651  00D6               	movwf	??___flmul
  5678  0652  0856               	movf	??___flmul,w
  5679  0653  00F0               	movwf	__Umul8_16@multiplicand
  5680  0654  0853               	movf	___flmul@a+1,w
  5681  0655  160A  118A  2740  120A  118A  	fcall	__Umul8_16
  5682  065A  0871               	movf	?__Umul8_16+1,w
  5683  065B  1283               	bcf	3,5	;RP0=0, select bank0
  5684  065C  1303               	bcf	3,6	;RP1=0, select bank0
  5685  065D  00E7               	movwf	___flmul@temp+1
  5686  065E  0870               	movf	?__Umul8_16,w
  5687  065F  00E6               	movwf	___flmul@temp
  5688  0660                     l2174:
  5689  0660  0866               	movf	___flmul@temp,w
  5690  0661  00D6               	movwf	??___flmul
  5691  0662  0867               	movf	___flmul@temp+1,w
  5692  0663  00D7               	movwf	??___flmul+1
  5693  0664  01D8               	clrf	??___flmul+2
  5694  0665  01D9               	clrf	??___flmul+3
  5695  0666  0856               	movf	??___flmul,w
  5696  0667  07E2               	addwf	___flmul@prod,f
  5697  0668  0857               	movf	??___flmul+1,w
  5698  0669  1103               	clrz
  5699  066A  1803               	skipnc
  5700  066B  3E01               	addlw	1
  5701  066C  1903               	skipnz
  5702  066D  2E6F               	goto	u2741
  5703  066E  07E3               	addwf	___flmul@prod+1,f
  5704  066F                     u2741:
  5705  066F  0858               	movf	??___flmul+2,w
  5706  0670  1103               	clrz
  5707  0671  1803               	skipnc
  5708  0672  3E01               	addlw	1
  5709  0673  1903               	skipnz
  5710  0674  2E76               	goto	u2742
  5711  0675  07E4               	addwf	___flmul@prod+2,f
  5712  0676                     u2742:
  5713  0676  0859               	movf	??___flmul+3,w
  5714  0677  1103               	clrz
  5715  0678  1803               	skipnc
  5716  0679  3E01               	addlw	1
  5717  067A  1903               	skipnz
  5718  067B  2E7D               	goto	u2743
  5719  067C  07E5               	addwf	___flmul@prod+3,f
  5720  067D                     u2743:
  5721  067D  0850               	movf	___flmul@b+2,w
  5722  067E  00D6               	movwf	??___flmul
  5723  067F  0856               	movf	??___flmul,w
  5724  0680  00F0               	movwf	__Umul8_16@multiplicand
  5725  0681  0854               	movf	___flmul@a+2,w
  5726  0682  160A  118A  2740  120A  118A  	fcall	__Umul8_16
  5727  0687  0871               	movf	?__Umul8_16+1,w
  5728  0688  1283               	bcf	3,5	;RP0=0, select bank0
  5729  0689  1303               	bcf	3,6	;RP1=0, select bank0
  5730  068A  00E7               	movwf	___flmul@temp+1
  5731  068B  0870               	movf	?__Umul8_16,w
  5732  068C  00E6               	movwf	___flmul@temp
  5733  068D                     l2176:
  5734  068D  0866               	movf	___flmul@temp,w
  5735  068E  00D6               	movwf	??___flmul
  5736  068F  0867               	movf	___flmul@temp+1,w
  5737  0690  00D7               	movwf	??___flmul+1
  5738  0691  01D8               	clrf	??___flmul+2
  5739  0692  01D9               	clrf	??___flmul+3
  5740  0693  3008               	movlw	8
  5741  0694                     u2755:
  5742  0694  1003               	clrc
  5743  0695  0DD6               	rlf	??___flmul,f
  5744  0696  0DD7               	rlf	??___flmul+1,f
  5745  0697  0DD8               	rlf	??___flmul+2,f
  5746  0698  0DD9               	rlf	??___flmul+3,f
  5747  0699                     u2750:
  5748  0699  3EFF               	addlw	-1
  5749  069A  1D03               	skipz
  5750  069B  2E94               	goto	u2755
  5751  069C  0856               	movf	??___flmul,w
  5752  069D  07E2               	addwf	___flmul@prod,f
  5753  069E  0857               	movf	??___flmul+1,w
  5754  069F  1103               	clrz
  5755  06A0  1803               	skipnc
  5756  06A1  3E01               	addlw	1
  5757  06A2  1903               	skipnz
  5758  06A3  2EA5               	goto	u2761
  5759  06A4  07E3               	addwf	___flmul@prod+1,f
  5760  06A5                     u2761:
  5761  06A5  0858               	movf	??___flmul+2,w
  5762  06A6  1103               	clrz
  5763  06A7  1803               	skipnc
  5764  06A8  3E01               	addlw	1
  5765  06A9  1903               	skipnz
  5766  06AA  2EAC               	goto	u2762
  5767  06AB  07E4               	addwf	___flmul@prod+2,f
  5768  06AC                     u2762:
  5769  06AC  0859               	movf	??___flmul+3,w
  5770  06AD  1103               	clrz
  5771  06AE  1803               	skipnc
  5772  06AF  3E01               	addlw	1
  5773  06B0  1903               	skipnz
  5774  06B1  2EB3               	goto	u2763
  5775  06B2  07E5               	addwf	___flmul@prod+3,f
  5776  06B3                     u2763:
  5777  06B3                     l2178:
  5778  06B3  085C               	movf	___flmul@grs,w
  5779  06B4  00D6               	movwf	??___flmul
  5780  06B5  085D               	movf	___flmul@grs+1,w
  5781  06B6  00D7               	movwf	??___flmul+1
  5782  06B7  085E               	movf	___flmul@grs+2,w
  5783  06B8  00D8               	movwf	??___flmul+2
  5784  06B9  085F               	movf	___flmul@grs+3,w
  5785  06BA  00D9               	movwf	??___flmul+3
  5786  06BB  3018               	movlw	24
  5787  06BC                     u2775:
  5788  06BC  1003               	clrc
  5789  06BD  0CD9               	rrf	??___flmul+3,f
  5790  06BE  0CD8               	rrf	??___flmul+2,f
  5791  06BF  0CD7               	rrf	??___flmul+1,f
  5792  06C0  0CD6               	rrf	??___flmul,f
  5793  06C1                     u2770:
  5794  06C1  3EFF               	addlw	-1
  5795  06C2  1D03               	skipz
  5796  06C3  2EBC               	goto	u2775
  5797  06C4  0856               	movf	??___flmul,w
  5798  06C5  07E2               	addwf	___flmul@prod,f
  5799  06C6  0857               	movf	??___flmul+1,w
  5800  06C7  1103               	clrz
  5801  06C8  1803               	skipnc
  5802  06C9  3E01               	addlw	1
  5803  06CA  1903               	skipnz
  5804  06CB  2ECD               	goto	u2781
  5805  06CC  07E3               	addwf	___flmul@prod+1,f
  5806  06CD                     u2781:
  5807  06CD  0858               	movf	??___flmul+2,w
  5808  06CE  1103               	clrz
  5809  06CF  1803               	skipnc
  5810  06D0  3E01               	addlw	1
  5811  06D1  1903               	skipnz
  5812  06D2  2ED4               	goto	u2782
  5813  06D3  07E4               	addwf	___flmul@prod+2,f
  5814  06D4                     u2782:
  5815  06D4  0859               	movf	??___flmul+3,w
  5816  06D5  1103               	clrz
  5817  06D6  1803               	skipnc
  5818  06D7  3E01               	addlw	1
  5819  06D8  1903               	skipnz
  5820  06D9  2EDB               	goto	u2783
  5821  06DA  07E5               	addwf	___flmul@prod+3,f
  5822  06DB                     u2783:
  5823  06DB                     l2180:
  5824  06DB  3008               	movlw	8
  5825  06DC  00D6               	movwf	??___flmul
  5826  06DD                     u2795:
  5827  06DD  1003               	clrc
  5828  06DE  0DDC               	rlf	___flmul@grs,f
  5829  06DF  0DDD               	rlf	___flmul@grs+1,f
  5830  06E0  0DDE               	rlf	___flmul@grs+2,f
  5831  06E1  0DDF               	rlf	___flmul@grs+3,f
  5832  06E2  0BD6               	decfsz	??___flmul,f
  5833  06E3  2EDD               	goto	u2795
  5834  06E4                     l2182:
  5835  06E4  0861               	movf	___flmul@bexp,w
  5836  06E5  0760               	addwf	___flmul@aexp,w
  5837  06E6  00D6               	movwf	??___flmul
  5838  06E7  01D7               	clrf	??___flmul+1
  5839  06E8  0DD7               	rlf	??___flmul+1,f
  5840  06E9  0856               	movf	??___flmul,w
  5841  06EA  3E82               	addlw	130
  5842  06EB  00E6               	movwf	___flmul@temp
  5843  06EC  0857               	movf	??___flmul+1,w
  5844  06ED  1803               	skipnc
  5845  06EE  3E01               	addlw	1
  5846  06EF  3EFF               	addlw	255
  5847  06F0  00E7               	movwf	___flmul@temp+1
  5848  06F1  2F0F               	goto	l2194
  5849  06F2                     l2184:
  5850  06F2  3001               	movlw	1
  5851  06F3  00D6               	movwf	??___flmul
  5852  06F4                     u2805:
  5853  06F4  1003               	clrc
  5854  06F5  0DE2               	rlf	___flmul@prod,f
  5855  06F6  0DE3               	rlf	___flmul@prod+1,f
  5856  06F7  0DE4               	rlf	___flmul@prod+2,f
  5857  06F8  0DE5               	rlf	___flmul@prod+3,f
  5858  06F9  0BD6               	decfsz	??___flmul,f
  5859  06FA  2EF4               	goto	u2805
  5860  06FB                     l2186:
  5861  06FB  1FDF               	btfss	___flmul@grs+3,7
  5862  06FC  2EFE               	goto	u2811
  5863  06FD  2EFF               	goto	u2810
  5864  06FE                     u2811:
  5865  06FE  2F00               	goto	l2190
  5866  06FF                     u2810:
  5867  06FF                     l2188:
  5868  06FF  1462               	bsf	___flmul@prod,0
  5869  0700                     l2190:
  5870  0700  3001               	movlw	1
  5871  0701  00D6               	movwf	??___flmul
  5872  0702                     u2825:
  5873  0702  1003               	clrc
  5874  0703  0DDC               	rlf	___flmul@grs,f
  5875  0704  0DDD               	rlf	___flmul@grs+1,f
  5876  0705  0DDE               	rlf	___flmul@grs+2,f
  5877  0706  0DDF               	rlf	___flmul@grs+3,f
  5878  0707  0BD6               	decfsz	??___flmul,f
  5879  0708  2F02               	goto	u2825
  5880  0709                     l2192:
  5881  0709  30FF               	movlw	255
  5882  070A  07E6               	addwf	___flmul@temp,f
  5883  070B  1803               	skipnc
  5884  070C  0AE7               	incf	___flmul@temp+1,f
  5885  070D  30FF               	movlw	255
  5886  070E  07E7               	addwf	___flmul@temp+1,f
  5887  070F                     l2194:
  5888  070F  1FE4               	btfss	___flmul@prod+2,7
  5889  0710  2F12               	goto	u2831
  5890  0711  2F13               	goto	u2830
  5891  0712                     u2831:
  5892  0712  2EF2               	goto	l2184
  5893  0713                     u2830:
  5894  0713                     l2196:
  5895  0713  01E0               	clrf	___flmul@aexp
  5896  0714                     l2198:
  5897  0714  1FDF               	btfss	___flmul@grs+3,7
  5898  0715  2F17               	goto	u2841
  5899  0716  2F18               	goto	u2840
  5900  0717                     u2841:
  5901  0717  2F34               	goto	l2206
  5902  0718                     u2840:
  5903  0718                     l2200:
  5904  0718  30FF               	movlw	255
  5905  0719  055C               	andwf	___flmul@grs,w
  5906  071A  00D6               	movwf	??___flmul
  5907  071B  30FF               	movlw	255
  5908  071C  055D               	andwf	___flmul@grs+1,w
  5909  071D  00D7               	movwf	??___flmul+1
  5910  071E  30FF               	movlw	255
  5911  071F  055E               	andwf	___flmul@grs+2,w
  5912  0720  00D8               	movwf	??___flmul+2
  5913  0721  307F               	movlw	127
  5914  0722  055F               	andwf	___flmul@grs+3,w
  5915  0723  00D9               	movwf	??___flmul+3
  5916  0724  0859               	movf	??___flmul+3,w
  5917  0725  0458               	iorwf	??___flmul+2,w
  5918  0726  0457               	iorwf	??___flmul+1,w
  5919  0727  0456               	iorwf	??___flmul,w
  5920  0728  1903               	skipnz
  5921  0729  2F2B               	goto	u2851
  5922  072A  2F2C               	goto	u2850
  5923  072B                     u2851:
  5924  072B  2F2F               	goto	l763
  5925  072C                     u2850:
  5926  072C                     l2202:
  5927  072C  01E0               	clrf	___flmul@aexp
  5928  072D  0AE0               	incf	___flmul@aexp,f
  5929  072E  2F34               	goto	l2206
  5930  072F                     l763:
  5931  072F  1C62               	btfss	___flmul@prod,0
  5932  0730  2F32               	goto	u2861
  5933  0731  2F33               	goto	u2860
  5934  0732                     u2861:
  5935  0732  2F34               	goto	l2206
  5936  0733                     u2860:
  5937  0733  2F2C               	goto	l2202
  5938  0734                     l2206:
  5939  0734  0860               	movf	___flmul@aexp,w
  5940  0735  1903               	btfsc	3,2
  5941  0736  2F38               	goto	u2871
  5942  0737  2F39               	goto	u2870
  5943  0738                     u2871:
  5944  0738  2F6A               	goto	l2216
  5945  0739                     u2870:
  5946  0739                     l2208:
  5947  0739  3001               	movlw	1
  5948  073A  07E2               	addwf	___flmul@prod,f
  5949  073B  3000               	movlw	0
  5950  073C  1803               	skipnc
  5951  073D  3001               	movlw	1
  5952  073E  07E3               	addwf	___flmul@prod+1,f
  5953  073F  3000               	movlw	0
  5954  0740  1803               	skipnc
  5955  0741  3001               	movlw	1
  5956  0742  07E4               	addwf	___flmul@prod+2,f
  5957  0743  3000               	movlw	0
  5958  0744  1803               	skipnc
  5959  0745  3001               	movlw	1
  5960  0746  07E5               	addwf	___flmul@prod+3,f
  5961  0747                     l2210:
  5962  0747  1C65               	btfss	___flmul@prod+3,0
  5963  0748  2F4A               	goto	u2881
  5964  0749  2F4B               	goto	u2880
  5965  074A                     u2881:
  5966  074A  2F6A               	goto	l2216
  5967  074B                     u2880:
  5968  074B                     l2212:
  5969  074B  0862               	movf	___flmul@prod,w
  5970  074C  00D6               	movwf	??___flmul
  5971  074D  0863               	movf	___flmul@prod+1,w
  5972  074E  00D7               	movwf	??___flmul+1
  5973  074F  0864               	movf	___flmul@prod+2,w
  5974  0750  00D8               	movwf	??___flmul+2
  5975  0751  0865               	movf	___flmul@prod+3,w
  5976  0752  00D9               	movwf	??___flmul+3
  5977  0753  3001               	movlw	1
  5978  0754  00DA               	movwf	??___flmul+4
  5979  0755                     u2895:
  5980  0755  0D59               	rlf	??___flmul+3,w
  5981  0756  0CD9               	rrf	??___flmul+3,f
  5982  0757  0CD8               	rrf	??___flmul+2,f
  5983  0758  0CD7               	rrf	??___flmul+1,f
  5984  0759  0CD6               	rrf	??___flmul,f
  5985  075A                     u2890:
  5986  075A  0BDA               	decfsz	??___flmul+4,f
  5987  075B  2F55               	goto	u2895
  5988  075C  0859               	movf	??___flmul+3,w
  5989  075D  00E5               	movwf	___flmul@prod+3
  5990  075E  0858               	movf	??___flmul+2,w
  5991  075F  00E4               	movwf	___flmul@prod+2
  5992  0760  0857               	movf	??___flmul+1,w
  5993  0761  00E3               	movwf	___flmul@prod+1
  5994  0762  0856               	movf	??___flmul,w
  5995  0763  00E2               	movwf	___flmul@prod
  5996  0764                     l2214:
  5997  0764  3001               	movlw	1
  5998  0765  07E6               	addwf	___flmul@temp,f
  5999  0766  1803               	skipnc
  6000  0767  0AE7               	incf	___flmul@temp+1,f
  6001  0768  3000               	movlw	0
  6002  0769  07E7               	addwf	___flmul@temp+1,f
  6003  076A                     l2216:
  6004  076A  0867               	movf	___flmul@temp+1,w
  6005  076B  3A80               	xorlw	128
  6006  076C  00FF               	movwf	btemp+1
  6007  076D  3080               	movlw	128
  6008  076E  027F               	subwf	btemp+1,w
  6009  076F  1D03               	skipz
  6010  0770  2F73               	goto	u2905
  6011  0771  30FF               	movlw	255
  6012  0772  0266               	subwf	___flmul@temp,w
  6013  0773                     u2905:
  6014  0773  1C03               	skipc
  6015  0774  2F76               	goto	u2901
  6016  0775  2F77               	goto	u2900
  6017  0776                     u2901:
  6018  0776  2F82               	goto	l2220
  6019  0777                     u2900:
  6020  0777                     l2218:
  6021  0777  307F               	movlw	127
  6022  0778  1283               	bcf	3,5	;RP0=0, select bank0
  6023  0779  1303               	bcf	3,6	;RP1=0, select bank0
  6024  077A  00E5               	movwf	___flmul@prod+3
  6025  077B  3080               	movlw	128
  6026  077C  00E4               	movwf	___flmul@prod+2
  6027  077D  3000               	movlw	0
  6028  077E  00E3               	movwf	___flmul@prod+1
  6029  077F  3000               	movlw	0
  6030  0780  00E2               	movwf	___flmul@prod
  6031  0781  2FB7               	goto	l769
  6032  0782                     l2220:
  6033  0782  1283               	bcf	3,5	;RP0=0, select bank0
  6034  0783  1303               	bcf	3,6	;RP1=0, select bank0
  6035  0784  0867               	movf	___flmul@temp+1,w
  6036  0785  3A80               	xorlw	128
  6037  0786  00FF               	movwf	btemp+1
  6038  0787  3080               	movlw	128
  6039  0788  027F               	subwf	btemp+1,w
  6040  0789  1D03               	skipz
  6041  078A  2F8D               	goto	u2915
  6042  078B  3001               	movlw	1
  6043  078C  0266               	subwf	___flmul@temp,w
  6044  078D                     u2915:
  6045  078D  1803               	skipnc
  6046  078E  2F90               	goto	u2911
  6047  078F  2F91               	goto	u2910
  6048  0790                     u2911:
  6049  0790  2F9D               	goto	l2226
  6050  0791                     u2910:
  6051  0791                     l2222:
  6052  0791  3000               	movlw	0
  6053  0792  1283               	bcf	3,5	;RP0=0, select bank0
  6054  0793  1303               	bcf	3,6	;RP1=0, select bank0
  6055  0794  00E5               	movwf	___flmul@prod+3
  6056  0795  3000               	movlw	0
  6057  0796  00E4               	movwf	___flmul@prod+2
  6058  0797  3000               	movlw	0
  6059  0798  00E3               	movwf	___flmul@prod+1
  6060  0799  3000               	movlw	0
  6061  079A  00E2               	movwf	___flmul@prod
  6062  079B                     l2224:
  6063  079B  01DB               	clrf	___flmul@sign
  6064  079C  2FB7               	goto	l769
  6065  079D                     l2226:
  6066  079D  1283               	bcf	3,5	;RP0=0, select bank0
  6067  079E  1303               	bcf	3,6	;RP1=0, select bank0
  6068  079F  0866               	movf	___flmul@temp,w
  6069  07A0  00D6               	movwf	??___flmul
  6070  07A1  0856               	movf	??___flmul,w
  6071  07A2  00E1               	movwf	___flmul@bexp
  6072  07A3  30FF               	movlw	255
  6073  07A4  05E2               	andwf	___flmul@prod,f
  6074  07A5  30FF               	movlw	255
  6075  07A6  05E3               	andwf	___flmul@prod+1,f
  6076  07A7  307F               	movlw	127
  6077  07A8  05E4               	andwf	___flmul@prod+2,f
  6078  07A9  3000               	movlw	0
  6079  07AA  05E5               	andwf	___flmul@prod+3,f
  6080  07AB                     l2228:
  6081  07AB  1C61               	btfss	___flmul@bexp,0
  6082  07AC  2FAE               	goto	u2921
  6083  07AD  2FAF               	goto	u2920
  6084  07AE                     u2921:
  6085  07AE  2FB0               	goto	l2232
  6086  07AF                     u2920:
  6087  07AF                     l2230:
  6088  07AF  17E4               	bsf	___flmul@prod+2,7
  6089  07B0                     l2232:
  6090  07B0  0861               	movf	___flmul@bexp,w
  6091  07B1  00D6               	movwf	??___flmul
  6092  07B2  1003               	clrc
  6093  07B3  0C56               	rrf	??___flmul,w
  6094  07B4  00D7               	movwf	??___flmul+1
  6095  07B5  0857               	movf	??___flmul+1,w
  6096  07B6  00E5               	movwf	___flmul@prod+3
  6097  07B7                     l769:
  6098  07B7  085B               	movf	___flmul@sign,w
  6099  07B8  00D6               	movwf	??___flmul
  6100  07B9  0856               	movf	??___flmul,w
  6101  07BA  04E5               	iorwf	___flmul@prod+3,f
  6102  07BB                     l2234:
  6103  07BB  0865               	movf	___flmul@prod+3,w
  6104  07BC  00D1               	movwf	?___flmul+3
  6105  07BD  0864               	movf	___flmul@prod+2,w
  6106  07BE  00D0               	movwf	?___flmul+2
  6107  07BF  0863               	movf	___flmul@prod+1,w
  6108  07C0  00CF               	movwf	?___flmul+1
  6109  07C1  0862               	movf	___flmul@prod,w
  6110  07C2  00CE               	movwf	?___flmul
  6111  07C3                     l757:
  6112  07C3  0008               	return
  6113  07C4                     __end_of___flmul:
  6114                           
  6115                           	psect	text22
  6116  1740                     __ptext22:	
  6117 ;; *************** function __Umul8_16 *****************
  6118 ;; Defined at:
  6119 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8_16.c"
  6120 ;; Parameters:    Size  Location     Type
  6121 ;;  multiplier      1    wreg     unsigned char 
  6122 ;;  multiplicand    1    0[COMMON] unsigned char 
  6123 ;; Auto vars:     Size  Location     Type
  6124 ;;  multiplier      1    8[COMMON] unsigned char 
  6125 ;;  word_mpld       2    6[COMMON] unsigned int 
  6126 ;;  product         2    4[COMMON] unsigned int 
  6127 ;; Return value:  Size  Location     Type
  6128 ;;                  2    0[COMMON] unsigned int 
  6129 ;; Registers used:
  6130 ;;		wreg, status,2, status,0
  6131 ;; Tracked objects:
  6132 ;;		On entry : 0/0
  6133 ;;		On exit  : 0/0
  6134 ;;		Unchanged: 0/0
  6135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6136 ;;      Params:         2       0       0       0       0
  6137 ;;      Locals:         5       0       0       0       0
  6138 ;;      Temps:          2       0       0       0       0
  6139 ;;      Totals:         9       0       0       0       0
  6140 ;;Total ram usage:        9 bytes
  6141 ;; Hardware stack levels used: 1
  6142 ;; This function calls:
  6143 ;;		Nothing
  6144 ;; This function is called by:
  6145 ;;		___flmul
  6146 ;; This function uses a non-reentrant model
  6147 ;;
  6148                           
  6149                           
  6150                           ;psect for function __Umul8_16
  6151  1740                     __Umul8_16:
  6152                           
  6153                           ;incstack = 0
  6154                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6155                           ;__Umul8_16@multiplier stored from wreg
  6156  1740  00F8               	movwf	__Umul8_16@multiplier
  6157  1741                     l1846:
  6158  1741  01F4               	clrf	__Umul8_16@product
  6159  1742  01F5               	clrf	__Umul8_16@product+1
  6160  1743                     l1848:
  6161  1743  0870               	movf	__Umul8_16@multiplicand,w
  6162  1744  00F2               	movwf	??__Umul8_16
  6163  1745  01F3               	clrf	??__Umul8_16+1
  6164  1746  0872               	movf	??__Umul8_16,w
  6165  1747  00F6               	movwf	__Umul8_16@word_mpld
  6166  1748  0873               	movf	??__Umul8_16+1,w
  6167  1749  00F7               	movwf	__Umul8_16@word_mpld+1
  6168  174A                     l1850:
  6169  174A  1C78               	btfss	__Umul8_16@multiplier,0
  6170  174B  2F4D               	goto	u1991
  6171  174C  2F4E               	goto	u1990
  6172  174D                     u1991:
  6173  174D  2F54               	goto	l776
  6174  174E                     u1990:
  6175  174E                     l1852:
  6176  174E  0876               	movf	__Umul8_16@word_mpld,w
  6177  174F  07F4               	addwf	__Umul8_16@product,f
  6178  1750  1803               	skipnc
  6179  1751  0AF5               	incf	__Umul8_16@product+1,f
  6180  1752  0877               	movf	__Umul8_16@word_mpld+1,w
  6181  1753  07F5               	addwf	__Umul8_16@product+1,f
  6182  1754                     l776:
  6183  1754  3001               	movlw	1
  6184  1755                     u2005:
  6185  1755  1003               	clrc
  6186  1756  0DF6               	rlf	__Umul8_16@word_mpld,f
  6187  1757  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  6188  1758  3EFF               	addlw	-1
  6189  1759  1D03               	skipz
  6190  175A  2F55               	goto	u2005
  6191  175B  1003               	clrc
  6192  175C  0CF8               	rrf	__Umul8_16@multiplier,f
  6193  175D                     l1854:
  6194  175D  0878               	movf	__Umul8_16@multiplier,w
  6195  175E  1D03               	btfss	3,2
  6196  175F  2F61               	goto	u2011
  6197  1760  2F62               	goto	u2010
  6198  1761                     u2011:
  6199  1761  2F4A               	goto	l1850
  6200  1762                     u2010:
  6201  1762                     l1856:
  6202  1762  0875               	movf	__Umul8_16@product+1,w
  6203  1763  00F1               	movwf	?__Umul8_16+1
  6204  1764  0874               	movf	__Umul8_16@product,w
  6205  1765  00F0               	movwf	?__Umul8_16
  6206  1766                     l778:
  6207  1766  0008               	return
  6208  1767                     __end_of__Umul8_16:
  6209                           
  6210                           	psect	text23
  6211  0286                     __ptext23:	
  6212 ;; *************** function ___fldiv *****************
  6213 ;; Defined at:
  6214 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcdiv.c"
  6215 ;; Parameters:    Size  Location     Type
  6216 ;;  a               4   20[BANK0 ] unsigned int 
  6217 ;;  b               4   24[BANK0 ] unsigned int 
  6218 ;; Auto vars:     Size  Location     Type
  6219 ;;  grs             4   40[BANK0 ] unsigned long 
  6220 ;;  rem             4   33[BANK0 ] unsigned long 
  6221 ;;  new_exp         2   38[BANK0 ] int 
  6222 ;;  aexp            1   45[BANK0 ] unsigned char 
  6223 ;;  bexp            1   44[BANK0 ] unsigned char 
  6224 ;;  sign            1   37[BANK0 ] unsigned char 
  6225 ;; Return value:  Size  Location     Type
  6226 ;;                  4   20[BANK0 ] unsigned char 
  6227 ;; Registers used:
  6228 ;;		wreg, status,2, status,0, btemp+1
  6229 ;; Tracked objects:
  6230 ;;		On entry : 0/0
  6231 ;;		On exit  : 0/0
  6232 ;;		Unchanged: 0/0
  6233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6234 ;;      Params:         0       8       0       0       0
  6235 ;;      Locals:         0      13       0       0       0
  6236 ;;      Temps:          0       5       0       0       0
  6237 ;;      Totals:         0      26       0       0       0
  6238 ;;Total ram usage:       26 bytes
  6239 ;; Hardware stack levels used: 1
  6240 ;; This function calls:
  6241 ;;		Nothing
  6242 ;; This function is called by:
  6243 ;;		_realizarCalculo
  6244 ;;		_PWM1_Duty
  6245 ;;		_PWM2_Duty
  6246 ;; This function uses a non-reentrant model
  6247 ;;
  6248                           
  6249                           
  6250                           ;psect for function ___fldiv
  6251  0286                     ___fldiv:
  6252  0286                     l1956:	
  6253                           ;incstack = 0
  6254                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  6255                           
  6256  0286  1283               	bcf	3,5	;RP0=0, select bank0
  6257  0287  1303               	bcf	3,6	;RP1=0, select bank0
  6258  0288  083B               	movf	___fldiv@b+3,w
  6259  0289  3980               	andlw	128
  6260  028A  00BC               	movwf	??___fldiv
  6261  028B  083C               	movf	??___fldiv,w
  6262  028C  00C5               	movwf	___fldiv@sign
  6263  028D                     l1958:
  6264  028D  083B               	movf	___fldiv@b+3,w
  6265  028E  00BC               	movwf	??___fldiv
  6266  028F  073C               	addwf	??___fldiv,w
  6267  0290  00BD               	movwf	??___fldiv+1
  6268  0291  083D               	movf	??___fldiv+1,w
  6269  0292  00CC               	movwf	___fldiv@bexp
  6270  0293                     l1960:
  6271  0293  1FBA               	btfss	___fldiv@b+2,7
  6272  0294  2A96               	goto	u2271
  6273  0295  2A97               	goto	u2270
  6274  0296                     u2271:
  6275  0296  2A98               	goto	l1964
  6276  0297                     u2270:
  6277  0297                     l1962:
  6278  0297  144C               	bsf	___fldiv@bexp,0
  6279  0298                     l1964:
  6280  0298  084C               	movf	___fldiv@bexp,w
  6281  0299  1903               	btfsc	3,2
  6282  029A  2A9C               	goto	u2281
  6283  029B  2A9D               	goto	u2280
  6284  029C                     u2281:
  6285  029C  2AAD               	goto	l1974
  6286  029D                     u2280:
  6287  029D                     l1966:
  6288  029D  0A4C               	incf	___fldiv@bexp,w
  6289  029E  1D03               	btfss	3,2
  6290  029F  2AA1               	goto	u2291
  6291  02A0  2AA2               	goto	u2290
  6292  02A1                     u2291:
  6293  02A1  2AAA               	goto	l1970
  6294  02A2                     u2290:
  6295  02A2                     l1968:
  6296  02A2  3000               	movlw	0
  6297  02A3  00BB               	movwf	___fldiv@b+3
  6298  02A4  3000               	movlw	0
  6299  02A5  00BA               	movwf	___fldiv@b+2
  6300  02A6  3000               	movlw	0
  6301  02A7  00B9               	movwf	___fldiv@b+1
  6302  02A8  3000               	movlw	0
  6303  02A9  00B8               	movwf	___fldiv@b
  6304  02AA                     l1970:
  6305  02AA  17BA               	bsf	___fldiv@b+2,7
  6306  02AB                     l1972:
  6307  02AB  01BB               	clrf	___fldiv@b+3
  6308  02AC  2AB5               	goto	l1976
  6309  02AD                     l1974:
  6310  02AD  3000               	movlw	0
  6311  02AE  00BB               	movwf	___fldiv@b+3
  6312  02AF  3000               	movlw	0
  6313  02B0  00BA               	movwf	___fldiv@b+2
  6314  02B1  3000               	movlw	0
  6315  02B2  00B9               	movwf	___fldiv@b+1
  6316  02B3  3000               	movlw	0
  6317  02B4  00B8               	movwf	___fldiv@b
  6318  02B5                     l1976:
  6319  02B5  0837               	movf	___fldiv@a+3,w
  6320  02B6  3980               	andlw	128
  6321  02B7  00BC               	movwf	??___fldiv
  6322  02B8  083C               	movf	??___fldiv,w
  6323  02B9  06C5               	xorwf	___fldiv@sign,f
  6324  02BA                     l1978:
  6325  02BA  0837               	movf	___fldiv@a+3,w
  6326  02BB  00BC               	movwf	??___fldiv
  6327  02BC  073C               	addwf	??___fldiv,w
  6328  02BD  00BD               	movwf	??___fldiv+1
  6329  02BE  083D               	movf	??___fldiv+1,w
  6330  02BF  00CD               	movwf	___fldiv@aexp
  6331  02C0                     l1980:
  6332  02C0  1FB6               	btfss	___fldiv@a+2,7
  6333  02C1  2AC3               	goto	u2301
  6334  02C2  2AC4               	goto	u2300
  6335  02C3                     u2301:
  6336  02C3  2AC5               	goto	l1984
  6337  02C4                     u2300:
  6338  02C4                     l1982:
  6339  02C4  144D               	bsf	___fldiv@aexp,0
  6340  02C5                     l1984:
  6341  02C5  084D               	movf	___fldiv@aexp,w
  6342  02C6  1903               	btfsc	3,2
  6343  02C7  2AC9               	goto	u2311
  6344  02C8  2ACA               	goto	u2310
  6345  02C9                     u2311:
  6346  02C9  2ADA               	goto	l1994
  6347  02CA                     u2310:
  6348  02CA                     l1986:
  6349  02CA  0A4D               	incf	___fldiv@aexp,w
  6350  02CB  1D03               	btfss	3,2
  6351  02CC  2ACE               	goto	u2321
  6352  02CD  2ACF               	goto	u2320
  6353  02CE                     u2321:
  6354  02CE  2AD7               	goto	l1990
  6355  02CF                     u2320:
  6356  02CF                     l1988:
  6357  02CF  3000               	movlw	0
  6358  02D0  00B7               	movwf	___fldiv@a+3
  6359  02D1  3000               	movlw	0
  6360  02D2  00B6               	movwf	___fldiv@a+2
  6361  02D3  3000               	movlw	0
  6362  02D4  00B5               	movwf	___fldiv@a+1
  6363  02D5  3000               	movlw	0
  6364  02D6  00B4               	movwf	___fldiv@a
  6365  02D7                     l1990:
  6366  02D7  17B6               	bsf	___fldiv@a+2,7
  6367  02D8                     l1992:
  6368  02D8  01B7               	clrf	___fldiv@a+3
  6369  02D9  2AE2               	goto	l717
  6370  02DA                     l1994:
  6371  02DA  3000               	movlw	0
  6372  02DB  00B7               	movwf	___fldiv@a+3
  6373  02DC  3000               	movlw	0
  6374  02DD  00B6               	movwf	___fldiv@a+2
  6375  02DE  3000               	movlw	0
  6376  02DF  00B5               	movwf	___fldiv@a+1
  6377  02E0  3000               	movlw	0
  6378  02E1  00B4               	movwf	___fldiv@a
  6379  02E2                     l717:
  6380  02E2  0837               	movf	___fldiv@a+3,w
  6381  02E3  0436               	iorwf	___fldiv@a+2,w
  6382  02E4  0435               	iorwf	___fldiv@a+1,w
  6383  02E5  0434               	iorwf	___fldiv@a,w
  6384  02E6  1D03               	skipz
  6385  02E7  2AE9               	goto	u2331
  6386  02E8  2AEA               	goto	u2330
  6387  02E9                     u2331:
  6388  02E9  2B03               	goto	l2004
  6389  02EA                     u2330:
  6390  02EA                     l1996:
  6391  02EA  3000               	movlw	0
  6392  02EB  00BB               	movwf	___fldiv@b+3
  6393  02EC  3000               	movlw	0
  6394  02ED  00BA               	movwf	___fldiv@b+2
  6395  02EE  3000               	movlw	0
  6396  02EF  00B9               	movwf	___fldiv@b+1
  6397  02F0  3000               	movlw	0
  6398  02F1  00B8               	movwf	___fldiv@b
  6399  02F2  3080               	movlw	128
  6400  02F3  04BA               	iorwf	___fldiv@b+2,f
  6401  02F4  307F               	movlw	127
  6402  02F5  04BB               	iorwf	___fldiv@b+3,f
  6403  02F6                     l1998:
  6404  02F6  0845               	movf	___fldiv@sign,w
  6405  02F7  00BC               	movwf	??___fldiv
  6406  02F8  083C               	movf	??___fldiv,w
  6407  02F9  04BB               	iorwf	___fldiv@b+3,f
  6408  02FA                     l2000:
  6409  02FA  083B               	movf	___fldiv@b+3,w
  6410  02FB  00B7               	movwf	?___fldiv+3
  6411  02FC  083A               	movf	___fldiv@b+2,w
  6412  02FD  00B6               	movwf	?___fldiv+2
  6413  02FE  0839               	movf	___fldiv@b+1,w
  6414  02FF  00B5               	movwf	?___fldiv+1
  6415  0300  0838               	movf	___fldiv@b,w
  6416  0301  00B4               	movwf	?___fldiv
  6417  0302  2C62               	goto	l719
  6418  0303                     l2004:
  6419  0303  084C               	movf	___fldiv@bexp,w
  6420  0304  1D03               	btfss	3,2
  6421  0305  2B07               	goto	u2341
  6422  0306  2B08               	goto	u2340
  6423  0307                     u2341:
  6424  0307  2B11               	goto	l2010
  6425  0308                     u2340:
  6426  0308                     l2006:
  6427  0308  3000               	movlw	0
  6428  0309  00B7               	movwf	?___fldiv+3
  6429  030A  3000               	movlw	0
  6430  030B  00B6               	movwf	?___fldiv+2
  6431  030C  3000               	movlw	0
  6432  030D  00B5               	movwf	?___fldiv+1
  6433  030E  3000               	movlw	0
  6434  030F  00B4               	movwf	?___fldiv
  6435  0310  2C62               	goto	l719
  6436  0311                     l2010:
  6437  0311  084C               	movf	___fldiv@bexp,w
  6438  0312  00BC               	movwf	??___fldiv
  6439  0313  01BD               	clrf	??___fldiv+1
  6440  0314  083D               	movf	??___fldiv+1,w
  6441  0315  00BF               	movwf	??___fldiv+3
  6442  0316  084D               	movf	___fldiv@aexp,w
  6443  0317  023C               	subwf	??___fldiv,w
  6444  0318  00BE               	movwf	??___fldiv+2
  6445  0319  1C03               	skipc
  6446  031A  03BF               	decf	??___fldiv+3,f
  6447  031B  083E               	movf	??___fldiv+2,w
  6448  031C  3E7F               	addlw	127
  6449  031D  00C6               	movwf	___fldiv@new_exp
  6450  031E  083F               	movf	??___fldiv+3,w
  6451  031F  1803               	skipnc
  6452  0320  3E01               	addlw	1
  6453  0321  3E00               	addlw	0
  6454  0322  00C7               	movwf	___fldiv@new_exp+1
  6455  0323                     l2012:
  6456  0323  083B               	movf	___fldiv@b+3,w
  6457  0324  00C4               	movwf	___fldiv@rem+3
  6458  0325  083A               	movf	___fldiv@b+2,w
  6459  0326  00C3               	movwf	___fldiv@rem+2
  6460  0327  0839               	movf	___fldiv@b+1,w
  6461  0328  00C2               	movwf	___fldiv@rem+1
  6462  0329  0838               	movf	___fldiv@b,w
  6463  032A  00C1               	movwf	___fldiv@rem
  6464  032B                     l2014:
  6465  032B  3000               	movlw	0
  6466  032C  00BB               	movwf	___fldiv@b+3
  6467  032D  3000               	movlw	0
  6468  032E  00BA               	movwf	___fldiv@b+2
  6469  032F  3000               	movlw	0
  6470  0330  00B9               	movwf	___fldiv@b+1
  6471  0331  3000               	movlw	0
  6472  0332  00B8               	movwf	___fldiv@b
  6473  0333                     l2016:
  6474  0333  3000               	movlw	0
  6475  0334  00CB               	movwf	___fldiv@grs+3
  6476  0335  3000               	movlw	0
  6477  0336  00CA               	movwf	___fldiv@grs+2
  6478  0337  3000               	movlw	0
  6479  0338  00C9               	movwf	___fldiv@grs+1
  6480  0339  3000               	movlw	0
  6481  033A  00C8               	movwf	___fldiv@grs
  6482  033B                     l2018:
  6483  033B  01CD               	clrf	___fldiv@aexp
  6484  033C  2B87               	goto	l2038
  6485  033D                     l2020:
  6486  033D  084D               	movf	___fldiv@aexp,w
  6487  033E  1903               	btfsc	3,2
  6488  033F  2B41               	goto	u2351
  6489  0340  2B42               	goto	u2350
  6490  0341                     u2351:
  6491  0341  2B62               	goto	l2030
  6492  0342                     u2350:
  6493  0342                     l2022:
  6494  0342  3001               	movlw	1
  6495  0343  00BC               	movwf	??___fldiv
  6496  0344                     u2365:
  6497  0344  1003               	clrc
  6498  0345  0DC1               	rlf	___fldiv@rem,f
  6499  0346  0DC2               	rlf	___fldiv@rem+1,f
  6500  0347  0DC3               	rlf	___fldiv@rem+2,f
  6501  0348  0DC4               	rlf	___fldiv@rem+3,f
  6502  0349  0BBC               	decfsz	??___fldiv,f
  6503  034A  2B44               	goto	u2365
  6504  034B  3001               	movlw	1
  6505  034C  00BC               	movwf	??___fldiv
  6506  034D                     u2375:
  6507  034D  1003               	clrc
  6508  034E  0DB8               	rlf	___fldiv@b,f
  6509  034F  0DB9               	rlf	___fldiv@b+1,f
  6510  0350  0DBA               	rlf	___fldiv@b+2,f
  6511  0351  0DBB               	rlf	___fldiv@b+3,f
  6512  0352  0BBC               	decfsz	??___fldiv,f
  6513  0353  2B4D               	goto	u2375
  6514  0354                     l2024:
  6515  0354  1FCB               	btfss	___fldiv@grs+3,7
  6516  0355  2B57               	goto	u2381
  6517  0356  2B58               	goto	u2380
  6518  0357                     u2381:
  6519  0357  2B59               	goto	l2028
  6520  0358                     u2380:
  6521  0358                     l2026:
  6522  0358  1438               	bsf	___fldiv@b,0
  6523  0359                     l2028:
  6524  0359  3001               	movlw	1
  6525  035A  00BC               	movwf	??___fldiv
  6526  035B                     u2395:
  6527  035B  1003               	clrc
  6528  035C  0DC8               	rlf	___fldiv@grs,f
  6529  035D  0DC9               	rlf	___fldiv@grs+1,f
  6530  035E  0DCA               	rlf	___fldiv@grs+2,f
  6531  035F  0DCB               	rlf	___fldiv@grs+3,f
  6532  0360  0BBC               	decfsz	??___fldiv,f
  6533  0361  2B5B               	goto	u2395
  6534  0362                     l2030:
  6535  0362  0837               	movf	___fldiv@a+3,w
  6536  0363  0244               	subwf	___fldiv@rem+3,w
  6537  0364  1D03               	skipz
  6538  0365  2B70               	goto	u2405
  6539  0366  0836               	movf	___fldiv@a+2,w
  6540  0367  0243               	subwf	___fldiv@rem+2,w
  6541  0368  1D03               	skipz
  6542  0369  2B70               	goto	u2405
  6543  036A  0835               	movf	___fldiv@a+1,w
  6544  036B  0242               	subwf	___fldiv@rem+1,w
  6545  036C  1D03               	skipz
  6546  036D  2B70               	goto	u2405
  6547  036E  0834               	movf	___fldiv@a,w
  6548  036F  0241               	subwf	___fldiv@rem,w
  6549  0370                     u2405:
  6550  0370  1C03               	skipc
  6551  0371  2B73               	goto	u2401
  6552  0372  2B74               	goto	u2400
  6553  0373                     u2401:
  6554  0373  2B83               	goto	l2036
  6555  0374                     u2400:
  6556  0374                     l2032:
  6557  0374  174B               	bsf	___fldiv@grs+3,6
  6558  0375                     l2034:
  6559  0375  0834               	movf	___fldiv@a,w
  6560  0376  02C1               	subwf	___fldiv@rem,f
  6561  0377  0835               	movf	___fldiv@a+1,w
  6562  0378  1C03               	skipc
  6563  0379  0F35               	incfsz	___fldiv@a+1,w
  6564  037A  02C2               	subwf	___fldiv@rem+1,f
  6565  037B  0836               	movf	___fldiv@a+2,w
  6566  037C  1C03               	skipc
  6567  037D  0F36               	incfsz	___fldiv@a+2,w
  6568  037E  02C3               	subwf	___fldiv@rem+2,f
  6569  037F  0837               	movf	___fldiv@a+3,w
  6570  0380  1C03               	skipc
  6571  0381  0F37               	incfsz	___fldiv@a+3,w
  6572  0382  02C4               	subwf	___fldiv@rem+3,f
  6573  0383                     l2036:
  6574  0383  3001               	movlw	1
  6575  0384  00BC               	movwf	??___fldiv
  6576  0385  083C               	movf	??___fldiv,w
  6577  0386  07CD               	addwf	___fldiv@aexp,f
  6578  0387                     l2038:
  6579  0387  301A               	movlw	26
  6580  0388  024D               	subwf	___fldiv@aexp,w
  6581  0389  1C03               	skipc
  6582  038A  2B8C               	goto	u2411
  6583  038B  2B8D               	goto	u2410
  6584  038C                     u2411:
  6585  038C  2B3D               	goto	l2020
  6586  038D                     u2410:
  6587  038D                     l2040:
  6588  038D  0844               	movf	___fldiv@rem+3,w
  6589  038E  0443               	iorwf	___fldiv@rem+2,w
  6590  038F  0442               	iorwf	___fldiv@rem+1,w
  6591  0390  0441               	iorwf	___fldiv@rem,w
  6592  0391  1903               	skipnz
  6593  0392  2B94               	goto	u2421
  6594  0393  2B95               	goto	u2420
  6595  0394                     u2421:
  6596  0394  2BB4               	goto	l2054
  6597  0395                     u2420:
  6598  0395                     l2042:
  6599  0395  1448               	bsf	___fldiv@grs,0
  6600  0396  2BB4               	goto	l2054
  6601  0397                     l2044:
  6602  0397  3001               	movlw	1
  6603  0398  00BC               	movwf	??___fldiv
  6604  0399                     u2435:
  6605  0399  1003               	clrc
  6606  039A  0DB8               	rlf	___fldiv@b,f
  6607  039B  0DB9               	rlf	___fldiv@b+1,f
  6608  039C  0DBA               	rlf	___fldiv@b+2,f
  6609  039D  0DBB               	rlf	___fldiv@b+3,f
  6610  039E  0BBC               	decfsz	??___fldiv,f
  6611  039F  2B99               	goto	u2435
  6612  03A0                     l2046:
  6613  03A0  1FCB               	btfss	___fldiv@grs+3,7
  6614  03A1  2BA3               	goto	u2441
  6615  03A2  2BA4               	goto	u2440
  6616  03A3                     u2441:
  6617  03A3  2BA5               	goto	l2050
  6618  03A4                     u2440:
  6619  03A4                     l2048:
  6620  03A4  1438               	bsf	___fldiv@b,0
  6621  03A5                     l2050:
  6622  03A5  3001               	movlw	1
  6623  03A6  00BC               	movwf	??___fldiv
  6624  03A7                     u2455:
  6625  03A7  1003               	clrc
  6626  03A8  0DC8               	rlf	___fldiv@grs,f
  6627  03A9  0DC9               	rlf	___fldiv@grs+1,f
  6628  03AA  0DCA               	rlf	___fldiv@grs+2,f
  6629  03AB  0DCB               	rlf	___fldiv@grs+3,f
  6630  03AC  0BBC               	decfsz	??___fldiv,f
  6631  03AD  2BA7               	goto	u2455
  6632  03AE                     l2052:
  6633  03AE  30FF               	movlw	255
  6634  03AF  07C6               	addwf	___fldiv@new_exp,f
  6635  03B0  1803               	skipnc
  6636  03B1  0AC7               	incf	___fldiv@new_exp+1,f
  6637  03B2  30FF               	movlw	255
  6638  03B3  07C7               	addwf	___fldiv@new_exp+1,f
  6639  03B4                     l2054:
  6640  03B4  1FBA               	btfss	___fldiv@b+2,7
  6641  03B5  2BB7               	goto	u2461
  6642  03B6  2BB8               	goto	u2460
  6643  03B7                     u2461:
  6644  03B7  2B97               	goto	l2044
  6645  03B8                     u2460:
  6646  03B8                     l2056:
  6647  03B8  01CD               	clrf	___fldiv@aexp
  6648  03B9                     l2058:
  6649  03B9  1FCB               	btfss	___fldiv@grs+3,7
  6650  03BA  2BBC               	goto	u2471
  6651  03BB  2BBD               	goto	u2470
  6652  03BC                     u2471:
  6653  03BC  2BD9               	goto	l2066
  6654  03BD                     u2470:
  6655  03BD                     l2060:
  6656  03BD  30FF               	movlw	255
  6657  03BE  0548               	andwf	___fldiv@grs,w
  6658  03BF  00BC               	movwf	??___fldiv
  6659  03C0  30FF               	movlw	255
  6660  03C1  0549               	andwf	___fldiv@grs+1,w
  6661  03C2  00BD               	movwf	??___fldiv+1
  6662  03C3  30FF               	movlw	255
  6663  03C4  054A               	andwf	___fldiv@grs+2,w
  6664  03C5  00BE               	movwf	??___fldiv+2
  6665  03C6  307F               	movlw	127
  6666  03C7  054B               	andwf	___fldiv@grs+3,w
  6667  03C8  00BF               	movwf	??___fldiv+3
  6668  03C9  083F               	movf	??___fldiv+3,w
  6669  03CA  043E               	iorwf	??___fldiv+2,w
  6670  03CB  043D               	iorwf	??___fldiv+1,w
  6671  03CC  043C               	iorwf	??___fldiv,w
  6672  03CD  1903               	skipnz
  6673  03CE  2BD0               	goto	u2481
  6674  03CF  2BD1               	goto	u2480
  6675  03D0                     u2481:
  6676  03D0  2BD4               	goto	l733
  6677  03D1                     u2480:
  6678  03D1                     l2062:
  6679  03D1  01CD               	clrf	___fldiv@aexp
  6680  03D2  0ACD               	incf	___fldiv@aexp,f
  6681  03D3  2BD9               	goto	l2066
  6682  03D4                     l733:
  6683  03D4  1C38               	btfss	___fldiv@b,0
  6684  03D5  2BD7               	goto	u2491
  6685  03D6  2BD8               	goto	u2490
  6686  03D7                     u2491:
  6687  03D7  2BD9               	goto	l2066
  6688  03D8                     u2490:
  6689  03D8  2BD1               	goto	l2062
  6690  03D9                     l2066:
  6691  03D9  084D               	movf	___fldiv@aexp,w
  6692  03DA  1903               	btfsc	3,2
  6693  03DB  2BDD               	goto	u2501
  6694  03DC  2BDE               	goto	u2500
  6695  03DD                     u2501:
  6696  03DD  2C0F               	goto	l2076
  6697  03DE                     u2500:
  6698  03DE                     l2068:
  6699  03DE  3001               	movlw	1
  6700  03DF  07B8               	addwf	___fldiv@b,f
  6701  03E0  3000               	movlw	0
  6702  03E1  1803               	skipnc
  6703  03E2  3001               	movlw	1
  6704  03E3  07B9               	addwf	___fldiv@b+1,f
  6705  03E4  3000               	movlw	0
  6706  03E5  1803               	skipnc
  6707  03E6  3001               	movlw	1
  6708  03E7  07BA               	addwf	___fldiv@b+2,f
  6709  03E8  3000               	movlw	0
  6710  03E9  1803               	skipnc
  6711  03EA  3001               	movlw	1
  6712  03EB  07BB               	addwf	___fldiv@b+3,f
  6713  03EC                     l2070:
  6714  03EC  1C3B               	btfss	___fldiv@b+3,0
  6715  03ED  2BEF               	goto	u2511
  6716  03EE  2BF0               	goto	u2510
  6717  03EF                     u2511:
  6718  03EF  2C0F               	goto	l2076
  6719  03F0                     u2510:
  6720  03F0                     l2072:
  6721  03F0  0838               	movf	___fldiv@b,w
  6722  03F1  00BC               	movwf	??___fldiv
  6723  03F2  0839               	movf	___fldiv@b+1,w
  6724  03F3  00BD               	movwf	??___fldiv+1
  6725  03F4  083A               	movf	___fldiv@b+2,w
  6726  03F5  00BE               	movwf	??___fldiv+2
  6727  03F6  083B               	movf	___fldiv@b+3,w
  6728  03F7  00BF               	movwf	??___fldiv+3
  6729  03F8  3001               	movlw	1
  6730  03F9  00C0               	movwf	??___fldiv+4
  6731  03FA                     u2525:
  6732  03FA  0D3F               	rlf	??___fldiv+3,w
  6733  03FB  0CBF               	rrf	??___fldiv+3,f
  6734  03FC  0CBE               	rrf	??___fldiv+2,f
  6735  03FD  0CBD               	rrf	??___fldiv+1,f
  6736  03FE  0CBC               	rrf	??___fldiv,f
  6737  03FF                     u2520:
  6738  03FF  0BC0               	decfsz	??___fldiv+4,f
  6739  0400  2BFA               	goto	u2525
  6740  0401  083F               	movf	??___fldiv+3,w
  6741  0402  00BB               	movwf	___fldiv@b+3
  6742  0403  083E               	movf	??___fldiv+2,w
  6743  0404  00BA               	movwf	___fldiv@b+2
  6744  0405  083D               	movf	??___fldiv+1,w
  6745  0406  00B9               	movwf	___fldiv@b+1
  6746  0407  083C               	movf	??___fldiv,w
  6747  0408  00B8               	movwf	___fldiv@b
  6748  0409                     l2074:
  6749  0409  3001               	movlw	1
  6750  040A  07C6               	addwf	___fldiv@new_exp,f
  6751  040B  1803               	skipnc
  6752  040C  0AC7               	incf	___fldiv@new_exp+1,f
  6753  040D  3000               	movlw	0
  6754  040E  07C7               	addwf	___fldiv@new_exp+1,f
  6755  040F                     l2076:
  6756  040F  0847               	movf	___fldiv@new_exp+1,w
  6757  0410  3A80               	xorlw	128
  6758  0411  00FF               	movwf	btemp+1
  6759  0412  3080               	movlw	128
  6760  0413  027F               	subwf	btemp+1,w
  6761  0414  1D03               	skipz
  6762  0415  2C18               	goto	u2535
  6763  0416  30FF               	movlw	255
  6764  0417  0246               	subwf	___fldiv@new_exp,w
  6765  0418                     u2535:
  6766  0418  1C03               	skipc
  6767  0419  2C1B               	goto	u2531
  6768  041A  2C1C               	goto	u2530
  6769  041B                     u2531:
  6770  041B  2C2A               	goto	l2080
  6771  041C                     u2530:
  6772  041C                     l2078:
  6773  041C  30FF               	movlw	255
  6774  041D  1283               	bcf	3,5	;RP0=0, select bank0
  6775  041E  1303               	bcf	3,6	;RP1=0, select bank0
  6776  041F  00C6               	movwf	___fldiv@new_exp
  6777  0420  3000               	movlw	0
  6778  0421  00C7               	movwf	___fldiv@new_exp+1
  6779  0422  3000               	movlw	0
  6780  0423  00BB               	movwf	___fldiv@b+3
  6781  0424  3000               	movlw	0
  6782  0425  00BA               	movwf	___fldiv@b+2
  6783  0426  3000               	movlw	0
  6784  0427  00B9               	movwf	___fldiv@b+1
  6785  0428  3000               	movlw	0
  6786  0429  00B8               	movwf	___fldiv@b
  6787  042A                     l2080:
  6788  042A  1283               	bcf	3,5	;RP0=0, select bank0
  6789  042B  1303               	bcf	3,6	;RP1=0, select bank0
  6790  042C  0847               	movf	___fldiv@new_exp+1,w
  6791  042D  3A80               	xorlw	128
  6792  042E  00FF               	movwf	btemp+1
  6793  042F  3080               	movlw	128
  6794  0430  027F               	subwf	btemp+1,w
  6795  0431  1D03               	skipz
  6796  0432  2C35               	goto	u2545
  6797  0433  3001               	movlw	1
  6798  0434  0246               	subwf	___fldiv@new_exp,w
  6799  0435                     u2545:
  6800  0435  1803               	skipnc
  6801  0436  2C38               	goto	u2541
  6802  0437  2C39               	goto	u2540
  6803  0438                     u2541:
  6804  0438  2C46               	goto	l739
  6805  0439                     u2540:
  6806  0439                     l2082:
  6807  0439  1283               	bcf	3,5	;RP0=0, select bank0
  6808  043A  1303               	bcf	3,6	;RP1=0, select bank0
  6809  043B  01C6               	clrf	___fldiv@new_exp
  6810  043C  01C7               	clrf	___fldiv@new_exp+1
  6811  043D                     l2084:
  6812  043D  3000               	movlw	0
  6813  043E  00BB               	movwf	___fldiv@b+3
  6814  043F  3000               	movlw	0
  6815  0440  00BA               	movwf	___fldiv@b+2
  6816  0441  3000               	movlw	0
  6817  0442  00B9               	movwf	___fldiv@b+1
  6818  0443  3000               	movlw	0
  6819  0444  00B8               	movwf	___fldiv@b
  6820  0445                     l2086:
  6821  0445  01C5               	clrf	___fldiv@sign
  6822  0446                     l739:
  6823  0446  1283               	bcf	3,5	;RP0=0, select bank0
  6824  0447  1303               	bcf	3,6	;RP1=0, select bank0
  6825  0448  0846               	movf	___fldiv@new_exp,w
  6826  0449  00BC               	movwf	??___fldiv
  6827  044A  083C               	movf	??___fldiv,w
  6828  044B  00CC               	movwf	___fldiv@bexp
  6829  044C                     l2088:
  6830  044C  1C4C               	btfss	___fldiv@bexp,0
  6831  044D  2C4F               	goto	u2551
  6832  044E  2C50               	goto	u2550
  6833  044F                     u2551:
  6834  044F  2C52               	goto	l2092
  6835  0450                     u2550:
  6836  0450                     l2090:
  6837  0450  17BA               	bsf	___fldiv@b+2,7
  6838  0451  2C56               	goto	l741
  6839  0452                     l2092:
  6840  0452  307F               	movlw	127
  6841  0453  00BC               	movwf	??___fldiv
  6842  0454  083C               	movf	??___fldiv,w
  6843  0455  05BA               	andwf	___fldiv@b+2,f
  6844  0456                     l741:
  6845  0456  084C               	movf	___fldiv@bexp,w
  6846  0457  00BC               	movwf	??___fldiv
  6847  0458  1003               	clrc
  6848  0459  0C3C               	rrf	??___fldiv,w
  6849  045A  00BD               	movwf	??___fldiv+1
  6850  045B  083D               	movf	??___fldiv+1,w
  6851  045C  00BB               	movwf	___fldiv@b+3
  6852  045D  0845               	movf	___fldiv@sign,w
  6853  045E  00BC               	movwf	??___fldiv
  6854  045F  083C               	movf	??___fldiv,w
  6855  0460  04BB               	iorwf	___fldiv@b+3,f
  6856  0461  2AFA               	goto	l2000
  6857  0462                     l719:
  6858  0462  0008               	return
  6859  0463                     __end_of___fldiv:
  6860                           
  6861                           	psect	text24
  6862  0855                     __ptext24:	
  6863 ;; *************** function _PWM_Init *****************
  6864 ;; Defined at:
  6865 ;;		line 12 in file "PWM.c"
  6866 ;; Parameters:    Size  Location     Type
  6867 ;;  freq            4    6[BANK0 ] long 
  6868 ;; Auto vars:     Size  Location     Type
  6869 ;;		None
  6870 ;; Return value:  Size  Location     Type
  6871 ;;                  1    wreg      void 
  6872 ;; Registers used:
  6873 ;;		wreg, status,2, status,0, pclath, cstack
  6874 ;; Tracked objects:
  6875 ;;		On entry : 0/0
  6876 ;;		On exit  : 0/0
  6877 ;;		Unchanged: 0/0
  6878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6879 ;;      Params:         0       4       0       0       0
  6880 ;;      Locals:         0       0       0       0       0
  6881 ;;      Temps:          4       0       0       0       0
  6882 ;;      Totals:         4       4       0       0       0
  6883 ;;Total ram usage:        8 bytes
  6884 ;; Hardware stack levels used: 1
  6885 ;; Hardware stack levels required when called: 1
  6886 ;; This function calls:
  6887 ;;		___aldiv
  6888 ;; This function is called by:
  6889 ;;		_PWM1_Duty
  6890 ;;		_PWM2_Duty
  6891 ;; This function uses a non-reentrant model
  6892 ;;
  6893                           
  6894                           
  6895                           ;psect for function _PWM_Init
  6896  0855                     _PWM_Init:
  6897  0855                     l1860:	
  6898                           ;incstack = 0
  6899                           ; Regs used in _PWM_Init: [wreg+status,2+status,0+pclath+cstack]
  6900                           
  6901                           
  6902                           ;PWM.c: 12: void PWM_Init(long freq);PWM.c: 13: {;PWM.c: 14:   PR2 = (4000000/(freq*4*4)
      +                          ) - 1;
  6903  0855  1283               	bcf	3,5	;RP0=0, select bank0
  6904  0856  1303               	bcf	3,6	;RP1=0, select bank0
  6905  0857  0826               	movf	PWM_Init@freq,w
  6906  0858  00F9               	movwf	??_PWM_Init
  6907  0859  0827               	movf	PWM_Init@freq+1,w
  6908  085A  00FA               	movwf	??_PWM_Init+1
  6909  085B  0828               	movf	PWM_Init@freq+2,w
  6910  085C  00FB               	movwf	??_PWM_Init+2
  6911  085D  0829               	movf	PWM_Init@freq+3,w
  6912  085E  00FC               	movwf	??_PWM_Init+3
  6913  085F  3002               	movlw	2
  6914  0860                     u2025:
  6915  0860  1003               	clrc
  6916  0861  0DF9               	rlf	??_PWM_Init,f
  6917  0862  0DFA               	rlf	??_PWM_Init+1,f
  6918  0863  0DFB               	rlf	??_PWM_Init+2,f
  6919  0864  0DFC               	rlf	??_PWM_Init+3,f
  6920  0865                     u2020:
  6921  0865  3EFF               	addlw	-1
  6922  0866  1D03               	skipz
  6923  0867  2860               	goto	u2025
  6924  0868  3002               	movlw	2
  6925  0869                     u2035:
  6926  0869  1003               	clrc
  6927  086A  0DF9               	rlf	??_PWM_Init,f
  6928  086B  0DFA               	rlf	??_PWM_Init+1,f
  6929  086C  0DFB               	rlf	??_PWM_Init+2,f
  6930  086D  0DFC               	rlf	??_PWM_Init+3,f
  6931  086E                     u2030:
  6932  086E  3EFF               	addlw	-1
  6933  086F  1D03               	skipz
  6934  0870  2869               	goto	u2035
  6935  0871  087C               	movf	??_PWM_Init+3,w
  6936  0872  00F3               	movwf	___aldiv@divisor+3
  6937  0873  087B               	movf	??_PWM_Init+2,w
  6938  0874  00F2               	movwf	___aldiv@divisor+2
  6939  0875  087A               	movf	??_PWM_Init+1,w
  6940  0876  00F1               	movwf	___aldiv@divisor+1
  6941  0877  0879               	movf	??_PWM_Init,w
  6942  0878  00F0               	movwf	___aldiv@divisor
  6943  0879  3000               	movlw	0
  6944  087A  00F7               	movwf	___aldiv@dividend+3
  6945  087B  303D               	movlw	61
  6946  087C  00F6               	movwf	___aldiv@dividend+2
  6947  087D  3009               	movlw	9
  6948  087E  00F5               	movwf	___aldiv@dividend+1
  6949  087F  3000               	movlw	0
  6950  0880  00F4               	movwf	___aldiv@dividend
  6951  0881  120A  158A  22DB  120A  158A  	fcall	___aldiv
  6952  0886  0870               	movf	?___aldiv,w
  6953  0887  3EFF               	addlw	255
  6954  0888  1683               	bsf	3,5	;RP0=1, select bank1
  6955  0889  1303               	bcf	3,6	;RP1=0, select bank1
  6956  088A  0092               	movwf	18	;volatile
  6957  088B                     l190:
  6958  088B  0008               	return
  6959  088C                     __end_of_PWM_Init:
  6960                           
  6961                           	psect	text25
  6962  0ADB                     __ptext25:	
  6963 ;; *************** function ___aldiv *****************
  6964 ;; Defined at:
  6965 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\aldiv.c"
  6966 ;; Parameters:    Size  Location     Type
  6967 ;;  divisor         4    0[COMMON] long 
  6968 ;;  dividend        4    4[COMMON] long 
  6969 ;; Auto vars:     Size  Location     Type
  6970 ;;  quotient        4    2[BANK0 ] long 
  6971 ;;  sign            1    1[BANK0 ] unsigned char 
  6972 ;;  counter         1    0[BANK0 ] unsigned char 
  6973 ;; Return value:  Size  Location     Type
  6974 ;;                  4    0[COMMON] long 
  6975 ;; Registers used:
  6976 ;;		wreg, status,2, status,0
  6977 ;; Tracked objects:
  6978 ;;		On entry : 0/0
  6979 ;;		On exit  : 0/0
  6980 ;;		Unchanged: 0/0
  6981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6982 ;;      Params:         8       0       0       0       0
  6983 ;;      Locals:         0       6       0       0       0
  6984 ;;      Temps:          1       0       0       0       0
  6985 ;;      Totals:         9       6       0       0       0
  6986 ;;Total ram usage:       15 bytes
  6987 ;; Hardware stack levels used: 1
  6988 ;; This function calls:
  6989 ;;		Nothing
  6990 ;; This function is called by:
  6991 ;;		_PWM_Init
  6992 ;;		_PWM1_Duty
  6993 ;;		_PWM2_Duty
  6994 ;; This function uses a non-reentrant model
  6995 ;;
  6996                           
  6997                           
  6998                           ;psect for function ___aldiv
  6999  0ADB                     ___aldiv:
  7000  0ADB                     l1806:	
  7001                           ;incstack = 0
  7002                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  7003                           
  7004  0ADB  1283               	bcf	3,5	;RP0=0, select bank0
  7005  0ADC  1303               	bcf	3,6	;RP1=0, select bank0
  7006  0ADD  01A1               	clrf	___aldiv@sign
  7007  0ADE                     l1808:
  7008  0ADE  1FF3               	btfss	___aldiv@divisor+3,7
  7009  0ADF  2AE1               	goto	u1891
  7010  0AE0  2AE2               	goto	u1890
  7011  0AE1                     u1891:
  7012  0AE1  2AEF               	goto	l433
  7013  0AE2                     u1890:
  7014  0AE2                     l1810:
  7015  0AE2  09F0               	comf	___aldiv@divisor,f
  7016  0AE3  09F1               	comf	___aldiv@divisor+1,f
  7017  0AE4  09F2               	comf	___aldiv@divisor+2,f
  7018  0AE5  09F3               	comf	___aldiv@divisor+3,f
  7019  0AE6  0AF0               	incf	___aldiv@divisor,f
  7020  0AE7  1903               	skipnz
  7021  0AE8  0AF1               	incf	___aldiv@divisor+1,f
  7022  0AE9  1903               	skipnz
  7023  0AEA  0AF2               	incf	___aldiv@divisor+2,f
  7024  0AEB  1903               	skipnz
  7025  0AEC  0AF3               	incf	___aldiv@divisor+3,f
  7026  0AED  01A1               	clrf	___aldiv@sign
  7027  0AEE  0AA1               	incf	___aldiv@sign,f
  7028  0AEF                     l433:
  7029  0AEF  1FF7               	btfss	___aldiv@dividend+3,7
  7030  0AF0  2AF2               	goto	u1901
  7031  0AF1  2AF3               	goto	u1900
  7032  0AF2                     u1901:
  7033  0AF2  2B02               	goto	l1816
  7034  0AF3                     u1900:
  7035  0AF3                     l1812:
  7036  0AF3  09F4               	comf	___aldiv@dividend,f
  7037  0AF4  09F5               	comf	___aldiv@dividend+1,f
  7038  0AF5  09F6               	comf	___aldiv@dividend+2,f
  7039  0AF6  09F7               	comf	___aldiv@dividend+3,f
  7040  0AF7  0AF4               	incf	___aldiv@dividend,f
  7041  0AF8  1903               	skipnz
  7042  0AF9  0AF5               	incf	___aldiv@dividend+1,f
  7043  0AFA  1903               	skipnz
  7044  0AFB  0AF6               	incf	___aldiv@dividend+2,f
  7045  0AFC  1903               	skipnz
  7046  0AFD  0AF7               	incf	___aldiv@dividend+3,f
  7047  0AFE                     l1814:
  7048  0AFE  3001               	movlw	1
  7049  0AFF  00F8               	movwf	??___aldiv
  7050  0B00  0878               	movf	??___aldiv,w
  7051  0B01  06A1               	xorwf	___aldiv@sign,f
  7052  0B02                     l1816:
  7053  0B02  3000               	movlw	0
  7054  0B03  00A5               	movwf	___aldiv@quotient+3
  7055  0B04  3000               	movlw	0
  7056  0B05  00A4               	movwf	___aldiv@quotient+2
  7057  0B06  3000               	movlw	0
  7058  0B07  00A3               	movwf	___aldiv@quotient+1
  7059  0B08  3000               	movlw	0
  7060  0B09  00A2               	movwf	___aldiv@quotient
  7061  0B0A                     l1818:
  7062  0B0A  0873               	movf	___aldiv@divisor+3,w
  7063  0B0B  0472               	iorwf	___aldiv@divisor+2,w
  7064  0B0C  0471               	iorwf	___aldiv@divisor+1,w
  7065  0B0D  0470               	iorwf	___aldiv@divisor,w
  7066  0B0E  1903               	skipnz
  7067  0B0F  2B11               	goto	u1911
  7068  0B10  2B12               	goto	u1910
  7069  0B11                     u1911:
  7070  0B11  2B5F               	goto	l1838
  7071  0B12                     u1910:
  7072  0B12                     l1820:
  7073  0B12  01A0               	clrf	___aldiv@counter
  7074  0B13  0AA0               	incf	___aldiv@counter,f
  7075  0B14  2B22               	goto	l1824
  7076  0B15                     l1822:
  7077  0B15  3001               	movlw	1
  7078  0B16  00F8               	movwf	??___aldiv
  7079  0B17                     u1925:
  7080  0B17  1003               	clrc
  7081  0B18  0DF0               	rlf	___aldiv@divisor,f
  7082  0B19  0DF1               	rlf	___aldiv@divisor+1,f
  7083  0B1A  0DF2               	rlf	___aldiv@divisor+2,f
  7084  0B1B  0DF3               	rlf	___aldiv@divisor+3,f
  7085  0B1C  0BF8               	decfsz	??___aldiv,f
  7086  0B1D  2B17               	goto	u1925
  7087  0B1E  3001               	movlw	1
  7088  0B1F  00F8               	movwf	??___aldiv
  7089  0B20  0878               	movf	??___aldiv,w
  7090  0B21  07A0               	addwf	___aldiv@counter,f
  7091  0B22                     l1824:
  7092  0B22  1FF3               	btfss	___aldiv@divisor+3,7
  7093  0B23  2B25               	goto	u1931
  7094  0B24  2B26               	goto	u1930
  7095  0B25                     u1931:
  7096  0B25  2B15               	goto	l1822
  7097  0B26                     u1930:
  7098  0B26                     l1826:
  7099  0B26  3001               	movlw	1
  7100  0B27  00F8               	movwf	??___aldiv
  7101  0B28                     u1945:
  7102  0B28  1003               	clrc
  7103  0B29  0DA2               	rlf	___aldiv@quotient,f
  7104  0B2A  0DA3               	rlf	___aldiv@quotient+1,f
  7105  0B2B  0DA4               	rlf	___aldiv@quotient+2,f
  7106  0B2C  0DA5               	rlf	___aldiv@quotient+3,f
  7107  0B2D  0BF8               	decfsz	??___aldiv,f
  7108  0B2E  2B28               	goto	u1945
  7109  0B2F                     l1828:
  7110  0B2F  0873               	movf	___aldiv@divisor+3,w
  7111  0B30  0277               	subwf	___aldiv@dividend+3,w
  7112  0B31  1D03               	skipz
  7113  0B32  2B3D               	goto	u1955
  7114  0B33  0872               	movf	___aldiv@divisor+2,w
  7115  0B34  0276               	subwf	___aldiv@dividend+2,w
  7116  0B35  1D03               	skipz
  7117  0B36  2B3D               	goto	u1955
  7118  0B37  0871               	movf	___aldiv@divisor+1,w
  7119  0B38  0275               	subwf	___aldiv@dividend+1,w
  7120  0B39  1D03               	skipz
  7121  0B3A  2B3D               	goto	u1955
  7122  0B3B  0870               	movf	___aldiv@divisor,w
  7123  0B3C  0274               	subwf	___aldiv@dividend,w
  7124  0B3D                     u1955:
  7125  0B3D  1C03               	skipc
  7126  0B3E  2B40               	goto	u1951
  7127  0B3F  2B41               	goto	u1950
  7128  0B40                     u1951:
  7129  0B40  2B50               	goto	l1834
  7130  0B41                     u1950:
  7131  0B41                     l1830:
  7132  0B41  0870               	movf	___aldiv@divisor,w
  7133  0B42  02F4               	subwf	___aldiv@dividend,f
  7134  0B43  0871               	movf	___aldiv@divisor+1,w
  7135  0B44  1C03               	skipc
  7136  0B45  0F71               	incfsz	___aldiv@divisor+1,w
  7137  0B46  02F5               	subwf	___aldiv@dividend+1,f
  7138  0B47  0872               	movf	___aldiv@divisor+2,w
  7139  0B48  1C03               	skipc
  7140  0B49  0F72               	incfsz	___aldiv@divisor+2,w
  7141  0B4A  02F6               	subwf	___aldiv@dividend+2,f
  7142  0B4B  0873               	movf	___aldiv@divisor+3,w
  7143  0B4C  1C03               	skipc
  7144  0B4D  0F73               	incfsz	___aldiv@divisor+3,w
  7145  0B4E  02F7               	subwf	___aldiv@dividend+3,f
  7146  0B4F                     l1832:
  7147  0B4F  1422               	bsf	___aldiv@quotient,0
  7148  0B50                     l1834:
  7149  0B50  3001               	movlw	1
  7150  0B51                     u1965:
  7151  0B51  1003               	clrc
  7152  0B52  0CF3               	rrf	___aldiv@divisor+3,f
  7153  0B53  0CF2               	rrf	___aldiv@divisor+2,f
  7154  0B54  0CF1               	rrf	___aldiv@divisor+1,f
  7155  0B55  0CF0               	rrf	___aldiv@divisor,f
  7156  0B56  3EFF               	addlw	-1
  7157  0B57  1D03               	skipz
  7158  0B58  2B51               	goto	u1965
  7159  0B59                     l1836:
  7160  0B59  3001               	movlw	1
  7161  0B5A  02A0               	subwf	___aldiv@counter,f
  7162  0B5B  1D03               	btfss	3,2
  7163  0B5C  2B5E               	goto	u1971
  7164  0B5D  2B5F               	goto	u1970
  7165  0B5E                     u1971:
  7166  0B5E  2B26               	goto	l1826
  7167  0B5F                     u1970:
  7168  0B5F                     l1838:
  7169  0B5F  0821               	movf	___aldiv@sign,w
  7170  0B60  1903               	btfsc	3,2
  7171  0B61  2B63               	goto	u1981
  7172  0B62  2B64               	goto	u1980
  7173  0B63                     u1981:
  7174  0B63  2B6F               	goto	l1842
  7175  0B64                     u1980:
  7176  0B64                     l1840:
  7177  0B64  09A2               	comf	___aldiv@quotient,f
  7178  0B65  09A3               	comf	___aldiv@quotient+1,f
  7179  0B66  09A4               	comf	___aldiv@quotient+2,f
  7180  0B67  09A5               	comf	___aldiv@quotient+3,f
  7181  0B68  0AA2               	incf	___aldiv@quotient,f
  7182  0B69  1903               	skipnz
  7183  0B6A  0AA3               	incf	___aldiv@quotient+1,f
  7184  0B6B  1903               	skipnz
  7185  0B6C  0AA4               	incf	___aldiv@quotient+2,f
  7186  0B6D  1903               	skipnz
  7187  0B6E  0AA5               	incf	___aldiv@quotient+3,f
  7188  0B6F                     l1842:
  7189  0B6F  0825               	movf	___aldiv@quotient+3,w
  7190  0B70  00F3               	movwf	?___aldiv+3
  7191  0B71  0824               	movf	___aldiv@quotient+2,w
  7192  0B72  00F2               	movwf	?___aldiv+2
  7193  0B73  0823               	movf	___aldiv@quotient+1,w
  7194  0B74  00F1               	movwf	?___aldiv+1
  7195  0B75  0822               	movf	___aldiv@quotient,w
  7196  0B76  00F0               	movwf	?___aldiv
  7197  0B77                     l443:
  7198  0B77  0008               	return
  7199  0B78                     __end_of___aldiv:
  7200                           
  7201                           	psect	text26
  7202  1796                     __ptext26:	
  7203 ;; *************** function _ADC_Read *****************
  7204 ;; Defined at:
  7205 ;;		line 17 in file "adc.c"
  7206 ;; Parameters:    Size  Location     Type
  7207 ;;  channel         1    wreg     unsigned char 
  7208 ;; Auto vars:     Size  Location     Type
  7209 ;;  channel         1    4[COMMON] unsigned char 
  7210 ;; Return value:  Size  Location     Type
  7211 ;;                  2    0[COMMON] unsigned int 
  7212 ;; Registers used:
  7213 ;;		wreg, status,2, status,0
  7214 ;; Tracked objects:
  7215 ;;		On entry : 0/0
  7216 ;;		On exit  : 0/0
  7217 ;;		Unchanged: 0/0
  7218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7219 ;;      Params:         2       0       0       0       0
  7220 ;;      Locals:         1       0       0       0       0
  7221 ;;      Temps:          2       0       0       0       0
  7222 ;;      Totals:         5       0       0       0       0
  7223 ;;Total ram usage:        5 bytes
  7224 ;; Hardware stack levels used: 1
  7225 ;; This function calls:
  7226 ;;		Nothing
  7227 ;; This function is called by:
  7228 ;;		_realizarCalculo
  7229 ;;		_controlarCooler
  7230 ;; This function uses a non-reentrant model
  7231 ;;
  7232                           
  7233                           
  7234                           ;psect for function _ADC_Read
  7235  1796                     _ADC_Read:
  7236                           
  7237                           ;incstack = 0
  7238                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  7239                           ;ADC_Read@channel stored from wreg
  7240  1796  00F4               	movwf	ADC_Read@channel
  7241  1797                     l2374:
  7242                           
  7243                           ;adc.c: 17: unsigned int ADC_Read(unsigned char channel);adc.c: 18: {;adc.c: 19:    if(c
      +                          hannel > 7)
  7244  1797  3008               	movlw	8
  7245  1798  0274               	subwf	ADC_Read@channel,w
  7246  1799  1C03               	skipc
  7247  179A  2F9C               	goto	u3171
  7248  179B  2F9D               	goto	u3170
  7249  179C                     u3171:
  7250  179C  2FA0               	goto	l2380
  7251  179D                     u3170:
  7252  179D                     l2376:
  7253                           
  7254                           ;adc.c: 20:      return 0;
  7255  179D  01F0               	clrf	?_ADC_Read
  7256  179E  01F1               	clrf	?_ADC_Read+1
  7257  179F  2FC9               	goto	l229
  7258  17A0                     l2380:
  7259                           
  7260                           ;adc.c: 22:    ADCON0 &= 0xC5;
  7261  17A0  30C5               	movlw	197
  7262  17A1  00F2               	movwf	??_ADC_Read
  7263  17A2  0872               	movf	??_ADC_Read,w
  7264  17A3  1283               	bcf	3,5	;RP0=0, select bank0
  7265  17A4  1303               	bcf	3,6	;RP1=0, select bank0
  7266  17A5  059F               	andwf	31,f	;volatile
  7267                           
  7268                           ;adc.c: 23:    ADCON0 |= channel<<3;
  7269  17A6  0874               	movf	ADC_Read@channel,w	;volatile
  7270  17A7  00F2               	movwf	??_ADC_Read
  7271  17A8  3002               	movlw	2
  7272  17A9                     u3185:
  7273  17A9  1003               	clrc
  7274  17AA  0DF2               	rlf	??_ADC_Read,f
  7275  17AB  3EFF               	addlw	-1
  7276  17AC  1D03               	skipz
  7277  17AD  2FA9               	goto	u3185
  7278  17AE  1003               	clrc
  7279  17AF  0D72               	rlf	??_ADC_Read,w
  7280  17B0  00F3               	movwf	??_ADC_Read+1
  7281  17B1  0873               	movf	??_ADC_Read+1,w
  7282  17B2  049F               	iorwf	31,f	;volatile
  7283  17B3                     l2382:
  7284                           
  7285                           ;adc.c: 24:    _delay((unsigned long)((2)*(4000000/4000.0)));
  7286  17B3  3003               	movlw	3
  7287  17B4  00F3               	movwf	??_ADC_Read+1
  7288  17B5  3097               	movlw	151
  7289  17B6  00F2               	movwf	??_ADC_Read
  7290  17B7                     u3777:
  7291  17B7  0BF2               	decfsz	??_ADC_Read,f
  7292  17B8  2FB7               	goto	u3777
  7293  17B9  0BF3               	decfsz	??_ADC_Read+1,f
  7294  17BA  2FB7               	goto	u3777
  7295  17BB  2FBC               	nop2
  7296  17BC                     l2384:
  7297                           
  7298                           ;adc.c: 25:    GO_nDONE = 1;
  7299  17BC  1283               	bcf	3,5	;RP0=0, select bank0
  7300  17BD  1303               	bcf	3,6	;RP1=0, select bank0
  7301  17BE  151F               	bsf	31,2	;volatile
  7302  17BF                     l230:	
  7303                           ;adc.c: 26:    while(GO_nDONE);
  7304                           
  7305  17BF  191F               	btfsc	31,2	;volatile
  7306  17C0  2FC2               	goto	u3191
  7307  17C1  2FC3               	goto	u3190
  7308  17C2                     u3191:
  7309  17C2  2FBF               	goto	l230
  7310  17C3                     u3190:
  7311  17C3                     l2386:
  7312                           
  7313                           ;adc.c: 27:    return ((unsigned int)(ADRESH<<8)+ADRESL);
  7314  17C3  081E               	movf	30,w	;volatile
  7315  17C4  00F1               	movwf	?_ADC_Read+1
  7316  17C5  1683               	bsf	3,5	;RP0=1, select bank1
  7317  17C6  1303               	bcf	3,6	;RP1=0, select bank1
  7318  17C7  081E               	movf	30,w	;volatile
  7319  17C8  00F0               	movwf	?_ADC_Read
  7320  17C9                     l229:
  7321  17C9  0008               	return
  7322  17CA                     __end_of_ADC_Read:
  7323                           
  7324                           	psect	text27
  7325  16E8                     __ptext27:	
  7326 ;; *************** function _PWM2_Start *****************
  7327 ;; Defined at:
  7328 ;;		line 59 in file "PWM.c"
  7329 ;; Parameters:    Size  Location     Type
  7330 ;;		None
  7331 ;; Auto vars:     Size  Location     Type
  7332 ;;		None
  7333 ;; Return value:  Size  Location     Type
  7334 ;;                  1    wreg      void 
  7335 ;; Registers used:
  7336 ;;		None
  7337 ;; Tracked objects:
  7338 ;;		On entry : 0/0
  7339 ;;		On exit  : 0/0
  7340 ;;		Unchanged: 0/0
  7341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7342 ;;      Params:         0       0       0       0       0
  7343 ;;      Locals:         0       0       0       0       0
  7344 ;;      Temps:          0       0       0       0       0
  7345 ;;      Totals:         0       0       0       0       0
  7346 ;;Total ram usage:        0 bytes
  7347 ;; Hardware stack levels used: 1
  7348 ;; This function calls:
  7349 ;;		Nothing
  7350 ;; This function is called by:
  7351 ;;		_main
  7352 ;; This function uses a non-reentrant model
  7353 ;;
  7354                           
  7355                           
  7356                           ;psect for function _PWM2_Start
  7357  16E8                     _PWM2_Start:
  7358  16E8                     l2660:	
  7359                           ;incstack = 0
  7360                           ; Regs used in _PWM2_Start: []
  7361                           
  7362                           
  7363                           ;PWM.c: 61:   CCP2M3 = 1;
  7364  16E8  1283               	bcf	3,5	;RP0=0, select bank0
  7365  16E9  1303               	bcf	3,6	;RP1=0, select bank0
  7366  16EA  159D               	bsf	29,3	;volatile
  7367                           
  7368                           ;PWM.c: 62:   CCP2M2 = 1;
  7369  16EB  151D               	bsf	29,2	;volatile
  7370                           
  7371                           ;PWM.c: 67:     T2CKPS0 = 1;
  7372  16EC  1412               	bsf	18,0	;volatile
  7373                           
  7374                           ;PWM.c: 68:     T2CKPS1 = 0;
  7375  16ED  1092               	bcf	18,1	;volatile
  7376                           
  7377                           ;PWM.c: 73:     TMR2ON = 1;
  7378  16EE  1512               	bsf	18,2	;volatile
  7379                           
  7380                           ;PWM.c: 74:     TRISC1 = 0;
  7381  16EF  1683               	bsf	3,5	;RP0=1, select bank1
  7382  16F0  1303               	bcf	3,6	;RP1=0, select bank1
  7383  16F1  1087               	bcf	7,1	;volatile
  7384  16F2                     l204:
  7385  16F2  0008               	return
  7386  16F3                     __end_of_PWM2_Start:
  7387                           
  7388                           	psect	text28
  7389  16DF                     __ptext28:	
  7390 ;; *************** function _PWM1_Start *****************
  7391 ;; Defined at:
  7392 ;;		line 41 in file "PWM.c"
  7393 ;; Parameters:    Size  Location     Type
  7394 ;;		None
  7395 ;; Auto vars:     Size  Location     Type
  7396 ;;		None
  7397 ;; Return value:  Size  Location     Type
  7398 ;;                  1    wreg      void 
  7399 ;; Registers used:
  7400 ;;		None
  7401 ;; Tracked objects:
  7402 ;;		On entry : 0/0
  7403 ;;		On exit  : 0/0
  7404 ;;		Unchanged: 0/0
  7405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7406 ;;      Params:         0       0       0       0       0
  7407 ;;      Locals:         0       0       0       0       0
  7408 ;;      Temps:          0       0       0       0       0
  7409 ;;      Totals:         0       0       0       0       0
  7410 ;;Total ram usage:        0 bytes
  7411 ;; Hardware stack levels used: 1
  7412 ;; This function calls:
  7413 ;;		Nothing
  7414 ;; This function is called by:
  7415 ;;		_main
  7416 ;; This function uses a non-reentrant model
  7417 ;;
  7418                           
  7419                           
  7420                           ;psect for function _PWM1_Start
  7421  16DF                     _PWM1_Start:
  7422  16DF                     l2658:	
  7423                           ;incstack = 0
  7424                           ; Regs used in _PWM1_Start: []
  7425                           
  7426                           
  7427                           ;PWM.c: 43:   CCP1M3 = 1;
  7428  16DF  1283               	bcf	3,5	;RP0=0, select bank0
  7429  16E0  1303               	bcf	3,6	;RP1=0, select bank0
  7430  16E1  1597               	bsf	23,3	;volatile
  7431                           
  7432                           ;PWM.c: 44:   CCP1M2 = 1;
  7433  16E2  1517               	bsf	23,2	;volatile
  7434                           
  7435                           ;PWM.c: 55:   TMR2ON = 1;
  7436  16E3  1512               	bsf	18,2	;volatile
  7437                           
  7438                           ;PWM.c: 56:   TRISC2 = 0;
  7439  16E4  1683               	bsf	3,5	;RP0=1, select bank1
  7440  16E5  1303               	bcf	3,6	;RP1=0, select bank1
  7441  16E6  1107               	bcf	7,2	;volatile
  7442  16E7                     l201:
  7443  16E7  0008               	return
  7444  16E8                     __end_of_PWM1_Start:
  7445                           
  7446                           	psect	text29
  7447  16D6                     __ptext29:	
  7448 ;; *************** function _ADC_Init *****************
  7449 ;; Defined at:
  7450 ;;		line 11 in file "adc.c"
  7451 ;; Parameters:    Size  Location     Type
  7452 ;;		None
  7453 ;; Auto vars:     Size  Location     Type
  7454 ;;		None
  7455 ;; Return value:  Size  Location     Type
  7456 ;;                  1    wreg      void 
  7457 ;; Registers used:
  7458 ;;		wreg
  7459 ;; Tracked objects:
  7460 ;;		On entry : 0/0
  7461 ;;		On exit  : 0/0
  7462 ;;		Unchanged: 0/0
  7463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7464 ;;      Params:         0       0       0       0       0
  7465 ;;      Locals:         0       0       0       0       0
  7466 ;;      Temps:          0       0       0       0       0
  7467 ;;      Totals:         0       0       0       0       0
  7468 ;;Total ram usage:        0 bytes
  7469 ;; Hardware stack levels used: 1
  7470 ;; This function calls:
  7471 ;;		Nothing
  7472 ;; This function is called by:
  7473 ;;		_main
  7474 ;; This function uses a non-reentrant model
  7475 ;;
  7476                           
  7477                           
  7478                           ;psect for function _ADC_Init
  7479  16D6                     _ADC_Init:
  7480  16D6                     l2656:	
  7481                           ;incstack = 0
  7482                           ; Regs used in _ADC_Init: [wreg]
  7483                           
  7484                           
  7485                           ;adc.c: 13:    ADCON1 = 0x80;
  7486  16D6  3080               	movlw	128
  7487  16D7  1683               	bsf	3,5	;RP0=1, select bank1
  7488  16D8  1303               	bcf	3,6	;RP1=0, select bank1
  7489  16D9  009F               	movwf	31	;volatile
  7490                           
  7491                           ;adc.c: 14:    ADCON0 = 0xC1;
  7492  16DA  30C1               	movlw	193
  7493  16DB  1283               	bcf	3,5	;RP0=0, select bank0
  7494  16DC  1303               	bcf	3,6	;RP1=0, select bank0
  7495  16DD  009F               	movwf	31	;volatile
  7496  16DE                     l225:
  7497  16DE  0008               	return
  7498  16DF                     __end_of_ADC_Init:
  7499  007E                     btemp	set	126	;btemp
  7500  007E                     wtemp0	set	126
  7501                           
  7502                           	psect	config
  7503                           
  7504                           ;Config register CONFIG @ 0x2007
  7505                           ;	Oscillator Selection bits
  7506                           ;	FOSC = HS, HS oscillator
  7507                           ;	Watchdog Timer Enable bit
  7508                           ;	WDTE = OFF, WDT disabled
  7509                           ;	Power-up Timer Enable bit
  7510                           ;	PWRTE = OFF, PWRT disabled
  7511                           ;	Brown-out Reset Enable bit
  7512                           ;	BOREN = OFF, BOR disabled
  7513                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  7514                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  7515                           ;	Data EEPROM Memory Code Protection bit
  7516                           ;	CPD = OFF, Data EEPROM code protection off
  7517                           ;	Flash Program Memory Write Enable bits
  7518                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  7519                           ;	In-Circuit Debugger Mode bit
  7520                           ;	DEBUG = 0x1, unprogrammed default
  7521                           ;	Flash Program Memory Code Protection bit
  7522                           ;	CP = OFF, Code protection off
  7523  2007                     	org	8199
  7524  2007  3F3A               	dw	16186

Data Sizes:
    Strings     39
    Constant    10
    Data        6
    BSS         76
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     12      62
    BANK3            96      0      32
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_9(CODE[3]), STR_7(CODE[3]), STR_5(CODE[3]), STR_3(CODE[3]), 
		 -> STR_2(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 32
		 -> string(BANK3[32]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_11(CODE[12]), STR_10(CODE[12]), STR_8(CODE[6]), STR_6(CODE[6]), 
		 -> STR_4(CODE[6]), string(BANK3[32]), STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _realizarCalculo->___fltol
    ___wmul->_ADC_Read
    _PWM1_Duty->_PWM_Init
    _PWM1_Duty->___fltol
    _lcd_init->_lcd_cmd
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcd_str->_lcd_dat
    _lcd_dat->_lcd_wr
    _lcd_cmd->_lcd_wr
    ___awdiv->___awmod
    _controlarValores->_controleMaximoMinimo
    _PWM2_Duty->_PWM_Init
    _PWM2_Duty->___fltol
    ___xxtofl->___wmul
    ___fltol->___wmul
    ___flmul->___wmul
    ___fldiv->___wmul
    _PWM_Init->___aldiv

Critical Paths under _main in BANK0

    _realizarCalculo->_PWM1_Duty
    _PWM1_Duty->___fltol
    _imprimirValoresLcd->_sprintf
    _controlarCooler->_PWM2_Duty
    _PWM2_Duty->___fltol
    ___xxtofl->___aldiv
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    _PWM_Init->___aldiv

Critical Paths under _main in BANK1

    _main->_controlarCooler
    _main->_realizarCalculo
    _realizarCalculo->_PWM1_Duty
    _PWM1_Duty->___fltol
    _controlarCooler->_PWM2_Duty
    _PWM2_Duty->___fltol

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   28672
                                              9 BANK1      3     3      0
                           _ADC_Init
                         _PWM1_Start
                         _PWM2_Start
                    _controlarCooler
                   _controlarValores
                 _imprimirValoresLcd
                            _lcd_cmd
                           _lcd_init
                            _lcd_str
                    _realizarCalculo
 ---------------------------------------------------------------------------------
 (1) _realizarCalculo                                      2     2      0   15137
                                              7 BANK1      2     2      0
                           _ADC_Read
                          _PWM1_Duty
                            ___awdiv
                            ___fldiv
                            ___flmul
                            ___fltol
                             ___wmul
                           ___xxtofl
               _controleMaximoMinimo
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     700
                                              5 COMMON     6     2      4
                           _ADC_Read (ARG)
 ---------------------------------------------------------------------------------
 (2) _PWM1_Duty                                            6     2      4    7580
                                             76 BANK0      4     0      4
                                              5 BANK1      2     2      0
                           _PWM_Init
                            ___aldiv
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      44
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _imprimirValoresLcd                                   5     5      0    3911
                                             13 BANK0      5     5      0
                            ___awdiv
                            ___awmod
                            _lcd_cmd
                            _lcd_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1647
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _lcd_str                                              4     2      2     970
                                              2 COMMON     4     2      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (2) _lcd_dat                                              1     1      0      44
                                              1 COMMON     1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0      44
                                              1 COMMON     1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (3) _lcd_wr                                               1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     756
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _controlarValores                                     1     1      0     448
                                              2 COMMON     1     1      0
               _controleMaximoMinimo
 ---------------------------------------------------------------------------------
 (1) _controlarCooler                                      2     2      0    8118
                                              7 BANK1      2     2      0
                           _ADC_Read
                          _PWM2_Duty
               _controleMaximoMinimo
 ---------------------------------------------------------------------------------
 (2) _controleMaximoMinimo                                 2     0      2     448
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM2_Duty                                            6     2      4    7580
                                             76 BANK0      4     0      4
                                              5 BANK1      2     2      0
                           _PWM_Init
                            ___aldiv
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     778
                                              6 BANK0     14    10      4
                            ___aldiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     533
                                             11 COMMON     2     2      0
                                             72 BANK0      4     0      4
                                              0 BANK1      5     5      0
                            ___aldiv (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2721
                                             46 BANK0     26    18      8
                          __Umul8_16
                            ___aldiv (ARG)
                            ___fldiv (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1577
                                             20 BANK0     26    18      8
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _PWM_Init                                             8     4      4     930
                                              9 COMMON     4     4      0
                                              6 BANK0      4     0      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8     756
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             5     3      2      44
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _PWM2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _PWM1_Start
   _PWM2_Start
   _controlarCooler
     _ADC_Read
     _PWM2_Duty
       _PWM_Init
         ___aldiv
       ___aldiv
       ___fldiv
         ___wmul (ARG)
           _ADC_Read (ARG)
         ___xxtofl (ARG)
           ___aldiv (ARG)
           ___wmul (ARG)
       ___flmul
         __Umul8_16
         ___aldiv (ARG)
         ___fldiv (ARG)
         ___wmul (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___aldiv (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
         ___wmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     _controleMaximoMinimo
   _controlarValores
     _controleMaximoMinimo
   _imprimirValoresLcd
     ___awdiv
       ___awmod (ARG)
     ___awmod
     _lcd_cmd
       _lcd_wr
     _lcd_str
       _lcd_dat
         _lcd_wr
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _lcd_cmd
   _lcd_init
     _lcd_cmd
   _lcd_str
   _realizarCalculo
     _ADC_Read
     _PWM1_Duty
       _PWM_Init
       ___aldiv
       ___fldiv
       ___flmul
       ___fltol
       ___xxtofl
     ___awdiv
     ___fldiv
     ___flmul
     ___fltol
     ___wmul
     ___xxtofl
     _controleMaximoMinimo

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      20       9       33.3%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      C      3E       7       77.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     50      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      BC      12        0.0%
ABS                  0      0      BC       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jun 23 21:21:44 2021

                 ___fldiv@aexp 004D                   ___fldiv@bexp 004C                              _x 00A6  
                            pc 0002                   ___fldiv@sign 0045                   ___awdiv@sign 0021  
                           _kd 00B6                             _ki 00D8                             _kp 00DA  
                           fsr 0004            ___wmul@multiplicand 0077            __Umul8_16@word_mpld 0076  
                          l111 0E11                            l201 16E7                            l121 0E74  
                          l122 0E9B                            l204 16F2                            l124 0ECC  
                          l116 0E5A                            l140 0285                            l230 17BF  
                          l143 0FFF                            l225 16DE                            l129 171A  
                          l146 1795                            l242 1702                            l229 17C9  
                          l245 0854                            l190 088B                            l254 002D  
                          l239 16C7                            l248 17FF                            l433 0AEF  
                          l521 09CB                            l194 0CE3                            l370 173F  
                          l443 0B77                            l364 0DCB                            l198 0C2D  
                          l534 0962                            l640 0909                            l368 1727  
                          l561 0AC4                            l801 0052                            l554 0ADA  
                          l650 08C5                            l803 00E9                            l564 0ADA  
                          l741 0456                            l733 03D4                            l717 02E2  
                          l814 00B3                            l719 0462                            l815 00BF  
                          l807 0097                            l739 0446                            l763 072F  
                          l757 07C3                            l776 1754                            l769 07B7  
                          l778 1766                            _RB0 0030                            _RB1 0031  
                          _RB2 0032                            _RB3 0033                            _PR2 0092  
                          _PID 00A8   __end_of_controleMaximoMinimo 171B                            fsr0 0004  
                          indf 0000                   ___awmod@sign 0076       __size_of_controlarCooler 002F  
                 _proporcional 00AE                   ___flmul@aexp 0060                   ___flmul@bexp 0061  
                 ___flmul@sign 005B                   ___flmul@temp 0066                   ___flmul@prod 0062  
                 ___fltol@exp1 007C                           l2000 02FA                           l2010 0311  
                         l2020 033D                           l2012 0323                           l2004 0303  
                         l2100 046A                           l2022 0342                           l2030 0362  
                         l2014 032B                           l2006 0308                           l2110 047F  
                         l2102 0470                           l2040 038D                           l2032 0374  
                         l2024 0354                           l2016 0333                           l2200 0718  
                         l2120 049C                           l2112 0487                           l2104 0474  
                         l2050 03A5                           l2042 0395                           l2034 0375  
                         l2026 0358                           l2018 033B                           l2210 0747  
                         l2202 072C                           l2130 04B3                           l2122 04A0  
                         l2114 0489                           l2106 0475                           l2060 03BD  
                         l2052 03AE                           l2044 0397                           l2036 0383  
                         l2028 0359                           l2220 0782                           l2212 074B  
                         l2132 04B5                           l2124 04A1                           l2116 0491  
                         l2108 047A                           l2300 1700                           l2070 03EC  
                         l2062 03D1                           l2046 03A0                           l2054 03B4  
                         l2038 0387                           l2230 07AF                           l2222 0791  
                         l2214 0764                           l2206 0734                           l2150 0526  
                         l2142 04D0                           l2134 04BD                           l2126 04A6  
                         l2118 0496                           l2302 1701                           l2310 001A  
                         l2080 042A                           l2072 03F0                           l2056 03B8  
                         l2048 03A4                           l2232 07B0                           l2224 079B  
                         l2208 0739                           l2216 076A                           l2160 05A3  
                         l2152 0552                           l2144 04E0                           l2136 04C2  
                         l2128 04AB                           l2240 0036                           l2304 0003  
                         l2320 0CFE                           l2312 0CE7                           l2400 0CD5  
                         l2090 0450                           l2082 0439                           l2074 0409  
                         l2066 03D9                           l2058 03B9                           l2234 07BB  
                         l2226 079D                           l2218 0777                           l2170 0623  
                         l2162 05C0                           l2154 056E                           l2146 04ED  
                         l2138 04C7                           l2250 0063                           l2242 003A  
                         l2410 0C15                           l2402 0B78                           l2306 0005  
                         l2330 0D28                           l2314 0CEC                           l2092 0452  
                         l2084 043D                           l2068 03DE                           l2076 040F  
                         l2228 07AB                           l2180 06DB                           l2172 0650  
                         l2164 05D0                           l2156 058A                           l2148 050A  
                         l2260 008E                           l2252 0068                           l2244 004A  
                         l2412 0C1F                           l2404 0B85                           l2500 094E  
                         l2308 0016                           l2332 0D2C                           l2324 0CFF  
                         l2316 0CF2                           l2420 172E                           l2086 0445  
                         l2078 041C                           l2190 0700                           l2182 06E4  
                         l2174 0660                           l2166 05ED                           l2158 0593  
                         l2270 00C1                           l2262 009E                           l2254 0075  
                         l2246 005A                           l2238 0031                           l2406 0B90  
                         l2510 0DCC                           l2430 0966                           l2502 0954  
                         l2350 0D63                           l2342 0D37                           l2334 0D30  
                         l2326 0D1C                           l2318 0CF9                           l2422 1735  
                         l2414 171B                           l2088 044C                           l2192 0709  
                         l2184 06F2                           l2176 068D                           l2168 0606  
                         l2272 00D7                           l2264 00A9                           l2256 007C  
                         l2408 0C14                           l2520 0DEA                           l2512 0DD4  
                         l2440 097A                           l2432 096A                           l2504 0959  
                         l2360 0DA8                           l2352 0D6A                           l2336 0D35  
                         l2328 0D24                           l2600 016C                           l2424 173B  
                         l2416 171D                           l1810 0AE2                           l2186 06FB  
                         l2194 070F                           l2178 06B3                           l2098 0463  
                         l2274 00DC                           l2266 00AD                           l2258 0080  
                         l2290 171A                           l2282 1703                           l2530 0E0B  
                         l2522 0DF1                           l2514 0DD9                           l2450 0990  
                         l2442 097E                           l2434 096F                           l2506 095E  
                         l2362 0DAC                           l2354 0D6E                           l2346 0D53  
                         l2610 01C3                           l2602 0175                           l2418 1721  
                         l2380 17A0                           l1820 0B12                           l1812 0AF3  
                         l2196 0713                           l2188 06FF                           l2276 00E0  
                         l2268 00B7                           l2284 1707                           l2540 0E2D  
                         l2532 0E15                           l2524 0DF7                           l2516 0DDE  
                         l2460 09B0                           l2452 0994                           l2444 0980  
                         l2436 0971                           l2428 0963                           l1804 16C3  
                         l2356 0D73                           l2348 0D5D                           l2364 0DB5  
                         l2620 0209                           l2612 01CC                           l2604 01AD  
                         l2700 0A22                           l2382 17B3                           l2374 1797  
                         l1830 0B41                           l1822 0B15                           l1814 0AFE  
                         l1806 0ADB                           l2198 0714                           l1902 0AB3  
                         l2278 00E1                           l2286 1709                           l2550 0E4D  
                         l2542 0E33                           l2534 0E1D                           l2526 0DFE  
                         l2518 0DE4                           l2462 09B7                           l2454 0998  
                         l2446 0986                           l2438 0975                           l2294 16F4  
                         l1910 08C8                           l2358 0DA1                           l2366 0DC7  
                         l2630 024F                           l2622 0212                           l2614 01F3  
                         l2606 01B3                           l2390 0C2E                           l2702 0A2B  
                         l2384 17BC                           l2376 179D                           l1840 0B64  
                         l1832 0B4F                           l1824 0B22                           l1816 0B02  
                         l1808 0ADE                           l1904 0AC9                           l2288 1716  
                         l2560 0E70                           l2552 0E54                           l2544 0E3A  
                         l2536 0E22                           l2528 0E04                           l2456 09A9  
                         l2448 0989                           l2464 09BD                           l2480 0916  
                         l2472 090A                           l2296 16F7                           l1920 08E0  
                         l1912 08CE                           l2632 0258                           l2624 0239  
                         l2608 01BD                           l2616 01F9                           l2392 0C3B  
                         l2640 0F73                           l2704 0A2D                           l2386 17C3  
                         l1842 0B6F                           l1834 0B50                           l1826 0B26  
                         l1818 0B0A                           l1850 174A                           l1906 0ACE  
                         l2650 1767                           l2570 0E90                           l2562 0E78  
                         l2554 0E5E                           l2546 0E40                           l2538 0E27  
                         l2466 09C2                           l2458 09AF                           l2490 092F  
                         l2482 091A                           l2474 090B                           l2298 16FD  
                         l1922 08F1                           l1914 08D1                           l1930 0905  
                         l2730 0D11                           l2634 027F                           l2618 0203  
                         l2626 023F                           l2394 0C46                           l2642 0FC9  
                         l2706 0A32                           l2660 16E8                           l1836 0B59  
                         l1828 0B2F                           l1860 0855                           l1852 174E  
                         l2652 1773                           l2572 0E97                           l2564 0E80  
                         l2556 0E66                           l2548 0E47                           l2468 09C7  
                         l2492 0933                           l2484 091F                           l2476 090F  
                         l1924 08F7                           l1916 08D8                           l1908 08C6  
                         l1940 089C                           l2628 0249                           l2580 00EA  
                         l2396 0CCA                           l2644 0FCD                           l2636 0ECD  
                         l2708 0A37                           l1838 0B5F                           l1854 175D  
                         l1846 1741                           l2654 1782                           l2574 0E9F  
                         l2566 0E85                           l2558 0E6B                           l2494 0937  
                         l2486 0925                           l2478 0914                           l1870 0853  
                         l1862 0846                           l1926 08F8                           l1918 08DC  
                         l1950 08BB                           l1942 08A0                           l1934 088C  
                         l2590 0110                           l2582 00F2                           l2662 17CA  
                         l2398 0CCB                           l2646 0FDD                           l2638 0F21  
                         l2670 09D3                           l2656 16D6                           l1960 0293  
                         l1856 1762                           l1848 1743                           l1880 0A7E  
                         l1872 0A40                           l2576 0EAE                           l2568 0E8A  
                         l2496 0941                           l2488 0928                           l1864 0849  
                         l1928 08FF                           l1944 08A4                           l1936 0892  
                         l1952 08C1                           l2592 0116                           l2584 00F8  
                         l2664 17CF                           l2648 0FEC                           l2680 09DD  
                         l2672 09D4                           l2658 16DF                           l1970 02AA  
                         l1962 0297                           l1882 0A81                           l1874 0A4F  
                         l2578 0EBD                           l2498 0947                           l1866 084F  
                         l1946 08AE                           l1938 0895                           l2594 011F  
                         l2586 0101                           l2690 09F7                           l2682 09E2  
                         l2674 09D5                           l2666 09CC                           l1980 02C0  
                         l1972 02AB                           l1964 0298                           l1956 0286  
                         l1884 0A89                           l1868 0852                           l1948 08B4  
                         l2596 0125                           l2588 0107                           l2692 0A00  
                         l2684 09E7                           l2676 09D7                           l2668 09D2  
                         l1990 02D7                           l1982 02C4                           l1966 029D  
                         l1974 02AD                           l1958 028D                           l1894 0A97  
                         l1886 0A8B                           l1878 0A59                           l2598 0131  
                         l2694 0A06                           l2686 09EC                           l2678 09D9  
                         l1992 02D8                           l1984 02C5                           l1976 02B5  
                         l1968 02A2                           l1888 0A8F                           l1896 0AAC  
                         l2696 0A0F                           l2688 09F1                           l1986 02CA  
                         l1994 02DA                           l1978 02BA                           l2698 0A14  
                         l1996 02EA                           l1988 02CF                           l1998 02F6  
                         STR_1 0838                           STR_2 083E                           STR_3 083E  
                         STR_4 0832                           STR_5 083E                           STR_6 0832  
                         STR_7 083E                           STR_8 0832                           STR_9 083E  
                         u2010 1762                           u2011 1761                           u2020 0865  
                         u2100 0AB2                           u2005 1755                           u2101 0AB1  
                         u2030 086E                           u2120 0AC9                           u2040 0A4F  
                         u2200 0905                           u2025 0860                           u2121 0AC8  
                         u2041 0A4E                           u2201 0904                           u2130 0ACE  
                         u2050 0A77                           u3010 00AD                           u2210 0892  
                         u2035 0869                           u2131 0ACD                           u2115 0AB7  
                         u3011 00AC                           u2211 0891                           u2300 02C4  
                         u2060 0A8F                           u3020 00B3                           u2140 08CE  
                         u3100 0CF2                           u2301 02C3                           u2061 0A8E  
                         u3021 00B2                           u3005 00A2                           u2141 08CD  
                         u3101 0CF1                           u2310 02CA                           u2070 0A96  
                         u3030 00B7                           u2230 08A4                           u3110 0D2C  
                         u2311 02C9                           u2071 0A95                           u2055 0A72  
                         u3031 00B6                           u2231 08A3                           u3111 0D2B  
                         u2400 0374                           u2320 02CF                           u3040 00CC  
                         u2160 08E0                           u2240 08AE                           u3120 0D52  
                         u3200 0C46                           u2401 0373                           u2321 02CE  
                         u2161 08DF                           u2241 08AD                           u2225 0896  
                         u3121 0D51                           u3201 0C45                           u2410 038D  
                         u2330 02EA                           u2090 0AAB                           u3050 00DC  
                         u3130 0D5D                           u3210 0CD2                           u2411 038C  
                         u2331 02E9                           u2091 0AAA                           u3051 00DB  
                         u2155 08D2                           u3131 0D5C                           u3211 0CCE  
                         u2500 03DE                           u2420 0395                           u2340 0308  
                         u3060 00E0                           u2180 08F1                           u2260 08C1  
                         u3140 0D63                           u2501 03DD                           u2421 0394  
                         u2405 0370                           u2341 0307                           u2085 0A98  
                         u3061 00DF                           u3045 00C7                           u2181 08F0  
                         u2261 08C0                           u2245 08AA                           u3141 0D62  
                         u3125 0D4E                           u2510 03F0                           u2350 0342  
                         u2270 0297                           u3070 1707                           u3150 0DB5  
                         u3310 173B                           u2511 03EF                           u2351 0341  
                         u2271 0296                           u3071 1706                           u2175 08E1  
                         u2255 08B5                           u3151 0DB4                           u3311 173A  
                         u2520 03FF                           u2440 03A4                           u2280 029D  
                         u2600 04A6                           u3240 0B90                           u3080 1716  
                         u3400 09BD                           u3320 096A                           u3160 0DC7  
                         u3224 0CD5                           u2441 03A3                           u2281 029C  
                         u2601 04A5                           u3241 0B8F                           u3081 1715  
                         u3401 09BC                           u3321 0969                           u2185 08ED  
                         u3161 0DC6                           u3305 172F                           u3170 179D  
                         u2530 041C                           u2290 02A2                           u2610 04AB  
                         u3250 0C1C                           u3410 09C2                           u3330 0975  
                         u3090 002D                           u3171 179C                           u2531 041B  
                         u2435 0399                           u2291 02A1                           u2611 04AA  
                         u3251 0C18                           u3411 09C1                           u3331 0974  
                         u3091 002C                           u2195 08F9                           u3235 0CDA  
                         u1900 0AF3                           u2540 0439                           u2460 03B8  
                         u2380 0358                           u2620 04C2                           u3340 0986  
                         u3500 0959                           u3420 090F                           u1901 0AF2  
                         u2541 0438                           u2525 03FA                           u2461 03B7  
                         u2381 0357                           u2365 0344                           u2701 05DF  
                         u2621 04C1                           u3085 1712                           u3341 0985  
                         u3501 0958                           u3421 090E                           u3190 17C3  
                         u1910 0B12                           u2550 0450                           u2470 03BD  
                         u2702 05E6                           u2630 04C7                           u3510 0DD9  
                         u3430 091A                           u3191 17C2                           u1911 0B11  
                         u2551 044F                           u2535 0418                           u2471 03BC  
                         u2455 03A7                           u2375 034D                           u2703 05ED  
                         u2631 04C6                           u3511 0DD8                           u3431 0919  
                         u2480 03D1                           u2560 0474                           u3264 0C1F  
                         u3600 0E3A                           u3520 0DDE                           u3360 0998  
                         u3440 0925                           u3280 1721                           u3185 17A9  
                         u2545 0435                           u2481 03D0                           u2721 0615  
                         u2641 0518                           u2561 0473                           u3601 0E39  
                         u3521 0DDD                           u3361 0997                           u3441 0924  
                         u3281 1720                           u1930 0B26                           u2490 03D8  
                         u2810 06FF                           u2722 061C                           u2642 051F  
                         u2570 047A                           u3610 0E47                           u3530 0DE4  
                         u1931 0B25                           u2491 03D7                           u2395 035B  
                         u2811 06FE                           u2731 0642                           u2723 0623  
                         u2715 05EF                           u2651 0534                           u2643 0526  
                         u2571 0479                           u3275 0C24                           u3611 0E46  
                         u3531 0DE3                           u3355 098A                           u2900 0777  
                         u2732 0649                           u2652 053B                           u2580 047F  
                         u3620 0E54                           u3540 0DF1                           u3380 09A9  
                         u3460 0937                           u3700 0110                           u1925 0B17  
                         u2901 0776                           u2805 06F4                           u2741 066F  
                         u2733 0650                           u2661 0560                           u2653 0542  
                         u2581 047E                           u3621 0E53                           u3541 0DF0  
                         u3381 09A8                           u3461 0936                           u3701 010F  
                         u1950 0B41                           u2910 0791                           u2830 0713  
                         u2750 0699                           u2742 0676                           u2662 0567  
                         u2590 04A0                           u3630 0E6B                           u3550 0DFE  
                         u3470 0941                           u3710 011F                           u1951 0B40  
                         u2911 0790                           u2831 0712                           u2743 067D  
                         u2671 057C                           u2663 056E                           u2591 049F  
                         u3631 0E6A                           u3551 0DFD                           u3375 0999  
                         u3471 0940                           u3455 0929                           u3711 011E  
                         u3295 1728                           u2920 07AF                           u2840 0718  
                         u2672 0583                           u3640 0E70                           u3560 0E0B  
                         u3720 0131                           u1945 0B28                           u2921 07AE  
                         u2905 0773                           u2841 0717                           u2825 0702  
                         u2761 06A5                           u2673 058A                           u3641 0E6F  
                         u3561 0E0A                           u3385 09A5                           u3721 0130  
                         u1970 0B5F                           u1890 0AE2                           u2850 072C  
                         u2770 06C1                           u2762 06AC                           u2930 0036  
                         u3650 0E85                           u3570 0E22                           u3490 0954  
                         u3730 01BD                           u1971 0B5E                           u1955 0B3D  
                         u1891 0AE1                           u2915 078D                           u2851 072B  
                         u2763 06B3                           u2755 0694                           u2691 05B2  
                         u2931 0035                           u3651 0E84                           u3571 0E21  
                         u3395 09B1                           u3491 0953                           u3475 093D  
                         u3731 01BC                           u1980 0B64                           u2860 0733  
                         u2692 05B9                           u2940 003A                           u3660 0E8A  
                         u3580 0E27                           u3740 0203                           u1981 0B63  
                         u1965 0B51                           u2861 0732                           u2781 06CD  
                         u2693 05C0                           u2685 058C                           u2941 0039  
                         u3661 0E89                           u3581 0E26                           u3485 0948  
                         u3741 0202                           u3725 012D                           u1990 174E  
                         u2870 0739                           u2782 06D4                           u2950 005A  
                         u3670 0E97                           u3590 0E2D                           u3750 0249  
                         u1991 174D                           u2871 0738                           u2783 06DB  
                         u2775 06BC                           u2951 0059                           u3671 0E96  
                         u3591 0E2C                           u3751 0248                           u3735 01B9  
                         u2880 074B                           u3680 00F2                           u3760 0A2B  
                         u2881 074A                           u3745 01FF                           u3681 00F1  
                         u3761 0A2A                           u2890 075A                           u2970 007B  
                         u3690 0101                           u2795 06DD                           u2971 007A  
                         u3755 0245                           u3691 0100                           u2965 006D  
                         u2990 009D                           u2895 0755                           u2991 009C  
                         u3777 17B7                           u2985 008F                           _TMR0 0001  
                         _main 09CC                           _xRef 00A4                           _erro 00B8  
                         _menu 00BE                           btemp 007E               __end_of_ADC_Init 16DF  
             __end_of_ADC_Read 17CA                           start 0000                ___fldiv@new_exp 0046  
                ___fltol@sign1 007B                __end_of___aldiv 0B78                          ?_main 0070  
                        _CCP1X 00BD                __end_of___fldiv 0463                          _CCP1Y 00BC  
                        _CCP2X 00ED                          _CCP2Y 00EC                __end_of___awdiv 09CC  
                        STR_10 0826                          STR_11 081A                __end_of___awmod 0963  
              __end_of___flmul 07C4                __end_of___fltol 0ADB                ___awdiv@divisor 0077  
              __end_of___lwdiv 090A                __end_of___lwmod 08C6                ___awdiv@counter 0020  
                        _PORTD 0008                          _TRISA 0085                          _TRISB 0086  
                        _TRISC 0087                          _TRISD 0088                          _TRISE 0089  
     __end_of_controlarValores 0ECD                __end_of_lcd_dat 0855                __end_of_lcd_cmd 1703  
              __end_of_lcd_str 002E             __size_of_PWM1_Duty 00B6                    ?_PWM1_Start 0070  
           __size_of_PWM2_Duty 00B6                    ?_PWM2_Start 0070                __end_of_dpowers 081A  
                        pclath 000A               __end_of_PWM_Init 088C                          status 0003  
                        wtemp0 007E                __end_of_sprintf 0DCC               ?_realizarCalculo 0070  
              __initialization 07C4                   __end_of_main 0A40                         ??_main 00D5  
           _setPointReferencia 00BA                         _ADCON0 001F                         _ADCON1 009F  
                       _CCP1M2 00BA                         _CCP1M3 00BB                         _CCP2M2 00EA  
                       _CCP2M3 00EB                         _ADRESH 001E                         _ADRESL 009E  
                       _CCPR1L 0015                         _CCPR2L 001B               ___awdiv@dividend 0079  
                       _INTCON 000B              ??_controlarCooler 007D                         _PIDRef 00A2  
                       _TMR2ON 0092                         _TRISC1 0439                         _TRISC2 043A  
             __end_of___xxtofl 00EA           _controleMaximoMinimo 1703               __end_of_lcd_init 1800  
            __end_of_PWM1_Duty 0CE4              __end_of_PWM2_Duty 0C2E                      ??___aldiv 0078  
   __end_of_imprimirValoresLcd 0286                         ___wmul 171B                      ??___fldiv 003C  
                    ??___awdiv 007B            __size_of_PWM1_Start 0009                      ??___awmod 0074  
                    ??___flmul 0056                      ??___fltol 00CC            __size_of_PWM2_Start 000B  
                    ??___lwdiv 0074                      ??___lwmod 007C                         _lcd_wr 16C2  
              ADC_Read@channel 0074               ___awdiv@quotient 0022                ___awmod@divisor 0070  
              ___awmod@counter 0075                      ??_lcd_dat 0071                      ??_lcd_cmd 0071  
                       _string 0190                      ??_lcd_str 0074             __size_of__Umul8_16 0027  
                 PWM_Init@freq 0026                      ?_ADC_Init 0070                      ?_ADC_Read 0070  
                    ??_sprintf 0023                   ___xxtofl@arg 0030                   ___xxtofl@exp 002F  
                 ___xxtofl@val 0026        __end_of__initialization 07FC                     ___fltol@f1 0068  
        ?_controleMaximoMinimo 0070                 __pcstackCOMMON 0070                   __pidataBANK1 16C8  
                    ?_PWM_Init 0026                     ??_ADC_Init 0070                     ??_ADC_Read 0072  
                 _kdReferencia 00B0                     __pbssBANK1 00A0                     __pbssBANK3 0190  
            __end_of__Umul8_16 1767                     __pmaintext 09CC                        ?___wmul 0075  
                      ?_lcd_wr 0070                     _derivativo 00AA                     ??_PWM_Init 0079  
                      _T2CKPS0 0090                        _T2CKPS1 0091                      ?___xxtofl 0026  
                 ??_PWM1_Start 0070              ?_controlarValores 0070                   ??_PWM2_Start 0070  
                    ?_lcd_init 0070             ??_controlarValores 0072                     __stringtab 0800  
       ??_controleMaximoMinimo 0072                   _kiReferencia 00B2                        ___aldiv 0ADB  
                      ___fldiv 0286                        ___awdiv 0963                        ___awmod 090A  
                      ___flmul 0463                        ___fltol 0A40                __size_of___wmul 0025  
                      ___lwdiv 08C6                        ___lwmod 088C             __end_of_PWM1_Start 16E8  
           __end_of_PWM2_Start 16F3                __size_of_lcd_wr 0006                        __ptext1 0ECD  
                      __ptext2 171B                        __ptext3 0C2E                        __ptext4 17CA  
                      __ptext5 00EA                        __ptext6 0CE4                        __ptext7 088C  
                      __ptext8 08C6                        __ptext9 0003                        _lcd_dat 0845  
                      _lcd_cmd 16F3                        _lcd_str 0003                        _dpowers 0810  
              _controlarCooler 1767                     ??___xxtofl 002A               ___awmod@dividend 0072  
                      _estouro 00A0               ___aldiv@dividend 0074                        _sprintf 0CE4  
                      clrloop0 16CF                     ??_lcd_init 0072           end_of_initialization 07FC  
    imprimirValoresLcd@centena 0030               ___aldiv@quotient 0022       __size_of_realizarCalculo 0133  
                    _PWM1_Duty 0C2E                      _PWM2_Duty 0B78                      _PORTEbits 0009  
                ___xxtofl@sign 002E      controleMaximoMinimo@valor 0070             _imprimirValoresLcd 00EA  
                   lcd_dat@val 0071                     lcd_cmd@val 0071                    ___fldiv@grs 0048  
                  ___fldiv@rem 0041                _setPointCalculo 00BC              __size_of_ADC_Init 0009  
            __size_of_ADC_Read 0034                   _kpReferencia 00B4            ?_imprimirValoresLcd 0070  
                  ___flmul@grs 005C                     lcd_str@str 0072        __end_of_controlarCooler 1796  
               __end_of___wmul 1740           ??_imprimirValoresLcd 002D                     ?_PWM1_Duty 006C  
                   ?_PWM2_Duty 006C                 __end_of_lcd_wr 16C8              __size_of_PWM_Init 0037  
          start_initialization 07C4          controlarCooler@cooler 00D3                       ??___wmul 0079  
                    __Umul8_16 1740                       ??_lcd_wr 0070                    __pdataBANK1 00D8  
                    ___fldiv@a 0034                      ___fldiv@b 0038                      ___flmul@a 0052  
                    ___flmul@b 004E                      ___latbits 0002                  __pcstackBANK0 0020  
                __pcstackBANK1 00CC              ??_realizarCalculo 00D3              __size_of___xxtofl 00BC  
            __size_of_lcd_init 0036                    sprintf@flag 0027                    sprintf@prec 0028  
             ___lwdiv@dividend 0072      __size_of_controlarValores 0101          _temperaturaReferencia 00C0  
                     ?___aldiv 0070                       ?___fldiv 0034                       ?___awdiv 0077  
                     ?___awmod 0070                       ?___flmul 004E                       ?___fltol 0068  
                   ?__Umul8_16 0070                       ?___lwdiv 0070                       ?___lwmod 0078  
             ?_controlarCooler 0070                    ??_PWM1_Duty 00D1                    ??_PWM2_Duty 00D1  
                    __pstrings 0800                       ?_lcd_dat 0070                       ?_lcd_cmd 0070  
                     ?_lcd_str 0072                       _ADC_Init 16D6                       _ADC_Read 1796  
             ___lwdiv@quotient 0075                       ?_sprintf 0020                ___aldiv@divisor 0070  
              ___aldiv@counter 0020                 ___wmul@product 0079                      clear_ram0 16CE  
__size_of_controleMaximoMinimo 0018                  PWM1_Duty@freq 006E                  PWM1_Duty@duty 006C  
                     _GO_nDONE 00FA                  PWM2_Duty@freq 006E                  PWM2_Duty@duty 006C  
      controlarValores@S1Atual 00CA        controlarValores@S2Atual 00C8        controlarValores@S3Atual 00C6  
      controlarValores@S4Atual 00C4                    __stringbase 080F                       _PWM_Init 0855  
            ___wmul@multiplier 0075                      lcd_wr@val 0070     controlarValores@S1Anterior 00CB  
   controlarValores@S2Anterior 00C9     controlarValores@S3Anterior 00C7     controlarValores@S4Anterior 00C5  
                  ??__Umul8_16 0072               __size_of___aldiv 009D               __size_of___fldiv 01DD  
             __size_of___awdiv 0069               __size_of___awmod 0059               __size_of___flmul 0361  
             __size_of___fltol 009B               __size_of___lwdiv 0044               __size_of___lwmod 003A  
           __end_of__stringtab 0810               __size_of_lcd_dat 0010               __size_of_lcd_cmd 0010  
             __size_of_lcd_str 002B                     sprintf@val 0029                       ___xxtofl 002E  
              ___lwdiv@divisor 0070                ___lwdiv@counter 0077                       __ptext10 0845  
                     __ptext11 16F3                       __ptext20 0A40                       __ptext12 16C2  
                     __ptext21 0463                       __ptext13 090A                       __ptext22 1740  
                     __ptext14 0963                       __ptext23 0286                       __ptext15 0DCC  
                     __ptext24 0855                       __ptext16 1767                       __ptext25 0ADB  
                     __ptext17 1703                       __ptext26 1796                       __ptext18 0B78  
                     __ptext27 16E8                       __ptext19 002E                       __ptext28 16DF  
                     __ptext29 16D6                       _lcd_init 17CA               __size_of_sprintf 00E8  
                __size_of_main 0074                       _integral 00AC                       _setPoint 00DC  
             _controlarValores 0DCC                _realizarCalculo 0ECD                       lcd_str@i 0075  
  __size_of_imprimirValoresLcd 019C                     _INTCONbits 000B                      sprintf@ap 0026  
                    sprintf@sp 002B               ___lwmod@dividend 007A                      stringcode 080A  
     imprimirValoresLcd@milhar 002E         __Umul8_16@multiplicand 0070                     _OPTION_REG 0081  
                  _temperatura 00C2                       sprintf@c 002C                       sprintf@f 0020  
              ___lwmod@divisor 0078                ___lwmod@counter 007D                       stringdir 080A  
                     stringtab 0800                   ___aldiv@sign 0021                     _PWM1_Start 16DF  
                   _PWM2_Start 16E8           __Umul8_16@multiplier 0078        __end_of_realizarCalculo 1000  
            __Umul8_16@product 0074  
