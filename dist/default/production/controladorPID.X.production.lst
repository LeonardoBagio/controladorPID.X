

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Jun 19 17:56:39 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    46                           	dabs	1,0x7E,2
    47  0000                     
    48                           ; Version 2.20
    49                           ; Generated 12/02/2020 GMT
    50                           ; 
    51                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC16F877A Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     	;# 
    83  0001                     	;# 
    84  0002                     	;# 
    85  0003                     	;# 
    86  0004                     	;# 
    87  0005                     	;# 
    88  0006                     	;# 
    89  0007                     	;# 
    90  0008                     	;# 
    91  0009                     	;# 
    92  000A                     	;# 
    93  000B                     	;# 
    94  000C                     	;# 
    95  000D                     	;# 
    96  000E                     	;# 
    97  000E                     	;# 
    98  000F                     	;# 
    99  0010                     	;# 
   100  0011                     	;# 
   101  0012                     	;# 
   102  0013                     	;# 
   103  0014                     	;# 
   104  0015                     	;# 
   105  0015                     	;# 
   106  0016                     	;# 
   107  0017                     	;# 
   108  0018                     	;# 
   109  0019                     	;# 
   110  001A                     	;# 
   111  001B                     	;# 
   112  001B                     	;# 
   113  001C                     	;# 
   114  001D                     	;# 
   115  001E                     	;# 
   116  001F                     	;# 
   117  0081                     	;# 
   118  0085                     	;# 
   119  0086                     	;# 
   120  0087                     	;# 
   121  0088                     	;# 
   122  0089                     	;# 
   123  008C                     	;# 
   124  008D                     	;# 
   125  008E                     	;# 
   126  0091                     	;# 
   127  0092                     	;# 
   128  0093                     	;# 
   129  0094                     	;# 
   130  0098                     	;# 
   131  0099                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  009F                     	;# 
   136  010C                     	;# 
   137  010D                     	;# 
   138  010E                     	;# 
   139  010F                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  0091                     	;# 
   187  0092                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  018C                     	;# 
   201  018D                     	;# 
   202  0000                     	;# 
   203  0001                     	;# 
   204  0002                     	;# 
   205  0003                     	;# 
   206  0004                     	;# 
   207  0005                     	;# 
   208  0006                     	;# 
   209  0007                     	;# 
   210  0008                     	;# 
   211  0009                     	;# 
   212  000A                     	;# 
   213  000B                     	;# 
   214  000C                     	;# 
   215  000D                     	;# 
   216  000E                     	;# 
   217  000E                     	;# 
   218  000F                     	;# 
   219  0010                     	;# 
   220  0011                     	;# 
   221  0012                     	;# 
   222  0013                     	;# 
   223  0014                     	;# 
   224  0015                     	;# 
   225  0015                     	;# 
   226  0016                     	;# 
   227  0017                     	;# 
   228  0018                     	;# 
   229  0019                     	;# 
   230  001A                     	;# 
   231  001B                     	;# 
   232  001B                     	;# 
   233  001C                     	;# 
   234  001D                     	;# 
   235  001E                     	;# 
   236  001F                     	;# 
   237  0081                     	;# 
   238  0085                     	;# 
   239  0086                     	;# 
   240  0087                     	;# 
   241  0088                     	;# 
   242  0089                     	;# 
   243  008C                     	;# 
   244  008D                     	;# 
   245  008E                     	;# 
   246  0091                     	;# 
   247  0092                     	;# 
   248  0093                     	;# 
   249  0094                     	;# 
   250  0098                     	;# 
   251  0099                     	;# 
   252  009C                     	;# 
   253  009D                     	;# 
   254  009E                     	;# 
   255  009F                     	;# 
   256  010C                     	;# 
   257  010D                     	;# 
   258  010E                     	;# 
   259  010F                     	;# 
   260  018C                     	;# 
   261  018D                     	;# 
   262  0000                     	;# 
   263  0001                     	;# 
   264  0002                     	;# 
   265  0003                     	;# 
   266  0004                     	;# 
   267  0005                     	;# 
   268  0006                     	;# 
   269  0007                     	;# 
   270  0008                     	;# 
   271  0009                     	;# 
   272  000A                     	;# 
   273  000B                     	;# 
   274  000C                     	;# 
   275  000D                     	;# 
   276  000E                     	;# 
   277  000E                     	;# 
   278  000F                     	;# 
   279  0010                     	;# 
   280  0011                     	;# 
   281  0012                     	;# 
   282  0013                     	;# 
   283  0014                     	;# 
   284  0015                     	;# 
   285  0015                     	;# 
   286  0016                     	;# 
   287  0017                     	;# 
   288  0018                     	;# 
   289  0019                     	;# 
   290  001A                     	;# 
   291  001B                     	;# 
   292  001B                     	;# 
   293  001C                     	;# 
   294  001D                     	;# 
   295  001E                     	;# 
   296  001F                     	;# 
   297  0081                     	;# 
   298  0085                     	;# 
   299  0086                     	;# 
   300  0087                     	;# 
   301  0088                     	;# 
   302  0089                     	;# 
   303  008C                     	;# 
   304  008D                     	;# 
   305  008E                     	;# 
   306  0091                     	;# 
   307  0092                     	;# 
   308  0093                     	;# 
   309  0094                     	;# 
   310  0098                     	;# 
   311  0099                     	;# 
   312  009C                     	;# 
   313  009D                     	;# 
   314  009E                     	;# 
   315  009F                     	;# 
   316  010C                     	;# 
   317  010D                     	;# 
   318  010E                     	;# 
   319  010F                     	;# 
   320  018C                     	;# 
   321  018D                     	;# 
   322  0000                     	;# 
   323  0001                     	;# 
   324  0002                     	;# 
   325  0003                     	;# 
   326  0004                     	;# 
   327  0005                     	;# 
   328  0006                     	;# 
   329  0007                     	;# 
   330  0008                     	;# 
   331  0009                     	;# 
   332  000A                     	;# 
   333  000B                     	;# 
   334  000C                     	;# 
   335  000D                     	;# 
   336  000E                     	;# 
   337  000E                     	;# 
   338  000F                     	;# 
   339  0010                     	;# 
   340  0011                     	;# 
   341  0012                     	;# 
   342  0013                     	;# 
   343  0014                     	;# 
   344  0015                     	;# 
   345  0015                     	;# 
   346  0016                     	;# 
   347  0017                     	;# 
   348  0018                     	;# 
   349  0019                     	;# 
   350  001A                     	;# 
   351  001B                     	;# 
   352  001B                     	;# 
   353  001C                     	;# 
   354  001D                     	;# 
   355  001E                     	;# 
   356  001F                     	;# 
   357  0081                     	;# 
   358  0085                     	;# 
   359  0086                     	;# 
   360  0087                     	;# 
   361  0088                     	;# 
   362  0089                     	;# 
   363  008C                     	;# 
   364  008D                     	;# 
   365  008E                     	;# 
   366  0091                     	;# 
   367  0092                     	;# 
   368  0093                     	;# 
   369  0094                     	;# 
   370  0098                     	;# 
   371  0099                     	;# 
   372  009C                     	;# 
   373  009D                     	;# 
   374  009E                     	;# 
   375  009F                     	;# 
   376  010C                     	;# 
   377  010D                     	;# 
   378  010E                     	;# 
   379  010F                     	;# 
   380  018C                     	;# 
   381  018D                     	;# 
   382                           
   383                           	psect	idataBANK1
   384  16FD                     __pidataBANK1:
   385                           
   386                           ;initializer for _polo
   387  16FD  340A               	retlw	10
   388  16FE  3400               	retlw	0
   389                           
   390                           ;initializer for _ki
   391  16FF  3402               	retlw	2
   392  1700  3400               	retlw	0
   393                           
   394                           ;initializer for _kp
   395  1701  3432               	retlw	50
   396  1702  3400               	retlw	0
   397                           
   398                           ;initializer for _setPoint
   399  1703  34A0               	retlw	160
   400  1704  340F               	retlw	15
   401                           
   402                           	psect	strings
   403  0800                     __pstrings:
   404  0800                     stringtab:
   405  0800                     __stringtab:
   406                           
   407                           ;	String table - string pointers are 1 byte each
   408  0800  1BFF               	btfsc	btemp+1,7
   409  0801  280A               	ljmp	stringcode
   410  0802  1383               	bcf	3,7
   411  0803  187F               	btfsc	btemp+1,0
   412  0804  1783               	bsf	3,7
   413  0805  0800               	movf	0,w
   414  0806  0A84               	incf	4,f
   415  0807  1903               	skipnz
   416  0808  0AFF               	incf	btemp+1,f
   417  0809  0008               	return
   418  080A                     stringcode:
   419  080A                     stringdir:
   420  080A  3008               	movlw	high stringdir
   421  080B  008A               	movwf	10
   422  080C  0804               	movf	4,w
   423  080D  0A84               	incf	4,f
   424  080E  0782               	addwf	2,f
   425  080F                     __stringbase:
   426  080F  3400               	retlw	0
   427  0810                     __end_of__stringtab:
   428  0810                     _dpowers:
   429  0810  3401               	retlw	1
   430  0811  3400               	retlw	0
   431  0812  340A               	retlw	10
   432  0813  3400               	retlw	0
   433  0814  3464               	retlw	100
   434  0815  3400               	retlw	0
   435  0816  34E8               	retlw	232
   436  0817  3403               	retlw	3
   437  0818  3410               	retlw	16
   438  0819  3427               	retlw	39
   439  081A                     __end_of_dpowers:
   440  0009                     _PORTEbits	set	9
   441  0008                     _PORTD	set	8
   442  001E                     _ADRESH	set	30
   443  001F                     _ADCON0	set	31
   444  001B                     _CCPR2L	set	27
   445  0015                     _CCPR1L	set	21
   446  00FA                     _GO_nDONE	set	250
   447  0091                     _T2CKPS1	set	145
   448  0090                     _T2CKPS0	set	144
   449  00EA                     _CCP2M2	set	234
   450  00EB                     _CCP2M3	set	235
   451  0092                     _TMR2ON	set	146
   452  00BA                     _CCP1M2	set	186
   453  00BB                     _CCP1M3	set	187
   454  00EC                     _CCP2Y	set	236
   455  00ED                     _CCP2X	set	237
   456  00BC                     _CCP1Y	set	188
   457  00BD                     _CCP1X	set	189
   458  0033                     _RB3	set	51
   459  0032                     _RB2	set	50
   460  0031                     _RB1	set	49
   461  0030                     _RB0	set	48
   462  009E                     _ADRESL	set	158
   463  009F                     _ADCON1	set	159
   464  0092                     _PR2	set	146
   465  0089                     _TRISE	set	137
   466  0088                     _TRISD	set	136
   467  0087                     _TRISC	set	135
   468  0086                     _TRISB	set	134
   469  0085                     _TRISA	set	133
   470  0439                     _TRISC1	set	1081
   471  043A                     _TRISC2	set	1082
   472  081A                     STR_11:
   473  081A  344B               	retlw	75	;'K'
   474  081B  3450               	retlw	80	;'P'
   475  081C  343A               	retlw	58	;':'
   476  081D  3420               	retlw	32	;' '
   477  081E  3420               	retlw	32	;' '
   478  081F  3420               	retlw	32	;' '
   479  0820  3420               	retlw	32	;' '
   480  0821  3420               	retlw	32	;' '
   481  0822  344B               	retlw	75	;'K'
   482  0823  3444               	retlw	68	;'D'
   483  0824  343A               	retlw	58	;':'
   484  0825  3400               	retlw	0
   485  0826                     STR_10:
   486  0826  3454               	retlw	84	;'T'
   487  0827  3450               	retlw	80	;'P'
   488  0828  343A               	retlw	58	;':'
   489  0829  3420               	retlw	32	;' '
   490  082A  3420               	retlw	32	;' '
   491  082B  3443               	retlw	67	;'C'
   492  082C  3420               	retlw	32	;' '
   493  082D  3420               	retlw	32	;' '
   494  082E  344B               	retlw	75	;'K'
   495  082F  3449               	retlw	73	;'I'
   496  0830  343A               	retlw	58	;':'
   497  0831  3400               	retlw	0
   498  0832                     STR_4:
   499  0832  3420               	retlw	32	;' '
   500  0833  3420               	retlw	32	;' '
   501  0834  3420               	retlw	32	;' '
   502  0835  3420               	retlw	32	;' '
   503  0836  3420               	retlw	32	;' '
   504  0837  3400               	retlw	0
   505  0838                     STR_1:
   506  0838  3420               	retlw	32	;' '
   507  0839  3420               	retlw	32	;' '
   508  083A  3443               	retlw	67	;'C'
   509  083B  3420               	retlw	32	;' '
   510  083C  3420               	retlw	32	;' '
   511  083D  3400               	retlw	0
   512  083E                     STR_2:
   513  083E  3425               	retlw	37	;'%'
   514  083F  3464               	retlw	100	;'d'
   515  0840  3400               	retlw	0
   516  0832                     
   517                           	psect	cinit
   518  07DC                     start_initialization:	
   519                           ; #config settings
   520                           
   521  07DC                     __initialization:
   522                           
   523                           ; Initialize objects allocated to BANK1
   524  07DC  1383               	bcf	3,7	;select IRP bank0
   525  07DD  30D9               	movlw	low (__pdataBANK1+8)
   526  07DE  00FD               	movwf	btemp+-1
   527  07DF  3016               	movlw	high __pidataBANK1
   528  07E0  00FE               	movwf	btemp
   529  07E1  30FD               	movlw	low __pidataBANK1
   530  07E2  00FF               	movwf	btemp+1
   531  07E3  30D1               	movlw	low __pdataBANK1
   532  07E4  0084               	movwf	4
   533  07E5  120A  118A  200B  120A  118A  	fcall	init_ram0
   534                           
   535                           ; Clear objects allocated to BANK3
   536  07EA  1783               	bsf	3,7	;select IRP bank2
   537  07EB  3090               	movlw	low __pbssBANK3
   538  07EC  0084               	movwf	4
   539  07ED  30B0               	movlw	low (__pbssBANK3+32)
   540  07EE  160A  118A  26F5  120A  118A  	fcall	clear_ram0
   541                           
   542                           ; Clear objects allocated to BANK1
   543  07F3  1383               	bcf	3,7	;select IRP bank0
   544  07F4  30A0               	movlw	low __pbssBANK1
   545  07F5  0084               	movwf	4
   546  07F6  30C8               	movlw	low (__pbssBANK1+40)
   547  07F7  160A  118A  26F5  120A  118A  	fcall	clear_ram0
   548  07FC                     end_of_initialization:	
   549                           ;End of C runtime variable initialization code
   550                           
   551  07FC                     __end_of__initialization:
   552  07FC  0183               	clrf	3
   553  07FD  120A  158A  2A25   	ljmp	_main	;jump to C main() function
   554                           
   555                           	psect	bssBANK1
   556  00A0                     __pbssBANK1:
   557  00A0                     _PID:
   558  00A0                     	ds	2
   559  00A2                     _derivativo:
   560  00A2                     	ds	2
   561  00A4                     _integral:
   562  00A4                     	ds	2
   563  00A6                     _proporcional:
   564  00A6                     	ds	2
   565  00A8                     _PIDReferencia:
   566  00A8                     	ds	2
   567  00AA                     _kdReferencia:
   568  00AA                     	ds	2
   569  00AC                     _kiReferencia:
   570  00AC                     	ds	2
   571  00AE                     _kpReferencia:
   572  00AE                     	ds	2
   573  00B0                     _tempo:
   574  00B0                     	ds	2
   575  00B2                     _kd:
   576  00B2                     	ds	2
   577  00B4                     _erroAnterior:
   578  00B4                     	ds	2
   579  00B6                     _erro:
   580  00B6                     	ds	2
   581  00B8                     _setPointReferencia:
   582  00B8                     	ds	2
   583  00BA                     _menu:
   584  00BA                     	ds	2
   585  00BC                     _temperaturaReferencia:
   586  00BC                     	ds	2
   587  00BE                     _temperatura:
   588  00BE                     	ds	2
   589  00C0                     controlarValores@S4Atual:
   590  00C0                     	ds	1
   591  00C1                     controlarValores@S4Anterior:
   592  00C1                     	ds	1
   593  00C2                     controlarValores@S3Atual:
   594  00C2                     	ds	1
   595  00C3                     controlarValores@S3Anterior:
   596  00C3                     	ds	1
   597  00C4                     controlarValores@S2Atual:
   598  00C4                     	ds	1
   599  00C5                     controlarValores@S2Anterior:
   600  00C5                     	ds	1
   601  00C6                     controlarValores@S1Atual:
   602  00C6                     	ds	1
   603  00C7                     controlarValores@S1Anterior:
   604  00C7                     	ds	1
   605                           
   606                           	psect	dataBANK1
   607  00D1                     __pdataBANK1:
   608  00D1                     _polo:
   609  00D1                     	ds	2
   610  00D3                     _ki:
   611  00D3                     	ds	2
   612  00D5                     _kp:
   613  00D5                     	ds	2
   614  00D7                     _setPoint:
   615  00D7                     	ds	2
   616                           
   617                           	psect	bssBANK3
   618  0190                     __pbssBANK3:
   619  0190                     _string:
   620  0190                     	ds	32
   621                           
   622                           	psect	inittext
   623  0007                     init_fetch0:	
   624                           ;	Called with low address in FSR and high address in W
   625                           
   626  0007  087E               	movf	btemp,w
   627  0008  008A               	movwf	10
   628  0009  087F               	movf	btemp+1,w
   629  000A  0082               	movwf	2
   630  000B                     init_ram0:	
   631                           ;Called with:
   632                           ;	high address of idata address in btemp 
   633                           ;	low address of idata address in btemp+1 
   634                           ;	low address of data in FSR
   635                           ;	high address + 1 of data in btemp-1
   636                           
   637  000B  120A  118A  2007  120A  118A  	fcall	init_fetch0
   638  0010  0080               	movwf	0
   639  0011  0A84               	incf	4,f
   640  0012  0804               	movf	4,w
   641  0013  067D               	xorwf	btemp+-1,w
   642  0014  1903               	btfsc	3,2
   643  0015  3400               	retlw	0
   644  0016  0AFF               	incf	btemp+1,f
   645  0017  1903               	btfsc	3,2
   646  0018  0AFE               	incf	btemp,f
   647  0019  280B               	goto	init_ram0
   648                           
   649                           	psect	clrtext
   650  16F5                     clear_ram0:	
   651                           ;	Called with FSR containing the base address, and
   652                           ;	W with the last address+1
   653                           
   654  16F5  0064               	clrwdt	;clear the watchdog before getting into this loop
   655  16F6                     clrloop0:
   656  16F6  0180               	clrf	0	;clear RAM location pointed to by FSR
   657  16F7  0A84               	incf	4,f	;increment pointer
   658  16F8  0604               	xorwf	4,w	;XOR with final address
   659  16F9  1903               	btfsc	3,2	;have we reached the end yet?
   660  16FA  3400               	retlw	0	;all done for this memory range, return
   661  16FB  0604               	xorwf	4,w	;XOR again to restore value
   662  16FC  2EF6               	goto	clrloop0	;do the next byte
   663                           
   664                           	psect	cstackBANK1
   665  00C8                     __pcstackBANK1:
   666  00C8                     ??___fltol:
   667                           
   668                           ; 1 bytes @ 0x0
   669  00C8                     	ds	5
   670  00CD                     ??_PWM1_Duty:
   671  00CD                     ??_PWM2_Duty:	
   672                           ; 1 bytes @ 0x5
   673                           
   674                           
   675                           ; 1 bytes @ 0x5
   676  00CD                     	ds	2
   677  00CF                     ??_realizarCalculo:
   678  00CF                     controlarCooler@cooler:	
   679                           ; 1 bytes @ 0x7
   680                           
   681                           
   682                           ; 2 bytes @ 0x7
   683  00CF                     	ds	2
   684                           
   685                           	psect	cstackCOMMON
   686  0070                     __pcstackCOMMON:
   687  0070                     ?_lcd_cmd:
   688  0070                     ?_ADC_Init:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     ??_ADC_Init:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0070                     ?_PWM1_Start:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0070                     ??_PWM1_Start:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0070                     ?_PWM2_Start:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0070                     ??_PWM2_Start:	
   704                           ; 1 bytes @ 0x0
   705                           
   706  0070                     ?_lcd_init:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0070                     ?_controlarValores:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0070                     ??_controlarValores:	
   713                           ; 1 bytes @ 0x0
   714                           
   715  0070                     ?_imprimirValoresLcd:	
   716                           ; 1 bytes @ 0x0
   717                           
   718  0070                     ?_realizarCalculo:	
   719                           ; 1 bytes @ 0x0
   720                           
   721  0070                     ?_controlarCooler:	
   722                           ; 1 bytes @ 0x0
   723                           
   724  0070                     ?_main:	
   725                           ; 1 bytes @ 0x0
   726                           
   727  0070                     ?_lcd_wr:	
   728                           ; 1 bytes @ 0x0
   729                           
   730  0070                     ??_lcd_wr:	
   731                           ; 1 bytes @ 0x0
   732                           
   733  0070                     ?_lcd_dat:	
   734                           ; 1 bytes @ 0x0
   735                           
   736  0070                     ?_ADC_Read:	
   737                           ; 1 bytes @ 0x0
   738                           
   739  0070                     ?__Umul8_16:	
   740                           ; 2 bytes @ 0x0
   741                           
   742  0070                     ?_controleMaximoMinimo:	
   743                           ; 2 bytes @ 0x0
   744                           
   745  0070                     ?___awmod:	
   746                           ; 2 bytes @ 0x0
   747                           
   748  0070                     ?___lwdiv:	
   749                           ; 2 bytes @ 0x0
   750                           
   751  0070                     ?___aldiv:	
   752                           ; 2 bytes @ 0x0
   753                           
   754  0070                     lcd_wr@val:	
   755                           ; 4 bytes @ 0x0
   756                           
   757  0070                     __Umul8_16@multiplicand:	
   758                           ; 1 bytes @ 0x0
   759                           
   760  0070                     controleMaximoMinimo@valor:	
   761                           ; 1 bytes @ 0x0
   762                           
   763  0070                     ___awmod@divisor:	
   764                           ; 2 bytes @ 0x0
   765                           
   766  0070                     ___lwdiv@divisor:	
   767                           ; 2 bytes @ 0x0
   768                           
   769  0070                     ___aldiv@divisor:	
   770                           ; 2 bytes @ 0x0
   771                           
   772                           
   773                           ; 4 bytes @ 0x0
   774  0070                     	ds	1
   775  0071                     ??_lcd_cmd:
   776  0071                     ??_lcd_dat:	
   777                           ; 1 bytes @ 0x1
   778                           
   779  0071                     lcd_cmd@val:	
   780                           ; 1 bytes @ 0x1
   781                           
   782  0071                     lcd_dat@val:	
   783                           ; 1 bytes @ 0x1
   784                           
   785                           
   786                           ; 1 bytes @ 0x1
   787  0071                     	ds	1
   788  0072                     ?_lcd_str:
   789  0072                     ??_ADC_Read:	
   790                           ; 1 bytes @ 0x2
   791                           
   792  0072                     ??_lcd_init:	
   793                           ; 1 bytes @ 0x2
   794                           
   795  0072                     ??__Umul8_16:	
   796                           ; 1 bytes @ 0x2
   797                           
   798  0072                     ??_controleMaximoMinimo:	
   799                           ; 1 bytes @ 0x2
   800                           
   801  0072                     lcd_str@str:	
   802                           ; 1 bytes @ 0x2
   803                           
   804  0072                     ___awmod@dividend:	
   805                           ; 2 bytes @ 0x2
   806                           
   807  0072                     ___lwdiv@dividend:	
   808                           ; 2 bytes @ 0x2
   809                           
   810                           
   811                           ; 2 bytes @ 0x2
   812  0072                     	ds	2
   813  0074                     ??_lcd_str:
   814  0074                     ??___awmod:	
   815                           ; 1 bytes @ 0x4
   816                           
   817  0074                     ??___lwdiv:	
   818                           ; 1 bytes @ 0x4
   819                           
   820  0074                     ADC_Read@channel:	
   821                           ; 1 bytes @ 0x4
   822                           
   823  0074                     __Umul8_16@product:	
   824                           ; 1 bytes @ 0x4
   825                           
   826  0074                     ___aldiv@dividend:	
   827                           ; 2 bytes @ 0x4
   828                           
   829                           
   830                           ; 4 bytes @ 0x4
   831  0074                     	ds	1
   832  0075                     ?___wmul:
   833  0075                     lcd_str@i:	
   834                           ; 2 bytes @ 0x5
   835                           
   836  0075                     ___awmod@counter:	
   837                           ; 1 bytes @ 0x5
   838                           
   839  0075                     ___wmul@multiplier:	
   840                           ; 1 bytes @ 0x5
   841                           
   842  0075                     ___lwdiv@quotient:	
   843                           ; 2 bytes @ 0x5
   844                           
   845                           
   846                           ; 2 bytes @ 0x5
   847  0075                     	ds	1
   848  0076                     ___awmod@sign:
   849  0076                     __Umul8_16@word_mpld:	
   850                           ; 1 bytes @ 0x6
   851                           
   852                           
   853                           ; 2 bytes @ 0x6
   854  0076                     	ds	1
   855  0077                     ?___awdiv:
   856  0077                     ___lwdiv@counter:	
   857                           ; 2 bytes @ 0x7
   858                           
   859  0077                     ___wmul@multiplicand:	
   860                           ; 1 bytes @ 0x7
   861                           
   862  0077                     ___awdiv@divisor:	
   863                           ; 2 bytes @ 0x7
   864                           
   865                           
   866                           ; 2 bytes @ 0x7
   867  0077                     	ds	1
   868  0078                     ??___aldiv:
   869  0078                     ?___lwmod:	
   870                           ; 1 bytes @ 0x8
   871                           
   872  0078                     __Umul8_16@multiplier:	
   873                           ; 2 bytes @ 0x8
   874                           
   875  0078                     ___lwmod@divisor:	
   876                           ; 1 bytes @ 0x8
   877                           
   878                           
   879                           ; 2 bytes @ 0x8
   880  0078                     	ds	1
   881  0079                     ??_PWM_Init:
   882  0079                     ??___wmul:	
   883                           ; 1 bytes @ 0x9
   884                           
   885  0079                     ___wmul@product:	
   886                           ; 1 bytes @ 0x9
   887                           
   888  0079                     ___awdiv@dividend:	
   889                           ; 2 bytes @ 0x9
   890                           
   891                           
   892                           ; 2 bytes @ 0x9
   893  0079                     	ds	1
   894  007A                     ___lwmod@dividend:
   895                           
   896                           ; 2 bytes @ 0xA
   897  007A                     	ds	1
   898  007B                     ??___awdiv:
   899  007B                     ___fltol@sign1:	
   900                           ; 1 bytes @ 0xB
   901                           
   902                           
   903                           ; 1 bytes @ 0xB
   904  007B                     	ds	1
   905  007C                     ??___lwmod:
   906  007C                     ___fltol@exp1:	
   907                           ; 1 bytes @ 0xC
   908                           
   909                           
   910                           ; 1 bytes @ 0xC
   911  007C                     	ds	1
   912  007D                     ??_controlarCooler:
   913  007D                     ___lwmod@counter:	
   914                           ; 1 bytes @ 0xD
   915                           
   916                           
   917                           ; 1 bytes @ 0xD
   918  007D                     	ds	1
   919  007E                     ??_main:
   920                           
   921                           	psect	cstackBANK0
   922  0020                     __pcstackBANK0:	
   923                           ; 1 bytes @ 0xE
   924                           
   925  0020                     ?_sprintf:
   926  0020                     sprintf@f:	
   927                           ; 2 bytes @ 0x0
   928                           
   929  0020                     ___aldiv@counter:	
   930                           ; 1 bytes @ 0x0
   931                           
   932  0020                     ___awdiv@counter:	
   933                           ; 1 bytes @ 0x0
   934                           
   935                           
   936                           ; 1 bytes @ 0x0
   937  0020                     	ds	1
   938  0021                     ___aldiv@sign:
   939  0021                     ___awdiv@sign:	
   940                           ; 1 bytes @ 0x1
   941                           
   942                           
   943                           ; 1 bytes @ 0x1
   944  0021                     	ds	1
   945  0022                     ___awdiv@quotient:
   946  0022                     ___aldiv@quotient:	
   947                           ; 2 bytes @ 0x2
   948                           
   949                           
   950                           ; 4 bytes @ 0x2
   951  0022                     	ds	1
   952  0023                     ??_sprintf:
   953                           
   954                           ; 1 bytes @ 0x3
   955  0023                     	ds	3
   956  0026                     ?_PWM_Init:
   957  0026                     ?___xxtofl:	
   958                           ; 1 bytes @ 0x6
   959                           
   960  0026                     sprintf@ap:	
   961                           ; 4 bytes @ 0x6
   962                           
   963  0026                     PWM_Init@freq:	
   964                           ; 1 bytes @ 0x6
   965                           
   966  0026                     ___xxtofl@val:	
   967                           ; 4 bytes @ 0x6
   968                           
   969                           
   970                           ; 4 bytes @ 0x6
   971  0026                     	ds	1
   972  0027                     sprintf@flag:
   973                           
   974                           ; 1 bytes @ 0x7
   975  0027                     	ds	1
   976  0028                     sprintf@prec:
   977                           
   978                           ; 1 bytes @ 0x8
   979  0028                     	ds	1
   980  0029                     sprintf@val:
   981                           
   982                           ; 2 bytes @ 0x9
   983  0029                     	ds	1
   984  002A                     ??___xxtofl:
   985                           
   986                           ; 1 bytes @ 0xA
   987  002A                     	ds	1
   988  002B                     sprintf@sp:
   989                           
   990                           ; 1 bytes @ 0xB
   991  002B                     	ds	1
   992  002C                     sprintf@c:
   993                           
   994                           ; 1 bytes @ 0xC
   995  002C                     	ds	1
   996  002D                     ??_imprimirValoresLcd:
   997                           
   998                           ; 1 bytes @ 0xD
   999  002D                     	ds	1
  1000  002E                     ___xxtofl@sign:
  1001  002E                     imprimirValoresLcd@milhar:	
  1002                           ; 1 bytes @ 0xE
  1003                           
  1004                           
  1005                           ; 2 bytes @ 0xE
  1006  002E                     	ds	1
  1007  002F                     ___xxtofl@exp:
  1008                           
  1009                           ; 1 bytes @ 0xF
  1010  002F                     	ds	1
  1011  0030                     imprimirValoresLcd@centena:
  1012  0030                     ___xxtofl@arg:	
  1013                           ; 2 bytes @ 0x10
  1014                           
  1015                           
  1016                           ; 4 bytes @ 0x10
  1017  0030                     	ds	4
  1018  0034                     ?___fldiv:
  1019  0034                     ___fldiv@a:	
  1020                           ; 4 bytes @ 0x14
  1021                           
  1022                           
  1023                           ; 4 bytes @ 0x14
  1024  0034                     	ds	4
  1025  0038                     ___fldiv@b:
  1026                           
  1027                           ; 4 bytes @ 0x18
  1028  0038                     	ds	4
  1029  003C                     ??___fldiv:
  1030                           
  1031                           ; 1 bytes @ 0x1C
  1032  003C                     	ds	5
  1033  0041                     ___fldiv@rem:
  1034                           
  1035                           ; 4 bytes @ 0x21
  1036  0041                     	ds	4
  1037  0045                     ___fldiv@sign:
  1038                           
  1039                           ; 1 bytes @ 0x25
  1040  0045                     	ds	1
  1041  0046                     ___fldiv@new_exp:
  1042                           
  1043                           ; 2 bytes @ 0x26
  1044  0046                     	ds	2
  1045  0048                     ___fldiv@grs:
  1046                           
  1047                           ; 4 bytes @ 0x28
  1048  0048                     	ds	4
  1049  004C                     ___fldiv@bexp:
  1050                           
  1051                           ; 1 bytes @ 0x2C
  1052  004C                     	ds	1
  1053  004D                     ___fldiv@aexp:
  1054                           
  1055                           ; 1 bytes @ 0x2D
  1056  004D                     	ds	1
  1057  004E                     ?___flmul:
  1058  004E                     ___flmul@b:	
  1059                           ; 4 bytes @ 0x2E
  1060                           
  1061                           
  1062                           ; 4 bytes @ 0x2E
  1063  004E                     	ds	4
  1064  0052                     ___flmul@a:
  1065                           
  1066                           ; 4 bytes @ 0x32
  1067  0052                     	ds	4
  1068  0056                     ??___flmul:
  1069                           
  1070                           ; 1 bytes @ 0x36
  1071  0056                     	ds	5
  1072  005B                     ___flmul@sign:
  1073                           
  1074                           ; 1 bytes @ 0x3B
  1075  005B                     	ds	1
  1076  005C                     ___flmul@grs:
  1077                           
  1078                           ; 4 bytes @ 0x3C
  1079  005C                     	ds	4
  1080  0060                     ___flmul@aexp:
  1081                           
  1082                           ; 1 bytes @ 0x40
  1083  0060                     	ds	1
  1084  0061                     ___flmul@bexp:
  1085                           
  1086                           ; 1 bytes @ 0x41
  1087  0061                     	ds	1
  1088  0062                     ___flmul@prod:
  1089                           
  1090                           ; 4 bytes @ 0x42
  1091  0062                     	ds	4
  1092  0066                     ___flmul@temp:
  1093                           
  1094                           ; 2 bytes @ 0x46
  1095  0066                     	ds	2
  1096  0068                     ?___fltol:
  1097  0068                     ___fltol@f1:	
  1098                           ; 4 bytes @ 0x48
  1099                           
  1100                           
  1101                           ; 4 bytes @ 0x48
  1102  0068                     	ds	4
  1103  006C                     ?_PWM1_Duty:
  1104  006C                     ?_PWM2_Duty:	
  1105                           ; 1 bytes @ 0x4C
  1106                           
  1107  006C                     PWM1_Duty@duty:	
  1108                           ; 1 bytes @ 0x4C
  1109                           
  1110  006C                     PWM2_Duty@duty:	
  1111                           ; 2 bytes @ 0x4C
  1112                           
  1113                           
  1114                           ; 2 bytes @ 0x4C
  1115  006C                     	ds	2
  1116  006E                     PWM1_Duty@freq:
  1117  006E                     PWM2_Duty@freq:	
  1118                           ; 2 bytes @ 0x4E
  1119                           
  1120                           
  1121                           ; 2 bytes @ 0x4E
  1122  006E                     	ds	2
  1123                           
  1124                           	psect	maintext
  1125  0A25                     __pmaintext:	
  1126 ;;
  1127 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1128 ;;
  1129 ;; *************** function _main *****************
  1130 ;; Defined at:
  1131 ;;		line 232 in file "main.c"
  1132 ;; Parameters:    Size  Location     Type
  1133 ;;		None
  1134 ;; Auto vars:     Size  Location     Type
  1135 ;;		None
  1136 ;; Return value:  Size  Location     Type
  1137 ;;                  1    wreg      void 
  1138 ;; Registers used:
  1139 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1140 ;; Tracked objects:
  1141 ;;		On entry : B00/0
  1142 ;;		On exit  : 0/0
  1143 ;;		Unchanged: 0/0
  1144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1145 ;;      Params:         0       0       0       0       0
  1146 ;;      Locals:         0       0       0       0       0
  1147 ;;      Temps:          0       0       0       0       0
  1148 ;;      Totals:         0       0       0       0       0
  1149 ;;Total ram usage:        0 bytes
  1150 ;; Hardware stack levels required when called: 4
  1151 ;; This function calls:
  1152 ;;		_ADC_Init
  1153 ;;		_PWM1_Start
  1154 ;;		_PWM2_Start
  1155 ;;		_controlarCooler
  1156 ;;		_controlarValores
  1157 ;;		_controleMaximoMinimo
  1158 ;;		_imprimirValoresLcd
  1159 ;;		_lcd_cmd
  1160 ;;		_lcd_init
  1161 ;;		_lcd_str
  1162 ;;		_realizarCalculo
  1163 ;; This function is called by:
  1164 ;;		Startup code after reset
  1165 ;; This function uses a non-reentrant model
  1166 ;;
  1167                           
  1168                           
  1169                           ;psect for function _main
  1170  0A25                     _main:
  1171  0A25                     l2658:	
  1172                           ;incstack = 0
  1173                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1174                           
  1175                           
  1176                           ;main.c: 233:     TRISA = 0xFF;
  1177  0A25  30FF               	movlw	255
  1178  0A26  1683               	bsf	3,5	;RP0=1, select bank1
  1179  0A27  1303               	bcf	3,6	;RP1=0, select bank1
  1180  0A28  0085               	movwf	5	;volatile
  1181                           
  1182                           ;main.c: 234:     TRISB = 0x0F;
  1183  0A29  300F               	movlw	15
  1184  0A2A  0086               	movwf	6	;volatile
  1185  0A2B                     l2660:
  1186                           
  1187                           ;main.c: 235:     TRISC = 0x00;
  1188  0A2B  0187               	clrf	7	;volatile
  1189  0A2C                     l2662:
  1190                           
  1191                           ;main.c: 236:     TRISD = 0x00;
  1192  0A2C  0188               	clrf	8	;volatile
  1193  0A2D                     l2664:
  1194                           
  1195                           ;main.c: 237:     TRISE = 0x00;
  1196  0A2D  0189               	clrf	9	;volatile
  1197  0A2E                     l2666:
  1198                           
  1199                           ;main.c: 238:     ADC_Init();
  1200  0A2E  160A  118A  2705  120A  158A  	fcall	_ADC_Init
  1201  0A33                     l2668:
  1202                           
  1203                           ;main.c: 239:     PWM1_Start();
  1204  0A33  160A  118A  270E  120A  158A  	fcall	_PWM1_Start
  1205  0A38                     l2670:
  1206                           
  1207                           ;main.c: 240:     PWM2_Start();
  1208  0A38  160A  118A  2717  120A  158A  	fcall	_PWM2_Start
  1209  0A3D                     l2672:
  1210                           
  1211                           ;main.c: 241:     lcd_init();
  1212  0A3D  120A  158A  2078  120A  158A  	fcall	_lcd_init
  1213  0A42                     l2674:
  1214                           
  1215                           ;main.c: 242:     lcd_cmd(0x80);
  1216  0A42  3080               	movlw	128
  1217  0A43  160A  118A  2722  120A  158A  	fcall	_lcd_cmd
  1218  0A48                     l2676:
  1219                           
  1220                           ;main.c: 243:     lcd_str("TP:  C  KI:");
  1221  0A48  3017               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1222  0A49  00F2               	movwf	lcd_str@str
  1223  0A4A  3080               	movlw	128
  1224  0A4B  00F3               	movwf	lcd_str@str+1
  1225  0A4C  160A  118A  27A6  120A  158A  	fcall	_lcd_str
  1226  0A51                     l2678:
  1227                           
  1228                           ;main.c: 244:     lcd_cmd(0xC0);
  1229  0A51  30C0               	movlw	192
  1230  0A52  160A  118A  2722  120A  158A  	fcall	_lcd_cmd
  1231  0A57                     l2680:
  1232                           
  1233                           ;main.c: 245:     lcd_str("KP:     KD:");
  1234  0A57  300B               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1235  0A58  00F2               	movwf	lcd_str@str
  1236  0A59  3080               	movlw	128
  1237  0A5A  00F3               	movwf	lcd_str@str+1
  1238  0A5B  160A  118A  27A6  120A  158A  	fcall	_lcd_str
  1239  0A60                     l2682:
  1240                           
  1241                           ;main.c: 248:         controlarValores();
  1242  0A60  120A  158A  2607  120A  158A  	fcall	_controlarValores
  1243  0A65                     l2684:
  1244                           
  1245                           ;main.c: 249:         kp = controleMaximoMinimo(kp);
  1246  0A65  1683               	bsf	3,5	;RP0=1, select bank1
  1247  0A66  1303               	bcf	3,6	;RP1=0, select bank1
  1248  0A67  0856               	movf	(_kp+1)^(0+128),w
  1249  0A68  00F1               	movwf	controleMaximoMinimo@valor+1
  1250  0A69  0855               	movf	_kp^(0+128),w
  1251  0A6A  00F0               	movwf	controleMaximoMinimo@valor
  1252  0A6B  160A  118A  2742  120A  158A  	fcall	_controleMaximoMinimo
  1253  0A70  0871               	movf	?_controleMaximoMinimo+1,w
  1254  0A71  1683               	bsf	3,5	;RP0=1, select bank1
  1255  0A72  1303               	bcf	3,6	;RP1=0, select bank1
  1256  0A73  00D6               	movwf	(_kp+1)^(0+128)
  1257  0A74  0870               	movf	?_controleMaximoMinimo,w
  1258  0A75  00D5               	movwf	_kp^(0+128)
  1259  0A76                     l2686:
  1260                           
  1261                           ;main.c: 250:         ki = controleMaximoMinimo(ki);
  1262  0A76  0854               	movf	(_ki+1)^(0+128),w
  1263  0A77  00F1               	movwf	controleMaximoMinimo@valor+1
  1264  0A78  0853               	movf	_ki^(0+128),w
  1265  0A79  00F0               	movwf	controleMaximoMinimo@valor
  1266  0A7A  160A  118A  2742  120A  158A  	fcall	_controleMaximoMinimo
  1267  0A7F  0871               	movf	?_controleMaximoMinimo+1,w
  1268  0A80  1683               	bsf	3,5	;RP0=1, select bank1
  1269  0A81  1303               	bcf	3,6	;RP1=0, select bank1
  1270  0A82  00D4               	movwf	(_ki+1)^(0+128)
  1271  0A83  0870               	movf	?_controleMaximoMinimo,w
  1272  0A84  00D3               	movwf	_ki^(0+128)
  1273  0A85                     l2688:
  1274                           
  1275                           ;main.c: 251:         kd = controleMaximoMinimo(kd);
  1276  0A85  0833               	movf	(_kd+1)^(0+128),w
  1277  0A86  00F1               	movwf	controleMaximoMinimo@valor+1
  1278  0A87  0832               	movf	_kd^(0+128),w
  1279  0A88  00F0               	movwf	controleMaximoMinimo@valor
  1280  0A89  160A  118A  2742  120A  158A  	fcall	_controleMaximoMinimo
  1281  0A8E  0871               	movf	?_controleMaximoMinimo+1,w
  1282  0A8F  1683               	bsf	3,5	;RP0=1, select bank1
  1283  0A90  1303               	bcf	3,6	;RP1=0, select bank1
  1284  0A91  00B3               	movwf	(_kd+1)^(0+128)
  1285  0A92  0870               	movf	?_controleMaximoMinimo,w
  1286  0A93  00B2               	movwf	_kd^(0+128)
  1287  0A94                     l2690:
  1288                           
  1289                           ;main.c: 253:         realizarCalculo();
  1290  0A94  120A  158A  26CD  120A  158A  	fcall	_realizarCalculo
  1291  0A99                     l2692:
  1292                           
  1293                           ;main.c: 254:         controlarCooler();
  1294  0A99  160A  118A  27D1  120A  158A  	fcall	_controlarCooler
  1295  0A9E                     l2694:
  1296                           
  1297                           ;main.c: 255:         imprimirValoresLcd();
  1298  0A9E  120A  118A  2102  120A  158A  	fcall	_imprimirValoresLcd
  1299  0AA3  2A60               	goto	l2682
  1300  0AA4  120A  118A  2800   	ljmp	start
  1301  0AA7                     __end_of_main:
  1302                           
  1303                           	psect	text1
  1304  0ECD                     __ptext1:	
  1305 ;; *************** function _realizarCalculo *****************
  1306 ;; Defined at:
  1307 ;;		line 195 in file "main.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;		None
  1310 ;; Auto vars:     Size  Location     Type
  1311 ;;		None
  1312 ;; Return value:  Size  Location     Type
  1313 ;;                  1    wreg      void 
  1314 ;; Registers used:
  1315 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1316 ;; Tracked objects:
  1317 ;;		On entry : 0/0
  1318 ;;		On exit  : 0/0
  1319 ;;		Unchanged: 0/0
  1320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1321 ;;      Params:         0       0       0       0       0
  1322 ;;      Locals:         0       0       0       0       0
  1323 ;;      Temps:          0       0       2       0       0
  1324 ;;      Totals:         0       0       2       0       0
  1325 ;;Total ram usage:        2 bytes
  1326 ;; Hardware stack levels used: 1
  1327 ;; Hardware stack levels required when called: 3
  1328 ;; This function calls:
  1329 ;;		_ADC_Read
  1330 ;;		_PWM1_Duty
  1331 ;;		___awdiv
  1332 ;;		___fldiv
  1333 ;;		___flmul
  1334 ;;		___fltol
  1335 ;;		___wmul
  1336 ;;		___xxtofl
  1337 ;;		_controleMaximoMinimo
  1338 ;; This function is called by:
  1339 ;;		_main
  1340 ;; This function uses a non-reentrant model
  1341 ;;
  1342                           
  1343                           
  1344                           ;psect for function _realizarCalculo
  1345  0ECD                     _realizarCalculo:
  1346  0ECD                     l2618:	
  1347                           ;incstack = 0
  1348                           ; Regs used in _realizarCalculo: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1349                           
  1350                           
  1351                           ;main.c: 197:     temperatura = (ADC_Read(0)*10/8 - 150);
  1352  0ECD  3000               	movlw	0
  1353  0ECE  120A  158A  2044  120A  158A  	fcall	_ADC_Read
  1354  0ED3  0871               	movf	?_ADC_Read+1,w
  1355  0ED4  00F6               	movwf	___wmul@multiplier+1
  1356  0ED5  0870               	movf	?_ADC_Read,w
  1357  0ED6  00F5               	movwf	___wmul@multiplier
  1358  0ED7  300A               	movlw	10
  1359  0ED8  00F7               	movwf	___wmul@multiplicand
  1360  0ED9  3000               	movlw	0
  1361  0EDA  00F8               	movwf	___wmul@multiplicand+1
  1362  0EDB  160A  118A  275A  120A  158A  	fcall	___wmul
  1363  0EE0  0875               	movf	?___wmul,w
  1364  0EE1  1683               	bsf	3,5	;RP0=1, select bank1
  1365  0EE2  1303               	bcf	3,6	;RP1=0, select bank1
  1366  0EE3  00CF               	movwf	??_realizarCalculo^(0+128)
  1367  0EE4  0876               	movf	?___wmul+1,w
  1368  0EE5  00D0               	movwf	(??_realizarCalculo^(0+128)+1)
  1369  0EE6  1003               	clrc
  1370  0EE7  0CD0               	rrf	(??_realizarCalculo^(0+128)+1),f
  1371  0EE8  0CCF               	rrf	??_realizarCalculo^(0+128),f
  1372  0EE9  1003               	clrc
  1373  0EEA  0CD0               	rrf	(??_realizarCalculo^(0+128)+1),f
  1374  0EEB  0CCF               	rrf	??_realizarCalculo^(0+128),f
  1375  0EEC  1003               	clrc
  1376  0EED  0CD0               	rrf	(??_realizarCalculo^(0+128)+1),f
  1377  0EEE  0CCF               	rrf	??_realizarCalculo^(0+128),f
  1378  0EEF  084F               	movf	??_realizarCalculo^(0+128),w
  1379  0EF0  3E6A               	addlw	106
  1380  0EF1  00BE               	movwf	_temperatura^(0+128)
  1381  0EF2  0850               	movf	(??_realizarCalculo+1)^(0+128),w
  1382  0EF3  1803               	skipnc
  1383  0EF4  3E01               	addlw	1
  1384  0EF5  3EFF               	addlw	255
  1385  0EF6  00BF               	movwf	(_temperatura+1)^(0+128)
  1386                           
  1387                           ;main.c: 198:     erro = (setPoint/10) - temperatura;
  1388  0EF7  300A               	movlw	10
  1389  0EF8  00F7               	movwf	___awdiv@divisor
  1390  0EF9  3000               	movlw	0
  1391  0EFA  00F8               	movwf	___awdiv@divisor+1
  1392  0EFB  0858               	movf	(_setPoint+1)^(0+128),w
  1393  0EFC  00FA               	movwf	___awdiv@dividend+1
  1394  0EFD  0857               	movf	_setPoint^(0+128),w
  1395  0EFE  00F9               	movwf	___awdiv@dividend
  1396  0EFF  120A  158A  21BC  120A  158A  	fcall	___awdiv
  1397  0F04  1683               	bsf	3,5	;RP0=1, select bank1
  1398  0F05  1303               	bcf	3,6	;RP1=0, select bank1
  1399  0F06  083E               	movf	_temperatura^(0+128),w
  1400  0F07  0277               	subwf	?___awdiv,w
  1401  0F08  00B6               	movwf	_erro^(0+128)
  1402  0F09  083F               	movf	(_temperatura+1)^(0+128),w
  1403  0F0A  1C03               	skipc
  1404  0F0B  0A3F               	incf	(_temperatura+1)^(0+128),w
  1405  0F0C  0278               	subwf	?___awdiv+1,w
  1406  0F0D  00B7               	movwf	(_erro+1)^(0+128)
  1407                           
  1408                           ;main.c: 199:     proporcional = kp * erro;
  1409  0F0E  0856               	movf	(_kp+1)^(0+128),w
  1410  0F0F  00F6               	movwf	___wmul@multiplier+1
  1411  0F10  0855               	movf	_kp^(0+128),w
  1412  0F11  00F5               	movwf	___wmul@multiplier
  1413  0F12  0837               	movf	(_erro+1)^(0+128),w
  1414  0F13  00F8               	movwf	___wmul@multiplicand+1
  1415  0F14  0836               	movf	_erro^(0+128),w
  1416  0F15  00F7               	movwf	___wmul@multiplicand
  1417  0F16  160A  118A  275A  120A  158A  	fcall	___wmul
  1418  0F1B  0876               	movf	?___wmul+1,w
  1419  0F1C  1683               	bsf	3,5	;RP0=1, select bank1
  1420  0F1D  1303               	bcf	3,6	;RP1=0, select bank1
  1421  0F1E  00A7               	movwf	(_proporcional+1)^(0+128)
  1422  0F1F  0875               	movf	?___wmul,w
  1423  0F20  00A6               	movwf	_proporcional^(0+128)
  1424  0F21                     l2620:
  1425                           
  1426                           ;main.c: 200:     integral += (erro * ki) * 100E-3;
  1427  0F21  0854               	movf	(_ki+1)^(0+128),w
  1428  0F22  00F8               	movwf	___wmul@multiplicand+1
  1429  0F23  0853               	movf	_ki^(0+128),w
  1430  0F24  00F7               	movwf	___wmul@multiplicand
  1431  0F25  0837               	movf	(_erro+1)^(0+128),w
  1432  0F26  00F6               	movwf	___wmul@multiplier+1
  1433  0F27  0836               	movf	_erro^(0+128),w
  1434  0F28  00F5               	movwf	___wmul@multiplier
  1435  0F29  160A  118A  275A  120A  158A  	fcall	___wmul
  1436  0F2E  0875               	movf	?___wmul,w
  1437  0F2F  1283               	bcf	3,5	;RP0=0, select bank0
  1438  0F30  1303               	bcf	3,6	;RP1=0, select bank0
  1439  0F31  00A6               	movwf	___xxtofl@val
  1440  0F32  0876               	movf	?___wmul+1,w
  1441  0F33  00A7               	movwf	___xxtofl@val+1
  1442  0F34  3000               	movlw	0
  1443  0F35  1BA7               	btfsc	___xxtofl@val+1,7
  1444  0F36  30FF               	movlw	255
  1445  0F37  00A8               	movwf	___xxtofl@val+2
  1446  0F38  00A9               	movwf	___xxtofl@val+3
  1447  0F39  3001               	movlw	1
  1448  0F3A  120A  158A  254B  120A  158A  	fcall	___xxtofl
  1449  0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  1450  0F40  1303               	bcf	3,6	;RP1=0, select bank0
  1451  0F41  0829               	movf	?___xxtofl+3,w
  1452  0F42  00D5               	movwf	___flmul@a+3
  1453  0F43  0828               	movf	?___xxtofl+2,w
  1454  0F44  00D4               	movwf	___flmul@a+2
  1455  0F45  0827               	movf	?___xxtofl+1,w
  1456  0F46  00D3               	movwf	___flmul@a+1
  1457  0F47  0826               	movf	?___xxtofl,w
  1458  0F48  00D2               	movwf	___flmul@a
  1459  0F49  303D               	movlw	61
  1460  0F4A  00D1               	movwf	___flmul@b+3
  1461  0F4B  30CC               	movlw	204
  1462  0F4C  00D0               	movwf	___flmul@b+2
  1463  0F4D  30CC               	movlw	204
  1464  0F4E  00CF               	movwf	___flmul@b+1
  1465  0F4F  30CD               	movlw	205
  1466  0F50  00CE               	movwf	___flmul@b
  1467  0F51  120A  118A  247B  120A  158A  	fcall	___flmul
  1468  0F56  1283               	bcf	3,5	;RP0=0, select bank0
  1469  0F57  1303               	bcf	3,6	;RP1=0, select bank0
  1470  0F58  0851               	movf	?___flmul+3,w
  1471  0F59  00EB               	movwf	___fltol@f1+3
  1472  0F5A  0850               	movf	?___flmul+2,w
  1473  0F5B  00EA               	movwf	___fltol@f1+2
  1474  0F5C  084F               	movf	?___flmul+1,w
  1475  0F5D  00E9               	movwf	___fltol@f1+1
  1476  0F5E  084E               	movf	?___flmul,w
  1477  0F5F  00E8               	movwf	___fltol@f1
  1478  0F60  120A  158A  22A7  120A  158A  	fcall	___fltol
  1479  0F65  1283               	bcf	3,5	;RP0=0, select bank0
  1480  0F66  1303               	bcf	3,6	;RP1=0, select bank0
  1481  0F67  0868               	movf	?___fltol,w
  1482  0F68  1683               	bsf	3,5	;RP0=1, select bank1
  1483  0F69  1303               	bcf	3,6	;RP1=0, select bank1
  1484  0F6A  07A4               	addwf	_integral^(0+128),f
  1485  0F6B  1803               	skipnc
  1486  0F6C  0AA5               	incf	(_integral+1)^(0+128),f
  1487  0F6D  1283               	bcf	3,5	;RP0=0, select bank0
  1488  0F6E  1303               	bcf	3,6	;RP1=0, select bank0
  1489  0F6F  0869               	movf	?___fltol+1,w
  1490  0F70  1683               	bsf	3,5	;RP0=1, select bank1
  1491  0F71  1303               	bcf	3,6	;RP1=0, select bank1
  1492  0F72  07A5               	addwf	(_integral+1)^(0+128),f
  1493  0F73                     l2622:
  1494                           
  1495                           ;main.c: 201:     derivativo += ((temperaturaReferencia - temperatura) * kd) / 100E-3;
  1496  0F73  0833               	movf	(_kd+1)^(0+128),w
  1497  0F74  00F8               	movwf	___wmul@multiplicand+1
  1498  0F75  0832               	movf	_kd^(0+128),w
  1499  0F76  00F7               	movwf	___wmul@multiplicand
  1500  0F77  083E               	movf	_temperatura^(0+128),w
  1501  0F78  023C               	subwf	_temperaturaReferencia^(0+128),w
  1502  0F79  00F5               	movwf	___wmul@multiplier
  1503  0F7A  083F               	movf	(_temperatura+1)^(0+128),w
  1504  0F7B  1C03               	skipc
  1505  0F7C  0A3F               	incf	(_temperatura+1)^(0+128),w
  1506  0F7D  023D               	subwf	(_temperaturaReferencia+1)^(0+128),w
  1507  0F7E  00F6               	movwf	___wmul@multiplier+1
  1508  0F7F  160A  118A  275A  120A  158A  	fcall	___wmul
  1509  0F84  0875               	movf	?___wmul,w
  1510  0F85  1283               	bcf	3,5	;RP0=0, select bank0
  1511  0F86  1303               	bcf	3,6	;RP1=0, select bank0
  1512  0F87  00A6               	movwf	___xxtofl@val
  1513  0F88  0876               	movf	?___wmul+1,w
  1514  0F89  00A7               	movwf	___xxtofl@val+1
  1515  0F8A  3000               	movlw	0
  1516  0F8B  1BA7               	btfsc	___xxtofl@val+1,7
  1517  0F8C  30FF               	movlw	255
  1518  0F8D  00A8               	movwf	___xxtofl@val+2
  1519  0F8E  00A9               	movwf	___xxtofl@val+3
  1520  0F8F  3001               	movlw	1
  1521  0F90  120A  158A  254B  120A  158A  	fcall	___xxtofl
  1522  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  1523  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  1524  0F97  0829               	movf	?___xxtofl+3,w
  1525  0F98  00BB               	movwf	___fldiv@b+3
  1526  0F99  0828               	movf	?___xxtofl+2,w
  1527  0F9A  00BA               	movwf	___fldiv@b+2
  1528  0F9B  0827               	movf	?___xxtofl+1,w
  1529  0F9C  00B9               	movwf	___fldiv@b+1
  1530  0F9D  0826               	movf	?___xxtofl,w
  1531  0F9E  00B8               	movwf	___fldiv@b
  1532  0F9F  303D               	movlw	61
  1533  0FA0  00B7               	movwf	___fldiv@a+3
  1534  0FA1  30CC               	movlw	204
  1535  0FA2  00B6               	movwf	___fldiv@a+2
  1536  0FA3  30CC               	movlw	204
  1537  0FA4  00B5               	movwf	___fldiv@a+1
  1538  0FA5  30CD               	movlw	205
  1539  0FA6  00B4               	movwf	___fldiv@a
  1540  0FA7  120A  118A  229E  120A  158A  	fcall	___fldiv
  1541  0FAC  1283               	bcf	3,5	;RP0=0, select bank0
  1542  0FAD  1303               	bcf	3,6	;RP1=0, select bank0
  1543  0FAE  0837               	movf	?___fldiv+3,w
  1544  0FAF  00EB               	movwf	___fltol@f1+3
  1545  0FB0  0836               	movf	?___fldiv+2,w
  1546  0FB1  00EA               	movwf	___fltol@f1+2
  1547  0FB2  0835               	movf	?___fldiv+1,w
  1548  0FB3  00E9               	movwf	___fltol@f1+1
  1549  0FB4  0834               	movf	?___fldiv,w
  1550  0FB5  00E8               	movwf	___fltol@f1
  1551  0FB6  120A  158A  22A7  120A  158A  	fcall	___fltol
  1552  0FBB  1283               	bcf	3,5	;RP0=0, select bank0
  1553  0FBC  1303               	bcf	3,6	;RP1=0, select bank0
  1554  0FBD  0868               	movf	?___fltol,w
  1555  0FBE  1683               	bsf	3,5	;RP0=1, select bank1
  1556  0FBF  1303               	bcf	3,6	;RP1=0, select bank1
  1557  0FC0  07A2               	addwf	_derivativo^(0+128),f
  1558  0FC1  1803               	skipnc
  1559  0FC2  0AA3               	incf	(_derivativo+1)^(0+128),f
  1560  0FC3  1283               	bcf	3,5	;RP0=0, select bank0
  1561  0FC4  1303               	bcf	3,6	;RP1=0, select bank0
  1562  0FC5  0869               	movf	?___fltol+1,w
  1563  0FC6  1683               	bsf	3,5	;RP0=1, select bank1
  1564  0FC7  1303               	bcf	3,6	;RP1=0, select bank1
  1565  0FC8  07A3               	addwf	(_derivativo+1)^(0+128),f
  1566  0FC9                     l2624:
  1567                           
  1568                           ;main.c: 202:     temperaturaReferencia = temperatura;
  1569  0FC9  083F               	movf	(_temperatura+1)^(0+128),w
  1570  0FCA  00BD               	movwf	(_temperaturaReferencia+1)^(0+128)
  1571  0FCB  083E               	movf	_temperatura^(0+128),w
  1572  0FCC  00BC               	movwf	_temperaturaReferencia^(0+128)
  1573  0FCD                     l2626:
  1574                           
  1575                           ;main.c: 204:     PID = (proporcional + integral + derivativo);
  1576  0FCD  0824               	movf	_integral^(0+128),w
  1577  0FCE  0726               	addwf	_proporcional^(0+128),w
  1578  0FCF  00CF               	movwf	??_realizarCalculo^(0+128)
  1579  0FD0  0825               	movf	(_integral+1)^(0+128),w
  1580  0FD1  1803               	skipnc
  1581  0FD2  0A25               	incf	(_integral+1)^(0+128),w
  1582  0FD3  0727               	addwf	(_proporcional+1)^(0+128),w
  1583  0FD4  00D0               	movwf	(??_realizarCalculo+1)^(0+128)
  1584  0FD5  0822               	movf	_derivativo^(0+128),w
  1585  0FD6  074F               	addwf	??_realizarCalculo^(0+128),w
  1586  0FD7  00A0               	movwf	_PID^(0+128)
  1587  0FD8  0823               	movf	(_derivativo+1)^(0+128),w
  1588  0FD9  1803               	skipnc
  1589  0FDA  0A23               	incf	(_derivativo+1)^(0+128),w
  1590  0FDB  0750               	addwf	(??_realizarCalculo+1)^(0+128),w
  1591  0FDC  00A1               	movwf	(_PID+1)^(0+128)
  1592  0FDD                     l2628:
  1593                           
  1594                           ;main.c: 205:     PID = controleMaximoMinimo(PID);
  1595  0FDD  0821               	movf	(_PID+1)^(0+128),w
  1596  0FDE  00F1               	movwf	controleMaximoMinimo@valor+1
  1597  0FDF  0820               	movf	_PID^(0+128),w
  1598  0FE0  00F0               	movwf	controleMaximoMinimo@valor
  1599  0FE1  160A  118A  2742  120A  158A  	fcall	_controleMaximoMinimo
  1600  0FE6  0871               	movf	?_controleMaximoMinimo+1,w
  1601  0FE7  1683               	bsf	3,5	;RP0=1, select bank1
  1602  0FE8  1303               	bcf	3,6	;RP1=0, select bank1
  1603  0FE9  00A1               	movwf	(_PID+1)^(0+128)
  1604  0FEA  0870               	movf	?_controleMaximoMinimo,w
  1605  0FEB  00A0               	movwf	_PID^(0+128)
  1606  0FEC                     l2630:
  1607                           
  1608                           ;main.c: 207:     PWM1_Duty(PID, 4000);
  1609  0FEC  0821               	movf	(_PID+1)^(0+128),w
  1610  0FED  1283               	bcf	3,5	;RP0=0, select bank0
  1611  0FEE  1303               	bcf	3,6	;RP1=0, select bank0
  1612  0FEF  00ED               	movwf	PWM1_Duty@duty+1
  1613  0FF0  1683               	bsf	3,5	;RP0=1, select bank1
  1614  0FF1  1303               	bcf	3,6	;RP1=0, select bank1
  1615  0FF2  0820               	movf	_PID^(0+128),w
  1616  0FF3  1283               	bcf	3,5	;RP0=0, select bank0
  1617  0FF4  1303               	bcf	3,6	;RP1=0, select bank0
  1618  0FF5  00EC               	movwf	PWM1_Duty@duty
  1619  0FF6  30A0               	movlw	160
  1620  0FF7  00EE               	movwf	PWM1_Duty@freq
  1621  0FF8  300F               	movlw	15
  1622  0FF9  00EF               	movwf	PWM1_Duty@freq+1
  1623  0FFA  120A  158A  2495  120A  158A  	fcall	_PWM1_Duty
  1624  0FFF                     l131:
  1625  0FFF  0008               	return
  1626  1000                     __end_of_realizarCalculo:
  1627                           
  1628                           	psect	text2
  1629  175A                     __ptext2:	
  1630 ;; *************** function ___wmul *****************
  1631 ;; Defined at:
  1632 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  1633 ;; Parameters:    Size  Location     Type
  1634 ;;  multiplier      2    5[COMMON] unsigned int 
  1635 ;;  multiplicand    2    7[COMMON] unsigned int 
  1636 ;; Auto vars:     Size  Location     Type
  1637 ;;  product         2    9[COMMON] unsigned int 
  1638 ;; Return value:  Size  Location     Type
  1639 ;;                  2    5[COMMON] unsigned int 
  1640 ;; Registers used:
  1641 ;;		wreg, status,2, status,0
  1642 ;; Tracked objects:
  1643 ;;		On entry : 0/0
  1644 ;;		On exit  : 0/0
  1645 ;;		Unchanged: 0/0
  1646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1647 ;;      Params:         4       0       0       0       0
  1648 ;;      Locals:         2       0       0       0       0
  1649 ;;      Temps:          0       0       0       0       0
  1650 ;;      Totals:         6       0       0       0       0
  1651 ;;Total ram usage:        6 bytes
  1652 ;; Hardware stack levels used: 1
  1653 ;; This function calls:
  1654 ;;		Nothing
  1655 ;; This function is called by:
  1656 ;;		_realizarCalculo
  1657 ;;		_realizarCalculo2
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660                           
  1661                           
  1662                           ;psect for function ___wmul
  1663  175A                     ___wmul:
  1664  175A                     l2402:	
  1665                           ;incstack = 0
  1666                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1667                           
  1668  175A  01F9               	clrf	___wmul@product
  1669  175B  01FA               	clrf	___wmul@product+1
  1670  175C                     l2404:
  1671  175C  1C75               	btfss	___wmul@multiplier,0
  1672  175D  2F5F               	goto	u3251
  1673  175E  2F60               	goto	u3250
  1674  175F                     u3251:
  1675  175F  2F66               	goto	l358
  1676  1760                     u3250:
  1677  1760                     l2406:
  1678  1760  0877               	movf	___wmul@multiplicand,w
  1679  1761  07F9               	addwf	___wmul@product,f
  1680  1762  1803               	skipnc
  1681  1763  0AFA               	incf	___wmul@product+1,f
  1682  1764  0878               	movf	___wmul@multiplicand+1,w
  1683  1765  07FA               	addwf	___wmul@product+1,f
  1684  1766                     l358:
  1685  1766  3001               	movlw	1
  1686  1767                     u3265:
  1687  1767  1003               	clrc
  1688  1768  0DF7               	rlf	___wmul@multiplicand,f
  1689  1769  0DF8               	rlf	___wmul@multiplicand+1,f
  1690  176A  3EFF               	addlw	-1
  1691  176B  1D03               	skipz
  1692  176C  2F67               	goto	u3265
  1693  176D                     l2408:
  1694  176D  3001               	movlw	1
  1695  176E                     u3275:
  1696  176E  1003               	clrc
  1697  176F  0CF6               	rrf	___wmul@multiplier+1,f
  1698  1770  0CF5               	rrf	___wmul@multiplier,f
  1699  1771  3EFF               	addlw	-1
  1700  1772  1D03               	skipz
  1701  1773  2F6E               	goto	u3275
  1702  1774                     l2410:
  1703  1774  0875               	movf	___wmul@multiplier,w
  1704  1775  0476               	iorwf	___wmul@multiplier+1,w
  1705  1776  1D03               	btfss	3,2
  1706  1777  2F79               	goto	u3281
  1707  1778  2F7A               	goto	u3280
  1708  1779                     u3281:
  1709  1779  2F5C               	goto	l2404
  1710  177A                     u3280:
  1711  177A                     l2412:
  1712  177A  087A               	movf	___wmul@product+1,w
  1713  177B  00F6               	movwf	?___wmul+1
  1714  177C  0879               	movf	___wmul@product,w
  1715  177D  00F5               	movwf	?___wmul
  1716  177E                     l360:
  1717  177E  0008               	return
  1718  177F                     __end_of___wmul:
  1719                           
  1720                           	psect	text3
  1721  0C95                     __ptext3:	
  1722 ;; *************** function _PWM1_Duty *****************
  1723 ;; Defined at:
  1724 ;;		line 17 in file "PWM.c"
  1725 ;; Parameters:    Size  Location     Type
  1726 ;;  duty            2   76[BANK0 ] unsigned int 
  1727 ;;  freq            2   78[BANK0 ] unsigned int 
  1728 ;; Auto vars:     Size  Location     Type
  1729 ;;		None
  1730 ;; Return value:  Size  Location     Type
  1731 ;;                  1    wreg      void 
  1732 ;; Registers used:
  1733 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1734 ;; Tracked objects:
  1735 ;;		On entry : 0/0
  1736 ;;		On exit  : 0/0
  1737 ;;		Unchanged: 0/0
  1738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1739 ;;      Params:         0       4       0       0       0
  1740 ;;      Locals:         0       0       0       0       0
  1741 ;;      Temps:          0       0       2       0       0
  1742 ;;      Totals:         0       4       2       0       0
  1743 ;;Total ram usage:        6 bytes
  1744 ;; Hardware stack levels used: 1
  1745 ;; Hardware stack levels required when called: 2
  1746 ;; This function calls:
  1747 ;;		_PWM_Init
  1748 ;;		___aldiv
  1749 ;;		___fldiv
  1750 ;;		___flmul
  1751 ;;		___fltol
  1752 ;;		___xxtofl
  1753 ;; This function is called by:
  1754 ;;		_realizarCalculo
  1755 ;;		_realizarCalculo2
  1756 ;; This function uses a non-reentrant model
  1757 ;;
  1758                           
  1759                           
  1760                           ;psect for function _PWM1_Duty
  1761  0C95                     _PWM1_Duty:
  1762  0C95                     l2378:	
  1763                           ;incstack = 0
  1764                           ; Regs used in _PWM1_Duty: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1765                           
  1766                           
  1767                           ;PWM.c: 17: void PWM1_Duty(unsigned int duty, unsigned int freq);PWM.c: 18: {;PWM.c: 19:
      +                             PWM_Init(freq);
  1768  0C95  1283               	bcf	3,5	;RP0=0, select bank0
  1769  0C96  1303               	bcf	3,6	;RP1=0, select bank0
  1770  0C97  086E               	movf	PWM1_Duty@freq,w
  1771  0C98  00A6               	movwf	PWM_Init@freq
  1772  0C99  086F               	movf	PWM1_Duty@freq+1,w
  1773  0C9A  00A7               	movwf	PWM_Init@freq+1
  1774  0C9B  01A8               	clrf	PWM_Init@freq+2
  1775  0C9C  01A9               	clrf	PWM_Init@freq+3
  1776  0C9D  120A  158A  20AE  120A  158A  	fcall	_PWM_Init
  1777  0CA2                     l2380:
  1778                           
  1779                           ;PWM.c: 20:   if(duty<1024)
  1780  0CA2  3004               	movlw	4
  1781  0CA3  1283               	bcf	3,5	;RP0=0, select bank0
  1782  0CA4  1303               	bcf	3,6	;RP1=0, select bank0
  1783  0CA5  026D               	subwf	PWM1_Duty@duty+1,w
  1784  0CA6  3000               	movlw	0
  1785  0CA7  1903               	skipnz
  1786  0CA8  026C               	subwf	PWM1_Duty@duty,w
  1787  0CA9  1803               	skipnc
  1788  0CAA  2CAC               	goto	u3171
  1789  0CAB  2CAD               	goto	u3170
  1790  0CAC                     u3171:
  1791  0CAC  2D4A               	goto	l184
  1792  0CAD                     u3170:
  1793  0CAD                     l2382:
  1794                           
  1795                           ;PWM.c: 21:   {;PWM.c: 22:     duty = ((float)duty/1023.0)*(4000000/(freq*4));
  1796  0CAD  086C               	movf	PWM1_Duty@duty,w
  1797  0CAE  00A6               	movwf	___xxtofl@val
  1798  0CAF  086D               	movf	PWM1_Duty@duty+1,w
  1799  0CB0  00A7               	movwf	___xxtofl@val+1
  1800  0CB1  01A8               	clrf	___xxtofl@val+2
  1801  0CB2  01A9               	clrf	___xxtofl@val+3
  1802  0CB3  3000               	movlw	0
  1803  0CB4  120A  158A  254B  120A  158A  	fcall	___xxtofl
  1804  0CB9  1283               	bcf	3,5	;RP0=0, select bank0
  1805  0CBA  1303               	bcf	3,6	;RP1=0, select bank0
  1806  0CBB  0829               	movf	?___xxtofl+3,w
  1807  0CBC  00BB               	movwf	___fldiv@b+3
  1808  0CBD  0828               	movf	?___xxtofl+2,w
  1809  0CBE  00BA               	movwf	___fldiv@b+2
  1810  0CBF  0827               	movf	?___xxtofl+1,w
  1811  0CC0  00B9               	movwf	___fldiv@b+1
  1812  0CC1  0826               	movf	?___xxtofl,w
  1813  0CC2  00B8               	movwf	___fldiv@b
  1814  0CC3  3044               	movlw	68
  1815  0CC4  00B7               	movwf	___fldiv@a+3
  1816  0CC5  307F               	movlw	127
  1817  0CC6  00B6               	movwf	___fldiv@a+2
  1818  0CC7  30C0               	movlw	192
  1819  0CC8  00B5               	movwf	___fldiv@a+1
  1820  0CC9  3000               	movlw	0
  1821  0CCA  00B4               	movwf	___fldiv@a
  1822  0CCB  120A  118A  229E  120A  158A  	fcall	___fldiv
  1823  0CD0  1283               	bcf	3,5	;RP0=0, select bank0
  1824  0CD1  1303               	bcf	3,6	;RP1=0, select bank0
  1825  0CD2  0837               	movf	?___fldiv+3,w
  1826  0CD3  00D5               	movwf	___flmul@a+3
  1827  0CD4  0836               	movf	?___fldiv+2,w
  1828  0CD5  00D4               	movwf	___flmul@a+2
  1829  0CD6  0835               	movf	?___fldiv+1,w
  1830  0CD7  00D3               	movwf	___flmul@a+1
  1831  0CD8  0834               	movf	?___fldiv,w
  1832  0CD9  00D2               	movwf	___flmul@a
  1833  0CDA  3000               	movlw	0
  1834  0CDB  00F7               	movwf	___aldiv@dividend+3
  1835  0CDC  303D               	movlw	61
  1836  0CDD  00F6               	movwf	___aldiv@dividend+2
  1837  0CDE  3009               	movlw	9
  1838  0CDF  00F5               	movwf	___aldiv@dividend+1
  1839  0CE0  3000               	movlw	0
  1840  0CE1  00F4               	movwf	___aldiv@dividend
  1841  0CE2  086F               	movf	PWM1_Duty@freq+1,w
  1842  0CE3  1683               	bsf	3,5	;RP0=1, select bank1
  1843  0CE4  1303               	bcf	3,6	;RP1=0, select bank1
  1844  0CE5  00CE               	movwf	(??_PWM1_Duty^(0+128)+1)
  1845  0CE6  1283               	bcf	3,5	;RP0=0, select bank0
  1846  0CE7  1303               	bcf	3,6	;RP1=0, select bank0
  1847  0CE8  086E               	movf	PWM1_Duty@freq,w
  1848  0CE9  1683               	bsf	3,5	;RP0=1, select bank1
  1849  0CEA  1303               	bcf	3,6	;RP1=0, select bank1
  1850  0CEB  00CD               	movwf	??_PWM1_Duty^(0+128)
  1851  0CEC  1003               	clrc
  1852  0CED  0DCD               	rlf	??_PWM1_Duty^(0+128),f
  1853  0CEE  0DCE               	rlf	(??_PWM1_Duty^(0+128)+1),f
  1854  0CEF  1003               	clrc
  1855  0CF0  0DCD               	rlf	??_PWM1_Duty^(0+128),f
  1856  0CF1  0DCE               	rlf	(??_PWM1_Duty^(0+128)+1),f
  1857  0CF2  084D               	movf	??_PWM1_Duty^(0+128),w
  1858  0CF3  00F0               	movwf	___aldiv@divisor
  1859  0CF4  084E               	movf	(??_PWM1_Duty+1)^(0+128),w
  1860  0CF5  00F1               	movwf	___aldiv@divisor+1
  1861  0CF6  01F2               	clrf	___aldiv@divisor+2
  1862  0CF7  01F3               	clrf	___aldiv@divisor+3
  1863  0CF8  120A  158A  2342  120A  158A  	fcall	___aldiv
  1864  0CFD  0873               	movf	?___aldiv+3,w
  1865  0CFE  1283               	bcf	3,5	;RP0=0, select bank0
  1866  0CFF  1303               	bcf	3,6	;RP1=0, select bank0
  1867  0D00  00A9               	movwf	___xxtofl@val+3
  1868  0D01  0872               	movf	?___aldiv+2,w
  1869  0D02  00A8               	movwf	___xxtofl@val+2
  1870  0D03  0871               	movf	?___aldiv+1,w
  1871  0D04  00A7               	movwf	___xxtofl@val+1
  1872  0D05  0870               	movf	?___aldiv,w
  1873  0D06  00A6               	movwf	___xxtofl@val
  1874  0D07  3001               	movlw	1
  1875  0D08  120A  158A  254B  120A  158A  	fcall	___xxtofl
  1876  0D0D  1283               	bcf	3,5	;RP0=0, select bank0
  1877  0D0E  1303               	bcf	3,6	;RP1=0, select bank0
  1878  0D0F  0829               	movf	?___xxtofl+3,w
  1879  0D10  00D1               	movwf	___flmul@b+3
  1880  0D11  0828               	movf	?___xxtofl+2,w
  1881  0D12  00D0               	movwf	___flmul@b+2
  1882  0D13  0827               	movf	?___xxtofl+1,w
  1883  0D14  00CF               	movwf	___flmul@b+1
  1884  0D15  0826               	movf	?___xxtofl,w
  1885  0D16  00CE               	movwf	___flmul@b
  1886  0D17  120A  118A  247B  120A  158A  	fcall	___flmul
  1887  0D1C  1283               	bcf	3,5	;RP0=0, select bank0
  1888  0D1D  1303               	bcf	3,6	;RP1=0, select bank0
  1889  0D1E  0851               	movf	?___flmul+3,w
  1890  0D1F  00EB               	movwf	___fltol@f1+3
  1891  0D20  0850               	movf	?___flmul+2,w
  1892  0D21  00EA               	movwf	___fltol@f1+2
  1893  0D22  084F               	movf	?___flmul+1,w
  1894  0D23  00E9               	movwf	___fltol@f1+1
  1895  0D24  084E               	movf	?___flmul,w
  1896  0D25  00E8               	movwf	___fltol@f1
  1897  0D26  120A  158A  22A7  120A  158A  	fcall	___fltol
  1898  0D2B  1283               	bcf	3,5	;RP0=0, select bank0
  1899  0D2C  1303               	bcf	3,6	;RP1=0, select bank0
  1900  0D2D  0869               	movf	?___fltol+1,w
  1901  0D2E  00ED               	movwf	PWM1_Duty@duty+1
  1902  0D2F  0868               	movf	?___fltol,w
  1903  0D30  00EC               	movwf	PWM1_Duty@duty
  1904  0D31                     l2384:
  1905                           
  1906                           ;PWM.c: 23:     CCP1X = duty & 0b00000010;
  1907  0D31  1297               	bcf	23,5	;volatile
  1908  0D32                     l2386:
  1909                           
  1910                           ;PWM.c: 24:     CCP1Y = duty & 0b00000001;
  1911  0D32  186C               	btfsc	PWM1_Duty@duty,0
  1912  0D33  2D35               	goto	u3181
  1913  0D34  2D39               	goto	u3180
  1914  0D35                     u3181:
  1915  0D35  1283               	bcf	3,5	;RP0=0, select bank0
  1916  0D36  1303               	bcf	3,6	;RP1=0, select bank0
  1917  0D37  1617               	bsf	23,4	;volatile
  1918  0D38  2D3C               	goto	u3194
  1919  0D39                     u3180:
  1920  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  1921  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  1922  0D3B  1217               	bcf	23,4	;volatile
  1923  0D3C                     u3194:
  1924  0D3C                     l2388:
  1925                           
  1926                           ;PWM.c: 25:     CCPR1L = (unsigned char)duty>>2;
  1927  0D3C  086C               	movf	PWM1_Duty@duty,w
  1928  0D3D  1683               	bsf	3,5	;RP0=1, select bank1
  1929  0D3E  1303               	bcf	3,6	;RP1=0, select bank1
  1930  0D3F  00CD               	movwf	??_PWM1_Duty^(0+128)
  1931  0D40  3002               	movlw	2
  1932  0D41                     u3205:
  1933  0D41  1003               	clrc
  1934  0D42  0CCD               	rrf	??_PWM1_Duty^(0+128),f
  1935  0D43  3EFF               	addlw	-1
  1936  0D44  1D03               	skipz
  1937  0D45  2D41               	goto	u3205
  1938  0D46  084D               	movf	??_PWM1_Duty^(0+128),w
  1939  0D47  1283               	bcf	3,5	;RP0=0, select bank0
  1940  0D48  1303               	bcf	3,6	;RP1=0, select bank0
  1941  0D49  0095               	movwf	21	;volatile
  1942  0D4A                     l184:
  1943  0D4A  0008               	return
  1944  0D4B                     __end_of_PWM1_Duty:
  1945                           
  1946                           	psect	text4
  1947  0878                     __ptext4:	
  1948 ;; *************** function _lcd_init *****************
  1949 ;; Defined at:
  1950 ;;		line 57 in file "lcd.c"
  1951 ;; Parameters:    Size  Location     Type
  1952 ;;		None
  1953 ;; Auto vars:     Size  Location     Type
  1954 ;;		None
  1955 ;; Return value:  Size  Location     Type
  1956 ;;                  1    wreg      void 
  1957 ;; Registers used:
  1958 ;;		wreg, status,2, status,0, pclath, cstack
  1959 ;; Tracked objects:
  1960 ;;		On entry : 0/0
  1961 ;;		On exit  : 0/0
  1962 ;;		Unchanged: 0/0
  1963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1964 ;;      Params:         0       0       0       0       0
  1965 ;;      Locals:         0       0       0       0       0
  1966 ;;      Temps:          0       0       0       0       0
  1967 ;;      Totals:         0       0       0       0       0
  1968 ;;Total ram usage:        0 bytes
  1969 ;; Hardware stack levels used: 1
  1970 ;; Hardware stack levels required when called: 2
  1971 ;; This function calls:
  1972 ;;		_lcd_cmd
  1973 ;; This function is called by:
  1974 ;;		_main
  1975 ;; This function uses a non-reentrant model
  1976 ;;
  1977                           
  1978                           
  1979                           ;psect for function _lcd_init
  1980  0878                     _lcd_init:
  1981  0878                     l2644:	
  1982                           ;incstack = 0
  1983                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1984                           
  1985                           
  1986                           ;lcd.c: 59:  PORTEbits.RE1=0;
  1987  0878  1283               	bcf	3,5	;RP0=0, select bank0
  1988  0879  1303               	bcf	3,6	;RP1=0, select bank0
  1989  087A  1089               	bcf	9,1	;volatile
  1990                           
  1991                           ;lcd.c: 60:  PORTEbits.RE0=0;
  1992  087B  1009               	bcf	9,0	;volatile
  1993                           
  1994                           ;lcd.c: 62:  PORTEbits.RE1=1;
  1995  087C  1489               	bsf	9,1	;volatile
  1996  087D                     l2646:
  1997                           
  1998                           ;lcd.c: 64:  lcd_cmd(0x38);
  1999  087D  3038               	movlw	56
  2000  087E  160A  118A  2722  120A  158A  	fcall	_lcd_cmd
  2001                           
  2002                           ;lcd.c: 66:  lcd_cmd(0x38);
  2003  0883  3038               	movlw	56
  2004  0884  160A  118A  2722  120A  158A  	fcall	_lcd_cmd
  2005                           
  2006                           ;lcd.c: 68:  lcd_cmd(0x38);
  2007  0889  3038               	movlw	56
  2008  088A  160A  118A  2722  120A  158A  	fcall	_lcd_cmd
  2009                           
  2010                           ;lcd.c: 69:  lcd_cmd(0x08);
  2011  088F  3008               	movlw	8
  2012  0890  160A  118A  2722  120A  158A  	fcall	_lcd_cmd
  2013                           
  2014                           ;lcd.c: 70:  lcd_cmd(0x0F);
  2015  0895  300F               	movlw	15
  2016  0896  160A  118A  2722  120A  158A  	fcall	_lcd_cmd
  2017                           
  2018                           ;lcd.c: 71:  lcd_cmd(0x01);
  2019  089B  3001               	movlw	1
  2020  089C  160A  118A  2722  120A  158A  	fcall	_lcd_cmd
  2021                           
  2022                           ;lcd.c: 72:  lcd_cmd(0x38);
  2023  08A1  3038               	movlw	56
  2024  08A2  160A  118A  2722  120A  158A  	fcall	_lcd_cmd
  2025                           
  2026                           ;lcd.c: 73:     lcd_cmd(0x80);
  2027  08A7  3080               	movlw	128
  2028  08A8  160A  118A  2722  120A  158A  	fcall	_lcd_cmd
  2029  08AD                     l238:
  2030  08AD  0008               	return
  2031  08AE                     __end_of_lcd_init:
  2032                           
  2033                           	psect	text5
  2034  0102                     __ptext5:	
  2035 ;; *************** function _imprimirValoresLcd *****************
  2036 ;; Defined at:
  2037 ;;		line 126 in file "main.c"
  2038 ;; Parameters:    Size  Location     Type
  2039 ;;		None
  2040 ;; Auto vars:     Size  Location     Type
  2041 ;;  centena         2   16[BANK0 ] int 
  2042 ;;  milhar          2   14[BANK0 ] int 
  2043 ;; Return value:  Size  Location     Type
  2044 ;;                  1    wreg      void 
  2045 ;; Registers used:
  2046 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2047 ;; Tracked objects:
  2048 ;;		On entry : 0/0
  2049 ;;		On exit  : 0/0
  2050 ;;		Unchanged: 0/0
  2051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2052 ;;      Params:         0       0       0       0       0
  2053 ;;      Locals:         0       4       0       0       0
  2054 ;;      Temps:          0       1       0       0       0
  2055 ;;      Totals:         0       5       0       0       0
  2056 ;;Total ram usage:        5 bytes
  2057 ;; Hardware stack levels used: 1
  2058 ;; Hardware stack levels required when called: 3
  2059 ;; This function calls:
  2060 ;;		___awdiv
  2061 ;;		___awmod
  2062 ;;		_lcd_cmd
  2063 ;;		_lcd_str
  2064 ;;		_sprintf
  2065 ;; This function is called by:
  2066 ;;		_main
  2067 ;; This function uses a non-reentrant model
  2068 ;;
  2069                           
  2070                           
  2071                           ;psect for function _imprimirValoresLcd
  2072  0102                     _imprimirValoresLcd:
  2073  0102                     l2562:	
  2074                           ;incstack = 0
  2075                           ; Regs used in _imprimirValoresLcd: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2076                           
  2077                           
  2078                           ;main.c: 127:     if (menu == 1){
  2079  0102  1683               	bsf	3,5	;RP0=1, select bank1
  2080  0103  1303               	bcf	3,6	;RP1=0, select bank1
  2081  0104  033A               	decf	_menu^(0+128),w
  2082  0105  043B               	iorwf	(_menu+1)^(0+128),w
  2083  0106  1D03               	btfss	3,2
  2084  0107  2909               	goto	u3631
  2085  0108  290A               	goto	u3630
  2086  0109                     u3631:
  2087  0109  2910               	goto	l2566
  2088  010A                     u3630:
  2089  010A                     l2564:
  2090                           
  2091                           ;main.c: 128:         lcd_cmd(0x87);
  2092  010A  3087               	movlw	135
  2093  010B  160A  118A  2722  120A  118A  	fcall	_lcd_cmd
  2094  0110                     l2566:
  2095                           
  2096                           ;main.c: 131:     if (menu == 2){
  2097  0110  3002               	movlw	2
  2098  0111  1683               	bsf	3,5	;RP0=1, select bank1
  2099  0112  1303               	bcf	3,6	;RP1=0, select bank1
  2100  0113  063A               	xorwf	_menu^(0+128),w
  2101  0114  043B               	iorwf	(_menu+1)^(0+128),w
  2102  0115  1D03               	btfss	3,2
  2103  0116  2918               	goto	u3641
  2104  0117  2919               	goto	u3640
  2105  0118                     u3641:
  2106  0118  291F               	goto	l2570
  2107  0119                     u3640:
  2108  0119                     l2568:
  2109                           
  2110                           ;main.c: 132:         lcd_cmd(0xC7);
  2111  0119  30C7               	movlw	199
  2112  011A  160A  118A  2722  120A  118A  	fcall	_lcd_cmd
  2113  011F                     l2570:
  2114                           
  2115                           ;main.c: 135:     if (menu == 3){
  2116  011F  3003               	movlw	3
  2117  0120  1683               	bsf	3,5	;RP0=1, select bank1
  2118  0121  1303               	bcf	3,6	;RP1=0, select bank1
  2119  0122  063A               	xorwf	_menu^(0+128),w
  2120  0123  043B               	iorwf	(_menu+1)^(0+128),w
  2121  0124  1D03               	btfss	3,2
  2122  0125  2927               	goto	u3651
  2123  0126  2928               	goto	u3650
  2124  0127                     u3651:
  2125  0127  292E               	goto	l2574
  2126  0128                     u3650:
  2127  0128                     l2572:
  2128                           
  2129                           ;main.c: 136:         lcd_cmd(0x89 +6);
  2130  0128  308F               	movlw	143
  2131  0129  160A  118A  2722  120A  118A  	fcall	_lcd_cmd
  2132  012E                     l2574:
  2133                           
  2134                           ;main.c: 139:     if (menu == 4){
  2135  012E  3004               	movlw	4
  2136  012F  1683               	bsf	3,5	;RP0=1, select bank1
  2137  0130  1303               	bcf	3,6	;RP1=0, select bank1
  2138  0131  063A               	xorwf	_menu^(0+128),w
  2139  0132  043B               	iorwf	(_menu+1)^(0+128),w
  2140  0133  1D03               	btfss	3,2
  2141  0134  2936               	goto	u3661
  2142  0135  2937               	goto	u3660
  2143  0136                     u3661:
  2144  0136  293D               	goto	l2578
  2145  0137                     u3660:
  2146  0137                     l2576:
  2147                           
  2148                           ;main.c: 140:         lcd_cmd(0xC9 +6);
  2149  0137  30CF               	movlw	207
  2150  0138  160A  118A  2722  120A  118A  	fcall	_lcd_cmd
  2151  013D                     l2578:
  2152                           
  2153                           ;main.c: 143:     if (setPoint != setPointReferencia){
  2154  013D  1683               	bsf	3,5	;RP0=1, select bank1
  2155  013E  1303               	bcf	3,6	;RP1=0, select bank1
  2156  013F  0839               	movf	(_setPointReferencia+1)^(0+128),w
  2157  0140  0658               	xorwf	(_setPoint+1)^(0+128),w
  2158  0141  1D03               	skipz
  2159  0142  2945               	goto	u3675
  2160  0143  0838               	movf	_setPointReferencia^(0+128),w
  2161  0144  0657               	xorwf	_setPoint^(0+128),w
  2162  0145                     u3675:
  2163  0145  1903               	skipnz
  2164  0146  2948               	goto	u3671
  2165  0147  2949               	goto	u3670
  2166  0148                     u3671:
  2167  0148  29CB               	goto	l2588
  2168  0149                     u3670:
  2169  0149                     l2580:
  2170                           
  2171                           ;main.c: 144:          int milhar = setPoint/1000;
  2172  0149  30E8               	movlw	232
  2173  014A  00F7               	movwf	___awdiv@divisor
  2174  014B  3003               	movlw	3
  2175  014C  00F8               	movwf	___awdiv@divisor+1
  2176  014D  0858               	movf	(_setPoint+1)^(0+128),w
  2177  014E  00FA               	movwf	___awdiv@dividend+1
  2178  014F  0857               	movf	_setPoint^(0+128),w
  2179  0150  00F9               	movwf	___awdiv@dividend
  2180  0151  120A  158A  21BC  120A  118A  	fcall	___awdiv
  2181  0156  0878               	movf	?___awdiv+1,w
  2182  0157  1283               	bcf	3,5	;RP0=0, select bank0
  2183  0158  1303               	bcf	3,6	;RP1=0, select bank0
  2184  0159  00AF               	movwf	imprimirValoresLcd@milhar+1
  2185  015A  0877               	movf	?___awdiv,w
  2186  015B  00AE               	movwf	imprimirValoresLcd@milhar
  2187                           
  2188                           ;main.c: 145:          int centena = (setPoint%1000)/100;
  2189  015C  3064               	movlw	100
  2190  015D  00F7               	movwf	___awdiv@divisor
  2191  015E  3000               	movlw	0
  2192  015F  00F8               	movwf	___awdiv@divisor+1
  2193  0160  1683               	bsf	3,5	;RP0=1, select bank1
  2194  0161  1303               	bcf	3,6	;RP1=0, select bank1
  2195  0162  0858               	movf	(_setPoint+1)^(0+128),w
  2196  0163  00F3               	movwf	___awmod@dividend+1
  2197  0164  0857               	movf	_setPoint^(0+128),w
  2198  0165  00F2               	movwf	___awmod@dividend
  2199  0166  30E8               	movlw	232
  2200  0167  00F0               	movwf	___awmod@divisor
  2201  0168  3003               	movlw	3
  2202  0169  00F1               	movwf	___awmod@divisor+1
  2203  016A  120A  158A  2163  120A  118A  	fcall	___awmod
  2204  016F  0871               	movf	?___awmod+1,w
  2205  0170  00FA               	movwf	___awdiv@dividend+1
  2206  0171  0870               	movf	?___awmod,w
  2207  0172  00F9               	movwf	___awdiv@dividend
  2208  0173  120A  158A  21BC  120A  118A  	fcall	___awdiv
  2209  0178  0878               	movf	?___awdiv+1,w
  2210  0179  1283               	bcf	3,5	;RP0=0, select bank0
  2211  017A  1303               	bcf	3,6	;RP1=0, select bank0
  2212  017B  00B1               	movwf	imprimirValoresLcd@centena+1
  2213  017C  0877               	movf	?___awdiv,w
  2214  017D  00B0               	movwf	imprimirValoresLcd@centena
  2215                           
  2216                           ;main.c: 147:          lcd_cmd(0x83);
  2217  017E  3083               	movlw	131
  2218  017F  160A  118A  2722  120A  118A  	fcall	_lcd_cmd
  2219  0184                     l2582:
  2220                           
  2221                           ;main.c: 148:          lcd_str("  C  ");
  2222  0184  3029               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2223  0185  00F2               	movwf	lcd_str@str
  2224  0186  3080               	movlw	128
  2225  0187  00F3               	movwf	lcd_str@str+1
  2226  0188  160A  118A  27A6  120A  118A  	fcall	_lcd_str
  2227  018D                     l2584:
  2228                           
  2229                           ;main.c: 149:          lcd_cmd(0x83);
  2230  018D  3083               	movlw	131
  2231  018E  160A  118A  2722  120A  118A  	fcall	_lcd_cmd
  2232                           
  2233                           ;main.c: 150:          sprintf(string, "%d", milhar);
  2234  0193  302F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2235  0194  1283               	bcf	3,5	;RP0=0, select bank0
  2236  0195  1303               	bcf	3,6	;RP1=0, select bank0
  2237  0196  00AD               	movwf	??_imprimirValoresLcd
  2238  0197  082D               	movf	??_imprimirValoresLcd,w
  2239  0198  00A0               	movwf	sprintf@f
  2240  0199  082F               	movf	imprimirValoresLcd@milhar+1,w
  2241  019A  00A2               	movwf	?_sprintf+2
  2242  019B  082E               	movf	imprimirValoresLcd@milhar,w
  2243  019C  00A1               	movwf	?_sprintf+1
  2244  019D  3090               	movlw	(low (_string| (0+256)))& (0+255)
  2245  019E  120A  118A  201A  120A  118A  	fcall	_sprintf
  2246                           
  2247                           ;main.c: 151:          lcd_str(string);
  2248  01A3  3090               	movlw	(low (_string| (0+256)))& (0+255)
  2249  01A4  00F2               	movwf	lcd_str@str
  2250  01A5  3001               	movlw	1
  2251  01A6  00F3               	movwf	lcd_str@str+1
  2252  01A7  160A  118A  27A6  120A  118A  	fcall	_lcd_str
  2253                           
  2254                           ;main.c: 152:          sprintf(string, "%d", centena);
  2255  01AC  302F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2256  01AD  1283               	bcf	3,5	;RP0=0, select bank0
  2257  01AE  1303               	bcf	3,6	;RP1=0, select bank0
  2258  01AF  00AD               	movwf	??_imprimirValoresLcd
  2259  01B0  082D               	movf	??_imprimirValoresLcd,w
  2260  01B1  00A0               	movwf	sprintf@f
  2261  01B2  0831               	movf	imprimirValoresLcd@centena+1,w
  2262  01B3  00A2               	movwf	?_sprintf+2
  2263  01B4  0830               	movf	imprimirValoresLcd@centena,w
  2264  01B5  00A1               	movwf	?_sprintf+1
  2265  01B6  3090               	movlw	(low (_string| (0+256)))& (0+255)
  2266  01B7  120A  118A  201A  120A  118A  	fcall	_sprintf
  2267                           
  2268                           ;main.c: 153:          lcd_str(string);
  2269  01BC  3090               	movlw	(low (_string| (0+256)))& (0+255)
  2270  01BD  00F2               	movwf	lcd_str@str
  2271  01BE  3001               	movlw	1
  2272  01BF  00F3               	movwf	lcd_str@str+1
  2273  01C0  160A  118A  27A6  120A  118A  	fcall	_lcd_str
  2274  01C5                     l2586:
  2275                           
  2276                           ;main.c: 155:          setPointReferencia = setPoint;
  2277  01C5  1683               	bsf	3,5	;RP0=1, select bank1
  2278  01C6  1303               	bcf	3,6	;RP1=0, select bank1
  2279  01C7  0858               	movf	(_setPoint+1)^(0+128),w
  2280  01C8  00B9               	movwf	(_setPointReferencia+1)^(0+128)
  2281  01C9  0857               	movf	_setPoint^(0+128),w
  2282  01CA  00B8               	movwf	_setPointReferencia^(0+128)
  2283  01CB                     l2588:
  2284                           
  2285                           ;main.c: 158:     if (kp != kpReferencia){
  2286  01CB  082F               	movf	(_kpReferencia+1)^(0+128),w
  2287  01CC  0656               	xorwf	(_kp+1)^(0+128),w
  2288  01CD  1D03               	skipz
  2289  01CE  29D1               	goto	u3685
  2290  01CF  082E               	movf	_kpReferencia^(0+128),w
  2291  01D0  0655               	xorwf	_kp^(0+128),w
  2292  01D1                     u3685:
  2293  01D1  1903               	skipnz
  2294  01D2  29D4               	goto	u3681
  2295  01D3  29D5               	goto	u3680
  2296  01D4                     u3681:
  2297  01D4  2A11               	goto	l2598
  2298  01D5                     u3680:
  2299  01D5                     l2590:
  2300                           
  2301                           ;main.c: 159:         lcd_cmd(0xC3);
  2302  01D5  30C3               	movlw	195
  2303  01D6  160A  118A  2722  120A  118A  	fcall	_lcd_cmd
  2304  01DB                     l2592:
  2305                           
  2306                           ;main.c: 160:         lcd_str("     ");
  2307  01DB  3023               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2308  01DC  00F2               	movwf	lcd_str@str
  2309  01DD  3080               	movlw	128
  2310  01DE  00F3               	movwf	lcd_str@str+1
  2311  01DF  160A  118A  27A6  120A  118A  	fcall	_lcd_str
  2312  01E4                     l2594:
  2313                           
  2314                           ;main.c: 161:         lcd_cmd(0xC3);
  2315  01E4  30C3               	movlw	195
  2316  01E5  160A  118A  2722  120A  118A  	fcall	_lcd_cmd
  2317                           
  2318                           ;main.c: 162:         sprintf(string, "%d", kp);
  2319  01EA  302F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2320  01EB  1283               	bcf	3,5	;RP0=0, select bank0
  2321  01EC  1303               	bcf	3,6	;RP1=0, select bank0
  2322  01ED  00AD               	movwf	??_imprimirValoresLcd
  2323  01EE  082D               	movf	??_imprimirValoresLcd,w
  2324  01EF  00A0               	movwf	sprintf@f
  2325  01F0  1683               	bsf	3,5	;RP0=1, select bank1
  2326  01F1  1303               	bcf	3,6	;RP1=0, select bank1
  2327  01F2  0856               	movf	(_kp+1)^(0+128),w
  2328  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  2329  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  2330  01F5  00A2               	movwf	?_sprintf+2
  2331  01F6  1683               	bsf	3,5	;RP0=1, select bank1
  2332  01F7  1303               	bcf	3,6	;RP1=0, select bank1
  2333  01F8  0855               	movf	_kp^(0+128),w
  2334  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  2335  01FA  1303               	bcf	3,6	;RP1=0, select bank0
  2336  01FB  00A1               	movwf	?_sprintf+1
  2337  01FC  3090               	movlw	(low (_string| (0+256)))& (0+255)
  2338  01FD  120A  118A  201A  120A  118A  	fcall	_sprintf
  2339                           
  2340                           ;main.c: 163:         lcd_str(string);
  2341  0202  3090               	movlw	(low (_string| (0+256)))& (0+255)
  2342  0203  00F2               	movwf	lcd_str@str
  2343  0204  3001               	movlw	1
  2344  0205  00F3               	movwf	lcd_str@str+1
  2345  0206  160A  118A  27A6  120A  118A  	fcall	_lcd_str
  2346  020B                     l2596:
  2347                           
  2348                           ;main.c: 164:         kpReferencia = kp;
  2349  020B  1683               	bsf	3,5	;RP0=1, select bank1
  2350  020C  1303               	bcf	3,6	;RP1=0, select bank1
  2351  020D  0856               	movf	(_kp+1)^(0+128),w
  2352  020E  00AF               	movwf	(_kpReferencia+1)^(0+128)
  2353  020F  0855               	movf	_kp^(0+128),w
  2354  0210  00AE               	movwf	_kpReferencia^(0+128)
  2355  0211                     l2598:
  2356                           
  2357                           ;main.c: 167:     if (ki != kiReferencia){
  2358  0211  082D               	movf	(_kiReferencia+1)^(0+128),w
  2359  0212  0654               	xorwf	(_ki+1)^(0+128),w
  2360  0213  1D03               	skipz
  2361  0214  2A17               	goto	u3695
  2362  0215  082C               	movf	_kiReferencia^(0+128),w
  2363  0216  0653               	xorwf	_ki^(0+128),w
  2364  0217                     u3695:
  2365  0217  1903               	skipnz
  2366  0218  2A1A               	goto	u3691
  2367  0219  2A1B               	goto	u3690
  2368  021A                     u3691:
  2369  021A  2A57               	goto	l2608
  2370  021B                     u3690:
  2371  021B                     l2600:
  2372                           
  2373                           ;main.c: 168:         lcd_cmd(0x89 +2);
  2374  021B  308B               	movlw	139
  2375  021C  160A  118A  2722  120A  118A  	fcall	_lcd_cmd
  2376  0221                     l2602:
  2377                           
  2378                           ;main.c: 169:         lcd_str("     ");
  2379  0221  3023               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2380  0222  00F2               	movwf	lcd_str@str
  2381  0223  3080               	movlw	128
  2382  0224  00F3               	movwf	lcd_str@str+1
  2383  0225  160A  118A  27A6  120A  118A  	fcall	_lcd_str
  2384  022A                     l2604:
  2385                           
  2386                           ;main.c: 170:         lcd_cmd(0x89 +2);
  2387  022A  308B               	movlw	139
  2388  022B  160A  118A  2722  120A  118A  	fcall	_lcd_cmd
  2389                           
  2390                           ;main.c: 171:         sprintf(string, "%d", ki);
  2391  0230  302F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2392  0231  1283               	bcf	3,5	;RP0=0, select bank0
  2393  0232  1303               	bcf	3,6	;RP1=0, select bank0
  2394  0233  00AD               	movwf	??_imprimirValoresLcd
  2395  0234  082D               	movf	??_imprimirValoresLcd,w
  2396  0235  00A0               	movwf	sprintf@f
  2397  0236  1683               	bsf	3,5	;RP0=1, select bank1
  2398  0237  1303               	bcf	3,6	;RP1=0, select bank1
  2399  0238  0854               	movf	(_ki+1)^(0+128),w
  2400  0239  1283               	bcf	3,5	;RP0=0, select bank0
  2401  023A  1303               	bcf	3,6	;RP1=0, select bank0
  2402  023B  00A2               	movwf	?_sprintf+2
  2403  023C  1683               	bsf	3,5	;RP0=1, select bank1
  2404  023D  1303               	bcf	3,6	;RP1=0, select bank1
  2405  023E  0853               	movf	_ki^(0+128),w
  2406  023F  1283               	bcf	3,5	;RP0=0, select bank0
  2407  0240  1303               	bcf	3,6	;RP1=0, select bank0
  2408  0241  00A1               	movwf	?_sprintf+1
  2409  0242  3090               	movlw	(low (_string| (0+256)))& (0+255)
  2410  0243  120A  118A  201A  120A  118A  	fcall	_sprintf
  2411                           
  2412                           ;main.c: 172:         lcd_str(string);
  2413  0248  3090               	movlw	(low (_string| (0+256)))& (0+255)
  2414  0249  00F2               	movwf	lcd_str@str
  2415  024A  3001               	movlw	1
  2416  024B  00F3               	movwf	lcd_str@str+1
  2417  024C  160A  118A  27A6  120A  118A  	fcall	_lcd_str
  2418  0251                     l2606:
  2419                           
  2420                           ;main.c: 173:         kiReferencia = ki;
  2421  0251  1683               	bsf	3,5	;RP0=1, select bank1
  2422  0252  1303               	bcf	3,6	;RP1=0, select bank1
  2423  0253  0854               	movf	(_ki+1)^(0+128),w
  2424  0254  00AD               	movwf	(_kiReferencia+1)^(0+128)
  2425  0255  0853               	movf	_ki^(0+128),w
  2426  0256  00AC               	movwf	_kiReferencia^(0+128)
  2427  0257                     l2608:
  2428                           
  2429                           ;main.c: 185:     if (PID != PIDReferencia){
  2430  0257  0829               	movf	(_PIDReferencia+1)^(0+128),w
  2431  0258  0621               	xorwf	(_PID+1)^(0+128),w
  2432  0259  1D03               	skipz
  2433  025A  2A5D               	goto	u3705
  2434  025B  0828               	movf	_PIDReferencia^(0+128),w
  2435  025C  0620               	xorwf	_PID^(0+128),w
  2436  025D                     u3705:
  2437  025D  1903               	skipnz
  2438  025E  2A60               	goto	u3701
  2439  025F  2A61               	goto	u3700
  2440  0260                     u3701:
  2441  0260  2A9D               	goto	l128
  2442  0261                     u3700:
  2443  0261                     l2610:
  2444                           
  2445                           ;main.c: 186:         lcd_cmd(0xC9 +2);
  2446  0261  30CB               	movlw	203
  2447  0262  160A  118A  2722  120A  118A  	fcall	_lcd_cmd
  2448  0267                     l2612:
  2449                           
  2450                           ;main.c: 187:         lcd_str("     ");
  2451  0267  3023               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2452  0268  00F2               	movwf	lcd_str@str
  2453  0269  3080               	movlw	128
  2454  026A  00F3               	movwf	lcd_str@str+1
  2455  026B  160A  118A  27A6  120A  118A  	fcall	_lcd_str
  2456  0270                     l2614:
  2457                           
  2458                           ;main.c: 188:         lcd_cmd(0xC9 +2);
  2459  0270  30CB               	movlw	203
  2460  0271  160A  118A  2722  120A  118A  	fcall	_lcd_cmd
  2461                           
  2462                           ;main.c: 189:         sprintf(string, "%d", PID);
  2463  0276  302F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2464  0277  1283               	bcf	3,5	;RP0=0, select bank0
  2465  0278  1303               	bcf	3,6	;RP1=0, select bank0
  2466  0279  00AD               	movwf	??_imprimirValoresLcd
  2467  027A  082D               	movf	??_imprimirValoresLcd,w
  2468  027B  00A0               	movwf	sprintf@f
  2469  027C  1683               	bsf	3,5	;RP0=1, select bank1
  2470  027D  1303               	bcf	3,6	;RP1=0, select bank1
  2471  027E  0821               	movf	(_PID+1)^(0+128),w
  2472  027F  1283               	bcf	3,5	;RP0=0, select bank0
  2473  0280  1303               	bcf	3,6	;RP1=0, select bank0
  2474  0281  00A2               	movwf	?_sprintf+2
  2475  0282  1683               	bsf	3,5	;RP0=1, select bank1
  2476  0283  1303               	bcf	3,6	;RP1=0, select bank1
  2477  0284  0820               	movf	_PID^(0+128),w
  2478  0285  1283               	bcf	3,5	;RP0=0, select bank0
  2479  0286  1303               	bcf	3,6	;RP1=0, select bank0
  2480  0287  00A1               	movwf	?_sprintf+1
  2481  0288  3090               	movlw	(low (_string| (0+256)))& (0+255)
  2482  0289  120A  118A  201A  120A  118A  	fcall	_sprintf
  2483                           
  2484                           ;main.c: 190:         lcd_str(string);
  2485  028E  3090               	movlw	(low (_string| (0+256)))& (0+255)
  2486  028F  00F2               	movwf	lcd_str@str
  2487  0290  3001               	movlw	1
  2488  0291  00F3               	movwf	lcd_str@str+1
  2489  0292  160A  118A  27A6  120A  118A  	fcall	_lcd_str
  2490  0297                     l2616:
  2491                           
  2492                           ;main.c: 191:         PIDReferencia = PID;
  2493  0297  1683               	bsf	3,5	;RP0=1, select bank1
  2494  0298  1303               	bcf	3,6	;RP1=0, select bank1
  2495  0299  0821               	movf	(_PID+1)^(0+128),w
  2496  029A  00A9               	movwf	(_PIDReferencia+1)^(0+128)
  2497  029B  0820               	movf	_PID^(0+128),w
  2498  029C  00A8               	movwf	_PIDReferencia^(0+128)
  2499  029D                     l128:
  2500  029D  0008               	return
  2501  029E                     __end_of_imprimirValoresLcd:
  2502                           
  2503                           	psect	text6
  2504  001A                     __ptext6:	
  2505 ;; *************** function _sprintf *****************
  2506 ;; Defined at:
  2507 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;  sp              1    wreg     PTR unsigned char 
  2510 ;;		 -> string(32), 
  2511 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  2512 ;;		 -> STR_9(3), STR_7(3), STR_5(3), STR_3(3), 
  2513 ;;		 -> STR_2(3), 
  2514 ;; Auto vars:     Size  Location     Type
  2515 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  2516 ;;		 -> string(32), 
  2517 ;;  tmpval          4    0        struct .
  2518 ;;  val             2    9[BANK0 ] unsigned int 
  2519 ;;  cp              2    0        PTR const unsigned char 
  2520 ;;  len             2    0        unsigned int 
  2521 ;;  c               1   12[BANK0 ] unsigned char 
  2522 ;;  prec            1    8[BANK0 ] char 
  2523 ;;  flag            1    7[BANK0 ] unsigned char 
  2524 ;;  ap              1    6[BANK0 ] PTR void [1]
  2525 ;;		 -> ?_sprintf(2), 
  2526 ;; Return value:  Size  Location     Type
  2527 ;;                  2    0[BANK0 ] int 
  2528 ;; Registers used:
  2529 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2530 ;; Tracked objects:
  2531 ;;		On entry : 0/0
  2532 ;;		On exit  : 0/0
  2533 ;;		Unchanged: 0/0
  2534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2535 ;;      Params:         0       3       0       0       0
  2536 ;;      Locals:         0       7       0       0       0
  2537 ;;      Temps:          0       3       0       0       0
  2538 ;;      Totals:         0      13       0       0       0
  2539 ;;Total ram usage:       13 bytes
  2540 ;; Hardware stack levels used: 1
  2541 ;; Hardware stack levels required when called: 1
  2542 ;; This function calls:
  2543 ;;		___lwdiv
  2544 ;;		___lwmod
  2545 ;; This function is called by:
  2546 ;;		_imprimirValoresLcd
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550                           
  2551                           ;psect for function _sprintf
  2552  001A                     _sprintf:
  2553                           
  2554                           ;incstack = 0
  2555                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2556                           ;sprintf@sp stored from wreg
  2557  001A  1283               	bcf	3,5	;RP0=0, select bank0
  2558  001B  1303               	bcf	3,6	;RP1=0, select bank0
  2559  001C  00AB               	movwf	sprintf@sp
  2560  001D                     l2300:
  2561                           
  2562                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  2563  001D  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2564  001E  00A3               	movwf	??_sprintf
  2565  001F  0823               	movf	??_sprintf,w
  2566  0020  00A6               	movwf	sprintf@ap
  2567                           
  2568                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2569  0021  28EB               	goto	l2352
  2570  0022                     l2302:
  2571                           
  2572                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2573  0022  3025               	movlw	37
  2574  0023  062C               	xorwf	sprintf@c,w
  2575  0024  1903               	btfsc	3,2
  2576  0025  2827               	goto	u3071
  2577  0026  2828               	goto	u3070
  2578  0027                     u3071:
  2579  0027  2834               	goto	l2308
  2580  0028                     u3070:
  2581  0028                     l2304:
  2582                           
  2583                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2584  0028  082C               	movf	sprintf@c,w
  2585  0029  00A3               	movwf	??_sprintf
  2586  002A  082B               	movf	sprintf@sp,w
  2587  002B  0084               	movwf	4
  2588  002C  0823               	movf	??_sprintf,w
  2589  002D  1783               	bsf	3,7	;select IRP bank2
  2590  002E  0080               	movwf	0
  2591  002F                     l2306:
  2592  002F  3001               	movlw	1
  2593  0030  00A3               	movwf	??_sprintf
  2594  0031  0823               	movf	??_sprintf,w
  2595  0032  07AB               	addwf	sprintf@sp,f
  2596                           
  2597                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 559:    continue;
  2598  0033  28EB               	goto	l2352
  2599  0034                     l2308:
  2600                           
  2601                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2602  0034  01A7               	clrf	sprintf@flag
  2603  0035                     l2312:	
  2604                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  2605                           
  2606  0035  3001               	movlw	1
  2607  0036  07A0               	addwf	sprintf@f,f
  2608  0037  30FF               	movlw	-1
  2609  0038  0720               	addwf	sprintf@f,w
  2610  0039  0084               	movwf	4
  2611  003A  120A  158A  200A  120A  118A  	fcall	stringdir
  2612  003F  00AC               	movwf	sprintf@c
  2613  0040  00A3               	movwf	??_sprintf
  2614  0041  01A4               	clrf	??_sprintf+1
  2615                           
  2616                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2617                           ; Switch size 1, requested type "simple"
  2618                           ; Number of cases is 1, Range of values is 0 to 0
  2619                           ; switch strategies available:
  2620                           ; Name         Instructions Cycles
  2621                           ; simple_byte            4     3 (average)
  2622                           ; direct_byte           11     8 (fixed)
  2623                           ; jumptable            260     6 (fixed)
  2624                           ;	Chosen strategy is simple_byte
  2625  0042  0824               	movf	??_sprintf+1,w
  2626  0043  3A00               	xorlw	0	; case 0
  2627  0044  1903               	skipnz
  2628  0045  2847               	goto	l2716
  2629  0046  28EB               	goto	l2352
  2630  0047                     l2716:
  2631                           
  2632                           ; Switch size 1, requested type "simple"
  2633                           ; Number of cases is 3, Range of values is 0 to 105
  2634                           ; switch strategies available:
  2635                           ; Name         Instructions Cycles
  2636                           ; simple_byte           10     6 (average)
  2637                           ; jumptable            260     6 (fixed)
  2638                           ;	Chosen strategy is simple_byte
  2639  0047  0823               	movf	??_sprintf,w
  2640  0048  3A00               	xorlw	0	; case 0
  2641  0049  1903               	skipnz
  2642  004A  28FD               	goto	l2354
  2643  004B  3A64               	xorlw	100	; case 100
  2644  004C  1903               	skipnz
  2645  004D  2852               	goto	l2314
  2646  004E  3A0D               	xorlw	13	; case 105
  2647  004F  1903               	skipnz
  2648  0050  2852               	goto	l2314
  2649  0051  28EB               	goto	l2352
  2650  0052                     l2314:
  2651                           
  2652                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2653  0052  0826               	movf	sprintf@ap,w
  2654  0053  0084               	movwf	4
  2655  0054  1383               	bcf	3,7	;select IRP bank0
  2656  0055  0800               	movf	0,w
  2657  0056  00A9               	movwf	sprintf@val
  2658  0057  0A84               	incf	4,f
  2659  0058  0800               	movf	0,w
  2660  0059  00AA               	movwf	sprintf@val+1
  2661  005A                     l2316:
  2662  005A  3002               	movlw	2
  2663  005B  00A3               	movwf	??_sprintf
  2664  005C  0823               	movf	??_sprintf,w
  2665  005D  07A6               	addwf	sprintf@ap,f
  2666  005E                     l2318:
  2667                           
  2668                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2669  005E  1FAA               	btfss	sprintf@val+1,7
  2670  005F  2861               	goto	u3081
  2671  0060  2862               	goto	u3080
  2672  0061                     u3081:
  2673  0061  286B               	goto	l2324
  2674  0062                     u3080:
  2675  0062                     l2320:
  2676                           
  2677                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2678  0062  3003               	movlw	3
  2679  0063  00A3               	movwf	??_sprintf
  2680  0064  0823               	movf	??_sprintf,w
  2681  0065  04A7               	iorwf	sprintf@flag,f
  2682  0066                     l2322:
  2683                           
  2684                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2685  0066  09A9               	comf	sprintf@val,f
  2686  0067  09AA               	comf	sprintf@val+1,f
  2687  0068  0AA9               	incf	sprintf@val,f
  2688  0069  1903               	skipnz
  2689  006A  0AAA               	incf	sprintf@val+1,f
  2690  006B                     l2324:
  2691                           
  2692                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2693  006B  01AC               	clrf	sprintf@c
  2694  006C  0AAC               	incf	sprintf@c,f
  2695  006D                     l2330:
  2696                           
  2697                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2698  006D  082C               	movf	sprintf@c,w
  2699  006E  00A3               	movwf	??_sprintf
  2700  006F  0723               	addwf	??_sprintf,w
  2701  0070  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2702  0071  0084               	movwf	4
  2703  0072  120A  158A  200A  120A  118A  	fcall	stringdir
  2704  0077  00A4               	movwf	??_sprintf+1
  2705  0078  120A  158A  200A  120A  118A  	fcall	stringdir
  2706  007D  00A5               	movwf	??_sprintf+2
  2707  007E  0825               	movf	??_sprintf+2,w
  2708  007F  022A               	subwf	sprintf@val+1,w
  2709  0080  1D03               	skipz
  2710  0081  2884               	goto	u3095
  2711  0082  0824               	movf	??_sprintf+1,w
  2712  0083  0229               	subwf	sprintf@val,w
  2713  0084                     u3095:
  2714  0084  1803               	skipnc
  2715  0085  2887               	goto	u3091
  2716  0086  2888               	goto	u3090
  2717  0087                     u3091:
  2718  0087  2889               	goto	l2334
  2719  0088                     u3090:
  2720  0088  2893               	goto	l2336
  2721  0089                     l2334:
  2722  0089  3001               	movlw	1
  2723  008A  00A3               	movwf	??_sprintf
  2724  008B  0823               	movf	??_sprintf,w
  2725  008C  07AC               	addwf	sprintf@c,f
  2726  008D  3005               	movlw	5
  2727  008E  062C               	xorwf	sprintf@c,w
  2728  008F  1D03               	btfss	3,2
  2729  0090  2892               	goto	u3101
  2730  0091  2893               	goto	u3100
  2731  0092                     u3101:
  2732  0092  286D               	goto	l2330
  2733  0093                     u3100:
  2734  0093                     l2336:
  2735                           
  2736                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2737  0093  0827               	movf	sprintf@flag,w
  2738  0094  3903               	andlw	3
  2739  0095  1903               	btfsc	3,2
  2740  0096  2898               	goto	u3111
  2741  0097  2899               	goto	u3110
  2742  0098                     u3111:
  2743  0098  28A4               	goto	l2342
  2744  0099                     u3110:
  2745  0099                     l2338:
  2746                           
  2747                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2748  0099  302D               	movlw	45
  2749  009A  00A3               	movwf	??_sprintf
  2750  009B  082B               	movf	sprintf@sp,w
  2751  009C  0084               	movwf	4
  2752  009D  0823               	movf	??_sprintf,w
  2753  009E  1783               	bsf	3,7	;select IRP bank2
  2754  009F  0080               	movwf	0
  2755  00A0                     l2340:
  2756  00A0  3001               	movlw	1
  2757  00A1  00A3               	movwf	??_sprintf
  2758  00A2  0823               	movf	??_sprintf,w
  2759  00A3  07AB               	addwf	sprintf@sp,f
  2760  00A4                     l2342:
  2761                           
  2762                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2763  00A4  082C               	movf	sprintf@c,w
  2764  00A5  00A3               	movwf	??_sprintf
  2765  00A6  0823               	movf	??_sprintf,w
  2766  00A7  00A8               	movwf	sprintf@prec
  2767                           
  2768                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2769  00A8  28E2               	goto	l2350
  2770  00A9                     l2344:
  2771                           
  2772                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2773  00A9  300A               	movlw	10
  2774  00AA  00F8               	movwf	___lwmod@divisor
  2775  00AB  3000               	movlw	0
  2776  00AC  00F9               	movwf	___lwmod@divisor+1
  2777  00AD  0828               	movf	sprintf@prec,w
  2778  00AE  00A3               	movwf	??_sprintf
  2779  00AF  0723               	addwf	??_sprintf,w
  2780  00B0  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2781  00B1  0084               	movwf	4
  2782  00B2  120A  158A  200A  120A  118A  	fcall	stringdir
  2783  00B7  00F0               	movwf	___lwdiv@divisor
  2784  00B8  120A  158A  200A  120A  118A  	fcall	stringdir
  2785  00BD  00F1               	movwf	___lwdiv@divisor+1
  2786  00BE  082A               	movf	sprintf@val+1,w
  2787  00BF  00F3               	movwf	___lwdiv@dividend+1
  2788  00C0  0829               	movf	sprintf@val,w
  2789  00C1  00F2               	movwf	___lwdiv@dividend
  2790  00C2  120A  158A  211F  120A  118A  	fcall	___lwdiv
  2791  00C7  0871               	movf	?___lwdiv+1,w
  2792  00C8  00FB               	movwf	___lwmod@dividend+1
  2793  00C9  0870               	movf	?___lwdiv,w
  2794  00CA  00FA               	movwf	___lwmod@dividend
  2795  00CB  120A  158A  20E5  120A  118A  	fcall	___lwmod
  2796  00D0  0878               	movf	?___lwmod,w
  2797  00D1  3E30               	addlw	48
  2798  00D2  1283               	bcf	3,5	;RP0=0, select bank0
  2799  00D3  1303               	bcf	3,6	;RP1=0, select bank0
  2800  00D4  00A4               	movwf	??_sprintf+1
  2801  00D5  0824               	movf	??_sprintf+1,w
  2802  00D6  00AC               	movwf	sprintf@c
  2803  00D7                     l2346:
  2804                           
  2805                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2806  00D7  082C               	movf	sprintf@c,w
  2807  00D8  00A3               	movwf	??_sprintf
  2808  00D9  082B               	movf	sprintf@sp,w
  2809  00DA  0084               	movwf	4
  2810  00DB  0823               	movf	??_sprintf,w
  2811  00DC  1783               	bsf	3,7	;select IRP bank2
  2812  00DD  0080               	movwf	0
  2813  00DE                     l2348:
  2814  00DE  3001               	movlw	1
  2815  00DF  00A3               	movwf	??_sprintf
  2816  00E0  0823               	movf	??_sprintf,w
  2817  00E1  07AB               	addwf	sprintf@sp,f
  2818  00E2                     l2350:
  2819                           
  2820                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2821  00E2  30FF               	movlw	255
  2822  00E3  00A3               	movwf	??_sprintf
  2823  00E4  0823               	movf	??_sprintf,w
  2824  00E5  07A8               	addwf	sprintf@prec,f
  2825  00E6  0A28               	incf	sprintf@prec,w
  2826  00E7  1D03               	btfss	3,2
  2827  00E8  28EA               	goto	u3121
  2828  00E9  28EB               	goto	u3120
  2829  00EA                     u3121:
  2830  00EA  28A9               	goto	l2344
  2831  00EB                     u3120:
  2832  00EB                     l2352:
  2833                           
  2834                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2835  00EB  3001               	movlw	1
  2836  00EC  07A0               	addwf	sprintf@f,f
  2837  00ED  30FF               	movlw	-1
  2838  00EE  0720               	addwf	sprintf@f,w
  2839  00EF  0084               	movwf	4
  2840  00F0  120A  158A  200A  120A  118A  	fcall	stringdir
  2841  00F5  00A3               	movwf	??_sprintf
  2842  00F6  0823               	movf	??_sprintf,w
  2843  00F7  00AC               	movwf	sprintf@c
  2844  00F8  082C               	movf	sprintf@c,w
  2845  00F9  1D03               	btfss	3,2
  2846  00FA  28FC               	goto	u3131
  2847  00FB  28FD               	goto	u3130
  2848  00FC                     u3131:
  2849  00FC  2822               	goto	l2302
  2850  00FD                     u3130:
  2851  00FD                     l2354:
  2852                           
  2853                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2854  00FD  082B               	movf	sprintf@sp,w
  2855  00FE  0084               	movwf	4
  2856  00FF  1783               	bsf	3,7	;select IRP bank2
  2857  0100  0180               	clrf	0
  2858  0101                     l354:
  2859  0101  0008               	return
  2860  0102                     __end_of_sprintf:
  2861                           
  2862                           	psect	text7
  2863  08E5                     __ptext7:	
  2864 ;; *************** function ___lwmod *****************
  2865 ;; Defined at:
  2866 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  2867 ;; Parameters:    Size  Location     Type
  2868 ;;  divisor         2    8[COMMON] unsigned int 
  2869 ;;  dividend        2   10[COMMON] unsigned int 
  2870 ;; Auto vars:     Size  Location     Type
  2871 ;;  counter         1   13[COMMON] unsigned char 
  2872 ;; Return value:  Size  Location     Type
  2873 ;;                  2    8[COMMON] unsigned int 
  2874 ;; Registers used:
  2875 ;;		wreg, status,2, status,0
  2876 ;; Tracked objects:
  2877 ;;		On entry : 0/0
  2878 ;;		On exit  : 0/0
  2879 ;;		Unchanged: 0/0
  2880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2881 ;;      Params:         4       0       0       0       0
  2882 ;;      Locals:         1       0       0       0       0
  2883 ;;      Temps:          1       0       0       0       0
  2884 ;;      Totals:         6       0       0       0       0
  2885 ;;Total ram usage:        6 bytes
  2886 ;; Hardware stack levels used: 1
  2887 ;; This function calls:
  2888 ;;		Nothing
  2889 ;; This function is called by:
  2890 ;;		_sprintf
  2891 ;; This function uses a non-reentrant model
  2892 ;;
  2893                           
  2894                           
  2895                           ;psect for function ___lwmod
  2896  08E5                     ___lwmod:
  2897  08E5                     l1922:	
  2898                           ;incstack = 0
  2899                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2900                           
  2901  08E5  0878               	movf	___lwmod@divisor,w
  2902  08E6  0479               	iorwf	___lwmod@divisor+1,w
  2903  08E7  1903               	btfsc	3,2
  2904  08E8  28EA               	goto	u2181
  2905  08E9  28EB               	goto	u2180
  2906  08EA                     u2181:
  2907  08EA  291A               	goto	l1940
  2908  08EB                     u2180:
  2909  08EB                     l1924:
  2910  08EB  01FD               	clrf	___lwmod@counter
  2911  08EC  0AFD               	incf	___lwmod@counter,f
  2912  08ED  28F9               	goto	l1930
  2913  08EE                     l1926:
  2914  08EE  3001               	movlw	1
  2915  08EF                     u2195:
  2916  08EF  1003               	clrc
  2917  08F0  0DF8               	rlf	___lwmod@divisor,f
  2918  08F1  0DF9               	rlf	___lwmod@divisor+1,f
  2919  08F2  3EFF               	addlw	-1
  2920  08F3  1D03               	skipz
  2921  08F4  28EF               	goto	u2195
  2922  08F5                     l1928:
  2923  08F5  3001               	movlw	1
  2924  08F6  00FC               	movwf	??___lwmod
  2925  08F7  087C               	movf	??___lwmod,w
  2926  08F8  07FD               	addwf	___lwmod@counter,f
  2927  08F9                     l1930:
  2928  08F9  1FF9               	btfss	___lwmod@divisor+1,7
  2929  08FA  28FC               	goto	u2201
  2930  08FB  28FD               	goto	u2200
  2931  08FC                     u2201:
  2932  08FC  28EE               	goto	l1926
  2933  08FD                     u2200:
  2934  08FD                     l1932:
  2935  08FD  0879               	movf	___lwmod@divisor+1,w
  2936  08FE  027B               	subwf	___lwmod@dividend+1,w
  2937  08FF  1D03               	skipz
  2938  0900  2903               	goto	u2215
  2939  0901  0878               	movf	___lwmod@divisor,w
  2940  0902  027A               	subwf	___lwmod@dividend,w
  2941  0903                     u2215:
  2942  0903  1C03               	skipc
  2943  0904  2906               	goto	u2211
  2944  0905  2907               	goto	u2210
  2945  0906                     u2211:
  2946  0906  290D               	goto	l1936
  2947  0907                     u2210:
  2948  0907                     l1934:
  2949  0907  0878               	movf	___lwmod@divisor,w
  2950  0908  02FA               	subwf	___lwmod@dividend,f
  2951  0909  0879               	movf	___lwmod@divisor+1,w
  2952  090A  1C03               	skipc
  2953  090B  03FB               	decf	___lwmod@dividend+1,f
  2954  090C  02FB               	subwf	___lwmod@dividend+1,f
  2955  090D                     l1936:
  2956  090D  3001               	movlw	1
  2957  090E                     u2225:
  2958  090E  1003               	clrc
  2959  090F  0CF9               	rrf	___lwmod@divisor+1,f
  2960  0910  0CF8               	rrf	___lwmod@divisor,f
  2961  0911  3EFF               	addlw	-1
  2962  0912  1D03               	skipz
  2963  0913  290E               	goto	u2225
  2964  0914                     l1938:
  2965  0914  3001               	movlw	1
  2966  0915  02FD               	subwf	___lwmod@counter,f
  2967  0916  1D03               	btfss	3,2
  2968  0917  2919               	goto	u2231
  2969  0918  291A               	goto	u2230
  2970  0919                     u2231:
  2971  0919  28FD               	goto	l1932
  2972  091A                     u2230:
  2973  091A                     l1940:
  2974  091A  087B               	movf	___lwmod@dividend+1,w
  2975  091B  00F9               	movwf	?___lwmod+1
  2976  091C  087A               	movf	___lwmod@dividend,w
  2977  091D  00F8               	movwf	?___lwmod
  2978  091E                     l640:
  2979  091E  0008               	return
  2980  091F                     __end_of___lwmod:
  2981                           
  2982                           	psect	text8
  2983  091F                     __ptext8:	
  2984 ;; *************** function ___lwdiv *****************
  2985 ;; Defined at:
  2986 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  2987 ;; Parameters:    Size  Location     Type
  2988 ;;  divisor         2    0[COMMON] unsigned int 
  2989 ;;  dividend        2    2[COMMON] unsigned int 
  2990 ;; Auto vars:     Size  Location     Type
  2991 ;;  quotient        2    5[COMMON] unsigned int 
  2992 ;;  counter         1    7[COMMON] unsigned char 
  2993 ;; Return value:  Size  Location     Type
  2994 ;;                  2    0[COMMON] unsigned int 
  2995 ;; Registers used:
  2996 ;;		wreg, status,2, status,0
  2997 ;; Tracked objects:
  2998 ;;		On entry : 0/0
  2999 ;;		On exit  : 0/0
  3000 ;;		Unchanged: 0/0
  3001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3002 ;;      Params:         4       0       0       0       0
  3003 ;;      Locals:         3       0       0       0       0
  3004 ;;      Temps:          1       0       0       0       0
  3005 ;;      Totals:         8       0       0       0       0
  3006 ;;Total ram usage:        8 bytes
  3007 ;; Hardware stack levels used: 1
  3008 ;; This function calls:
  3009 ;;		Nothing
  3010 ;; This function is called by:
  3011 ;;		_sprintf
  3012 ;; This function uses a non-reentrant model
  3013 ;;
  3014                           
  3015                           
  3016                           ;psect for function ___lwdiv
  3017  091F                     ___lwdiv:
  3018  091F                     l1896:	
  3019                           ;incstack = 0
  3020                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3021                           
  3022  091F  01F5               	clrf	___lwdiv@quotient
  3023  0920  01F6               	clrf	___lwdiv@quotient+1
  3024  0921                     l1898:
  3025  0921  0870               	movf	___lwdiv@divisor,w
  3026  0922  0471               	iorwf	___lwdiv@divisor+1,w
  3027  0923  1903               	btfsc	3,2
  3028  0924  2926               	goto	u2111
  3029  0925  2927               	goto	u2110
  3030  0926                     u2111:
  3031  0926  295E               	goto	l1918
  3032  0927                     u2110:
  3033  0927                     l1900:
  3034  0927  01F7               	clrf	___lwdiv@counter
  3035  0928  0AF7               	incf	___lwdiv@counter,f
  3036  0929  2935               	goto	l1906
  3037  092A                     l1902:
  3038  092A  3001               	movlw	1
  3039  092B                     u2125:
  3040  092B  1003               	clrc
  3041  092C  0DF0               	rlf	___lwdiv@divisor,f
  3042  092D  0DF1               	rlf	___lwdiv@divisor+1,f
  3043  092E  3EFF               	addlw	-1
  3044  092F  1D03               	skipz
  3045  0930  292B               	goto	u2125
  3046  0931                     l1904:
  3047  0931  3001               	movlw	1
  3048  0932  00F4               	movwf	??___lwdiv
  3049  0933  0874               	movf	??___lwdiv,w
  3050  0934  07F7               	addwf	___lwdiv@counter,f
  3051  0935                     l1906:
  3052  0935  1FF1               	btfss	___lwdiv@divisor+1,7
  3053  0936  2938               	goto	u2131
  3054  0937  2939               	goto	u2130
  3055  0938                     u2131:
  3056  0938  292A               	goto	l1902
  3057  0939                     u2130:
  3058  0939                     l1908:
  3059  0939  3001               	movlw	1
  3060  093A                     u2145:
  3061  093A  1003               	clrc
  3062  093B  0DF5               	rlf	___lwdiv@quotient,f
  3063  093C  0DF6               	rlf	___lwdiv@quotient+1,f
  3064  093D  3EFF               	addlw	-1
  3065  093E  1D03               	skipz
  3066  093F  293A               	goto	u2145
  3067  0940  0871               	movf	___lwdiv@divisor+1,w
  3068  0941  0273               	subwf	___lwdiv@dividend+1,w
  3069  0942  1D03               	skipz
  3070  0943  2946               	goto	u2155
  3071  0944  0870               	movf	___lwdiv@divisor,w
  3072  0945  0272               	subwf	___lwdiv@dividend,w
  3073  0946                     u2155:
  3074  0946  1C03               	skipc
  3075  0947  2949               	goto	u2151
  3076  0948  294A               	goto	u2150
  3077  0949                     u2151:
  3078  0949  2951               	goto	l1914
  3079  094A                     u2150:
  3080  094A                     l1910:
  3081  094A  0870               	movf	___lwdiv@divisor,w
  3082  094B  02F2               	subwf	___lwdiv@dividend,f
  3083  094C  0871               	movf	___lwdiv@divisor+1,w
  3084  094D  1C03               	skipc
  3085  094E  03F3               	decf	___lwdiv@dividend+1,f
  3086  094F  02F3               	subwf	___lwdiv@dividend+1,f
  3087  0950                     l1912:
  3088  0950  1475               	bsf	___lwdiv@quotient,0
  3089  0951                     l1914:
  3090  0951  3001               	movlw	1
  3091  0952                     u2165:
  3092  0952  1003               	clrc
  3093  0953  0CF1               	rrf	___lwdiv@divisor+1,f
  3094  0954  0CF0               	rrf	___lwdiv@divisor,f
  3095  0955  3EFF               	addlw	-1
  3096  0956  1D03               	skipz
  3097  0957  2952               	goto	u2165
  3098  0958                     l1916:
  3099  0958  3001               	movlw	1
  3100  0959  02F7               	subwf	___lwdiv@counter,f
  3101  095A  1D03               	btfss	3,2
  3102  095B  295D               	goto	u2171
  3103  095C  295E               	goto	u2170
  3104  095D                     u2171:
  3105  095D  2939               	goto	l1908
  3106  095E                     u2170:
  3107  095E                     l1918:
  3108  095E  0876               	movf	___lwdiv@quotient+1,w
  3109  095F  00F1               	movwf	?___lwdiv+1
  3110  0960  0875               	movf	___lwdiv@quotient,w
  3111  0961  00F0               	movwf	?___lwdiv
  3112  0962                     l630:
  3113  0962  0008               	return
  3114  0963                     __end_of___lwdiv:
  3115                           
  3116                           	psect	text9
  3117  17A6                     __ptext9:	
  3118 ;; *************** function _lcd_str *****************
  3119 ;; Defined at:
  3120 ;;		line 76 in file "lcd.c"
  3121 ;; Parameters:    Size  Location     Type
  3122 ;;  str             2    2[COMMON] PTR const unsigned char 
  3123 ;;		 -> STR_11(12), STR_10(12), STR_8(6), STR_6(6), 
  3124 ;;		 -> STR_4(6), string(32), STR_1(6), 
  3125 ;; Auto vars:     Size  Location     Type
  3126 ;;  i               1    5[COMMON] unsigned char 
  3127 ;; Return value:  Size  Location     Type
  3128 ;;                  1    wreg      void 
  3129 ;; Registers used:
  3130 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3131 ;; Tracked objects:
  3132 ;;		On entry : 0/0
  3133 ;;		On exit  : 0/0
  3134 ;;		Unchanged: 0/0
  3135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3136 ;;      Params:         2       0       0       0       0
  3137 ;;      Locals:         1       0       0       0       0
  3138 ;;      Temps:          1       0       0       0       0
  3139 ;;      Totals:         4       0       0       0       0
  3140 ;;Total ram usage:        4 bytes
  3141 ;; Hardware stack levels used: 1
  3142 ;; Hardware stack levels required when called: 2
  3143 ;; This function calls:
  3144 ;;		_lcd_dat
  3145 ;; This function is called by:
  3146 ;;		_imprimirValoresLcd
  3147 ;;		_main
  3148 ;; This function uses a non-reentrant model
  3149 ;;
  3150                           
  3151                           
  3152                           ;psect for function _lcd_str
  3153  17A6                     _lcd_str:
  3154  17A6                     l2292:	
  3155                           ;incstack = 0
  3156                           ; Regs used in _lcd_str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3157                           
  3158                           
  3159                           ;lcd.c: 76: void lcd_str(const char* str);lcd.c: 77: {;lcd.c: 78:  unsigned char i=0;
  3160  17A6  01F5               	clrf	lcd_str@i
  3161                           
  3162                           ;lcd.c: 80:  while(str[i] != 0 )
  3163  17A7  2FBD               	goto	l2298
  3164  17A8                     l2294:
  3165                           
  3166                           ;lcd.c: 81:  {;lcd.c: 82:    lcd_dat(str[i]);
  3167  17A8  0875               	movf	lcd_str@i,w
  3168  17A9  0772               	addwf	lcd_str@str,w
  3169  17AA  0084               	movwf	4
  3170  17AB  0873               	movf	lcd_str@str+1,w
  3171  17AC  1803               	skipnc
  3172  17AD  0A73               	incf	lcd_str@str+1,w
  3173  17AE  00FF               	movwf	btemp+1
  3174  17AF  120A  158A  2000  160A  118A  	fcall	stringtab
  3175  17B4  160A  118A  2732  160A  118A  	fcall	_lcd_dat
  3176  17B9                     l2296:
  3177                           
  3178                           ;lcd.c: 83:    i++;
  3179  17B9  3001               	movlw	1
  3180  17BA  00F4               	movwf	??_lcd_str
  3181  17BB  0874               	movf	??_lcd_str,w
  3182  17BC  07F5               	addwf	lcd_str@i,f
  3183  17BD                     l2298:
  3184                           
  3185                           ;lcd.c: 80:  while(str[i] != 0 )
  3186  17BD  0875               	movf	lcd_str@i,w
  3187  17BE  0772               	addwf	lcd_str@str,w
  3188  17BF  0084               	movwf	4
  3189  17C0  0873               	movf	lcd_str@str+1,w
  3190  17C1  1803               	skipnc
  3191  17C2  0A73               	incf	lcd_str@str+1,w
  3192  17C3  1283               	bcf	3,5	;RP0=0, select bank0
  3193  17C4  1303               	bcf	3,6	;RP1=0, select bank0
  3194  17C5  00FF               	movwf	btemp+1
  3195  17C6  120A  158A  2000  160A  118A  	fcall	stringtab
  3196  17CB  3A00               	xorlw	0
  3197  17CC  1D03               	skipz
  3198  17CD  2FCF               	goto	u3061
  3199  17CE  2FD0               	goto	u3060
  3200  17CF                     u3061:
  3201  17CF  2FA8               	goto	l2294
  3202  17D0                     u3060:
  3203  17D0                     l244:
  3204  17D0  0008               	return
  3205  17D1                     __end_of_lcd_str:
  3206                           
  3207                           	psect	text10
  3208  1732                     __ptext10:	
  3209 ;; *************** function _lcd_dat *****************
  3210 ;; Defined at:
  3211 ;;		line 46 in file "lcd.c"
  3212 ;; Parameters:    Size  Location     Type
  3213 ;;  val             1    wreg     unsigned char 
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;  val             1    1[COMMON] unsigned char 
  3216 ;; Return value:  Size  Location     Type
  3217 ;;                  1    wreg      void 
  3218 ;; Registers used:
  3219 ;;		wreg, status,2, status,0, pclath, cstack
  3220 ;; Tracked objects:
  3221 ;;		On entry : 0/0
  3222 ;;		On exit  : 0/0
  3223 ;;		Unchanged: 0/0
  3224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3225 ;;      Params:         0       0       0       0       0
  3226 ;;      Locals:         1       0       0       0       0
  3227 ;;      Temps:          0       0       0       0       0
  3228 ;;      Totals:         1       0       0       0       0
  3229 ;;Total ram usage:        1 bytes
  3230 ;; Hardware stack levels used: 1
  3231 ;; Hardware stack levels required when called: 1
  3232 ;; This function calls:
  3233 ;;		_lcd_wr
  3234 ;; This function is called by:
  3235 ;;		_lcd_str
  3236 ;; This function uses a non-reentrant model
  3237 ;;
  3238                           
  3239                           
  3240                           ;psect for function _lcd_dat
  3241  1732                     _lcd_dat:
  3242                           
  3243                           ;incstack = 0
  3244                           ; Regs used in _lcd_dat: [wreg+status,2+status,0+pclath+cstack]
  3245                           ;lcd_dat@val stored from wreg
  3246  1732  00F1               	movwf	lcd_dat@val
  3247  1733                     l1850:
  3248                           
  3249                           ;lcd.c: 46: void lcd_dat(unsigned char val);lcd.c: 47: {;lcd.c: 48:  PORTEbits.RE1=1;
  3250  1733  1283               	bcf	3,5	;RP0=0, select bank0
  3251  1734  1303               	bcf	3,6	;RP1=0, select bank0
  3252  1735  1489               	bsf	9,1	;volatile
  3253  1736                     l1852:
  3254                           
  3255                           ;lcd.c: 49:         lcd_wr(val);
  3256  1736  0871               	movf	lcd_dat@val,w
  3257  1737  160A  118A  26EF  160A  118A  	fcall	_lcd_wr
  3258  173C                     l1854:
  3259                           
  3260                           ;lcd.c: 50:         PORTEbits.RE0=1;
  3261  173C  1283               	bcf	3,5	;RP0=0, select bank0
  3262  173D  1303               	bcf	3,6	;RP1=0, select bank0
  3263  173E  1409               	bsf	9,0	;volatile
  3264  173F                     l1856:
  3265                           
  3266                           ;lcd.c: 52:         PORTEbits.RE1=0;
  3267  173F  1089               	bcf	9,1	;volatile
  3268  1740                     l1858:
  3269                           
  3270                           ;lcd.c: 54:  PORTEbits.RE1=1;
  3271  1740  1489               	bsf	9,1	;volatile
  3272  1741                     l235:
  3273  1741  0008               	return
  3274  1742                     __end_of_lcd_dat:
  3275                           
  3276                           	psect	text11
  3277  1722                     __ptext11:	
  3278 ;; *************** function _lcd_cmd *****************
  3279 ;; Defined at:
  3280 ;;		line 35 in file "lcd.c"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;  val             1    wreg     unsigned char 
  3283 ;; Auto vars:     Size  Location     Type
  3284 ;;  val             1    1[COMMON] unsigned char 
  3285 ;; Return value:  Size  Location     Type
  3286 ;;                  1    wreg      void 
  3287 ;; Registers used:
  3288 ;;		wreg, status,2, status,0, pclath, cstack
  3289 ;; Tracked objects:
  3290 ;;		On entry : 0/0
  3291 ;;		On exit  : 0/0
  3292 ;;		Unchanged: 0/0
  3293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3294 ;;      Params:         0       0       0       0       0
  3295 ;;      Locals:         1       0       0       0       0
  3296 ;;      Temps:          0       0       0       0       0
  3297 ;;      Totals:         1       0       0       0       0
  3298 ;;Total ram usage:        1 bytes
  3299 ;; Hardware stack levels used: 1
  3300 ;; Hardware stack levels required when called: 1
  3301 ;; This function calls:
  3302 ;;		_lcd_wr
  3303 ;; This function is called by:
  3304 ;;		_imprimirValoresLcd
  3305 ;;		_main
  3306 ;;		_lcd_init
  3307 ;; This function uses a non-reentrant model
  3308 ;;
  3309                           
  3310                           
  3311                           ;psect for function _lcd_cmd
  3312  1722                     _lcd_cmd:
  3313                           
  3314                           ;incstack = 0
  3315                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  3316                           ;lcd_cmd@val stored from wreg
  3317  1722  00F1               	movwf	lcd_cmd@val
  3318  1723                     l2282:
  3319                           
  3320                           ;lcd.c: 35: void lcd_cmd(unsigned char val);lcd.c: 36: {;lcd.c: 37:  PORTEbits.RE1=1;
  3321  1723  1283               	bcf	3,5	;RP0=0, select bank0
  3322  1724  1303               	bcf	3,6	;RP1=0, select bank0
  3323  1725  1489               	bsf	9,1	;volatile
  3324  1726                     l2284:
  3325                           
  3326                           ;lcd.c: 38:         lcd_wr(val);
  3327  1726  0871               	movf	lcd_cmd@val,w
  3328  1727  160A  118A  26EF  160A  118A  	fcall	_lcd_wr
  3329  172C                     l2286:
  3330                           
  3331                           ;lcd.c: 39:         PORTEbits.RE0=0;
  3332  172C  1283               	bcf	3,5	;RP0=0, select bank0
  3333  172D  1303               	bcf	3,6	;RP1=0, select bank0
  3334  172E  1009               	bcf	9,0	;volatile
  3335  172F                     l2288:
  3336                           
  3337                           ;lcd.c: 41:         PORTEbits.RE1=0;
  3338  172F  1089               	bcf	9,1	;volatile
  3339  1730                     l2290:
  3340                           
  3341                           ;lcd.c: 43:  PORTEbits.RE1=1;
  3342  1730  1489               	bsf	9,1	;volatile
  3343  1731                     l232:
  3344  1731  0008               	return
  3345  1732                     __end_of_lcd_cmd:
  3346                           
  3347                           	psect	text12
  3348  16EF                     __ptext12:	
  3349 ;; *************** function _lcd_wr *****************
  3350 ;; Defined at:
  3351 ;;		line 30 in file "lcd.c"
  3352 ;; Parameters:    Size  Location     Type
  3353 ;;  val             1    wreg     unsigned char 
  3354 ;; Auto vars:     Size  Location     Type
  3355 ;;  val             1    0[COMMON] unsigned char 
  3356 ;; Return value:  Size  Location     Type
  3357 ;;                  1    wreg      void 
  3358 ;; Registers used:
  3359 ;;		wreg
  3360 ;; Tracked objects:
  3361 ;;		On entry : 0/0
  3362 ;;		On exit  : 0/0
  3363 ;;		Unchanged: 0/0
  3364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3365 ;;      Params:         0       0       0       0       0
  3366 ;;      Locals:         1       0       0       0       0
  3367 ;;      Temps:          0       0       0       0       0
  3368 ;;      Totals:         1       0       0       0       0
  3369 ;;Total ram usage:        1 bytes
  3370 ;; Hardware stack levels used: 1
  3371 ;; This function calls:
  3372 ;;		Nothing
  3373 ;; This function is called by:
  3374 ;;		_lcd_cmd
  3375 ;;		_lcd_dat
  3376 ;; This function uses a non-reentrant model
  3377 ;;
  3378                           
  3379                           
  3380                           ;psect for function _lcd_wr
  3381  16EF                     _lcd_wr:
  3382                           
  3383                           ;incstack = 0
  3384                           ; Regs used in _lcd_wr: [wreg]
  3385                           ;lcd_wr@val stored from wreg
  3386  16EF  00F0               	movwf	lcd_wr@val
  3387  16F0                     l1792:
  3388                           
  3389                           ;lcd.c: 30: void lcd_wr(unsigned char val);lcd.c: 31: {;lcd.c: 32:   PORTD=val;
  3390  16F0  0870               	movf	lcd_wr@val,w
  3391  16F1  1283               	bcf	3,5	;RP0=0, select bank0
  3392  16F2  1303               	bcf	3,6	;RP1=0, select bank0
  3393  16F3  0088               	movwf	8	;volatile
  3394  16F4                     l229:
  3395  16F4  0008               	return
  3396  16F5                     __end_of_lcd_wr:
  3397                           
  3398                           	psect	text13
  3399  0963                     __ptext13:	
  3400 ;; *************** function ___awmod *****************
  3401 ;; Defined at:
  3402 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  3403 ;; Parameters:    Size  Location     Type
  3404 ;;  divisor         2    0[COMMON] int 
  3405 ;;  dividend        2    2[COMMON] int 
  3406 ;; Auto vars:     Size  Location     Type
  3407 ;;  sign            1    6[COMMON] unsigned char 
  3408 ;;  counter         1    5[COMMON] unsigned char 
  3409 ;; Return value:  Size  Location     Type
  3410 ;;                  2    0[COMMON] int 
  3411 ;; Registers used:
  3412 ;;		wreg, status,2, status,0
  3413 ;; Tracked objects:
  3414 ;;		On entry : 0/0
  3415 ;;		On exit  : 0/0
  3416 ;;		Unchanged: 0/0
  3417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3418 ;;      Params:         4       0       0       0       0
  3419 ;;      Locals:         2       0       0       0       0
  3420 ;;      Temps:          1       0       0       0       0
  3421 ;;      Totals:         7       0       0       0       0
  3422 ;;Total ram usage:        7 bytes
  3423 ;; Hardware stack levels used: 1
  3424 ;; This function calls:
  3425 ;;		Nothing
  3426 ;; This function is called by:
  3427 ;;		_imprimirValoresLcd
  3428 ;; This function uses a non-reentrant model
  3429 ;;
  3430                           
  3431                           
  3432                           ;psect for function ___awmod
  3433  0963                     ___awmod:
  3434  0963                     l2460:	
  3435                           ;incstack = 0
  3436                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3437                           
  3438  0963  01F6               	clrf	___awmod@sign
  3439  0964                     l2462:
  3440  0964  1FF3               	btfss	___awmod@dividend+1,7
  3441  0965  2967               	goto	u3391
  3442  0966  2968               	goto	u3390
  3443  0967                     u3391:
  3444  0967  296F               	goto	l2468
  3445  0968                     u3390:
  3446  0968                     l2464:
  3447  0968  09F2               	comf	___awmod@dividend,f
  3448  0969  09F3               	comf	___awmod@dividend+1,f
  3449  096A  0AF2               	incf	___awmod@dividend,f
  3450  096B  1903               	skipnz
  3451  096C  0AF3               	incf	___awmod@dividend+1,f
  3452  096D                     l2466:
  3453  096D  01F6               	clrf	___awmod@sign
  3454  096E  0AF6               	incf	___awmod@sign,f
  3455  096F                     l2468:
  3456  096F  1FF1               	btfss	___awmod@divisor+1,7
  3457  0970  2972               	goto	u3401
  3458  0971  2973               	goto	u3400
  3459  0972                     u3401:
  3460  0972  2978               	goto	l2472
  3461  0973                     u3400:
  3462  0973                     l2470:
  3463  0973  09F0               	comf	___awmod@divisor,f
  3464  0974  09F1               	comf	___awmod@divisor+1,f
  3465  0975  0AF0               	incf	___awmod@divisor,f
  3466  0976  1903               	skipnz
  3467  0977  0AF1               	incf	___awmod@divisor+1,f
  3468  0978                     l2472:
  3469  0978  0870               	movf	___awmod@divisor,w
  3470  0979  0471               	iorwf	___awmod@divisor+1,w
  3471  097A  1903               	btfsc	3,2
  3472  097B  297D               	goto	u3411
  3473  097C  297E               	goto	u3410
  3474  097D                     u3411:
  3475  097D  29AD               	goto	l2490
  3476  097E                     u3410:
  3477  097E                     l2474:
  3478  097E  01F5               	clrf	___awmod@counter
  3479  097F  0AF5               	incf	___awmod@counter,f
  3480  0980  298C               	goto	l2480
  3481  0981                     l2476:
  3482  0981  3001               	movlw	1
  3483  0982                     u3425:
  3484  0982  1003               	clrc
  3485  0983  0DF0               	rlf	___awmod@divisor,f
  3486  0984  0DF1               	rlf	___awmod@divisor+1,f
  3487  0985  3EFF               	addlw	-1
  3488  0986  1D03               	skipz
  3489  0987  2982               	goto	u3425
  3490  0988                     l2478:
  3491  0988  3001               	movlw	1
  3492  0989  00F4               	movwf	??___awmod
  3493  098A  0874               	movf	??___awmod,w
  3494  098B  07F5               	addwf	___awmod@counter,f
  3495  098C                     l2480:
  3496  098C  1FF1               	btfss	___awmod@divisor+1,7
  3497  098D  298F               	goto	u3431
  3498  098E  2990               	goto	u3430
  3499  098F                     u3431:
  3500  098F  2981               	goto	l2476
  3501  0990                     u3430:
  3502  0990                     l2482:
  3503  0990  0871               	movf	___awmod@divisor+1,w
  3504  0991  0273               	subwf	___awmod@dividend+1,w
  3505  0992  1D03               	skipz
  3506  0993  2996               	goto	u3445
  3507  0994  0870               	movf	___awmod@divisor,w
  3508  0995  0272               	subwf	___awmod@dividend,w
  3509  0996                     u3445:
  3510  0996  1C03               	skipc
  3511  0997  2999               	goto	u3441
  3512  0998  299A               	goto	u3440
  3513  0999                     u3441:
  3514  0999  29A0               	goto	l2486
  3515  099A                     u3440:
  3516  099A                     l2484:
  3517  099A  0870               	movf	___awmod@divisor,w
  3518  099B  02F2               	subwf	___awmod@dividend,f
  3519  099C  0871               	movf	___awmod@divisor+1,w
  3520  099D  1C03               	skipc
  3521  099E  03F3               	decf	___awmod@dividend+1,f
  3522  099F  02F3               	subwf	___awmod@dividend+1,f
  3523  09A0                     l2486:
  3524  09A0  3001               	movlw	1
  3525  09A1                     u3455:
  3526  09A1  1003               	clrc
  3527  09A2  0CF1               	rrf	___awmod@divisor+1,f
  3528  09A3  0CF0               	rrf	___awmod@divisor,f
  3529  09A4  3EFF               	addlw	-1
  3530  09A5  1D03               	skipz
  3531  09A6  29A1               	goto	u3455
  3532  09A7                     l2488:
  3533  09A7  3001               	movlw	1
  3534  09A8  02F5               	subwf	___awmod@counter,f
  3535  09A9  1D03               	btfss	3,2
  3536  09AA  29AC               	goto	u3461
  3537  09AB  29AD               	goto	u3460
  3538  09AC                     u3461:
  3539  09AC  2990               	goto	l2482
  3540  09AD                     u3460:
  3541  09AD                     l2490:
  3542  09AD  0876               	movf	___awmod@sign,w
  3543  09AE  1903               	btfsc	3,2
  3544  09AF  29B1               	goto	u3471
  3545  09B0  29B2               	goto	u3470
  3546  09B1                     u3471:
  3547  09B1  29B7               	goto	l2494
  3548  09B2                     u3470:
  3549  09B2                     l2492:
  3550  09B2  09F2               	comf	___awmod@dividend,f
  3551  09B3  09F3               	comf	___awmod@dividend+1,f
  3552  09B4  0AF2               	incf	___awmod@dividend,f
  3553  09B5  1903               	skipnz
  3554  09B6  0AF3               	incf	___awmod@dividend+1,f
  3555  09B7                     l2494:
  3556  09B7  0873               	movf	___awmod@dividend+1,w
  3557  09B8  00F1               	movwf	?___awmod+1
  3558  09B9  0872               	movf	___awmod@dividend,w
  3559  09BA  00F0               	movwf	?___awmod
  3560  09BB                     l524:
  3561  09BB  0008               	return
  3562  09BC                     __end_of___awmod:
  3563                           
  3564                           	psect	text14
  3565  09BC                     __ptext14:	
  3566 ;; *************** function ___awdiv *****************
  3567 ;; Defined at:
  3568 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  3569 ;; Parameters:    Size  Location     Type
  3570 ;;  divisor         2    7[COMMON] int 
  3571 ;;  dividend        2    9[COMMON] int 
  3572 ;; Auto vars:     Size  Location     Type
  3573 ;;  quotient        2    2[BANK0 ] int 
  3574 ;;  sign            1    1[BANK0 ] unsigned char 
  3575 ;;  counter         1    0[BANK0 ] unsigned char 
  3576 ;; Return value:  Size  Location     Type
  3577 ;;                  2    7[COMMON] int 
  3578 ;; Registers used:
  3579 ;;		wreg, status,2, status,0
  3580 ;; Tracked objects:
  3581 ;;		On entry : 0/0
  3582 ;;		On exit  : 0/0
  3583 ;;		Unchanged: 0/0
  3584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3585 ;;      Params:         4       0       0       0       0
  3586 ;;      Locals:         0       4       0       0       0
  3587 ;;      Temps:          1       0       0       0       0
  3588 ;;      Totals:         5       4       0       0       0
  3589 ;;Total ram usage:        9 bytes
  3590 ;; Hardware stack levels used: 1
  3591 ;; This function calls:
  3592 ;;		Nothing
  3593 ;; This function is called by:
  3594 ;;		_imprimirValoresLcd
  3595 ;;		_realizarCalculo
  3596 ;;		_realizarCalculo2
  3597 ;; This function uses a non-reentrant model
  3598 ;;
  3599                           
  3600                           
  3601                           ;psect for function ___awdiv
  3602  09BC                     ___awdiv:
  3603  09BC                     l2416:	
  3604                           ;incstack = 0
  3605                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3606                           
  3607  09BC  1283               	bcf	3,5	;RP0=0, select bank0
  3608  09BD  1303               	bcf	3,6	;RP1=0, select bank0
  3609  09BE  01A1               	clrf	___awdiv@sign
  3610  09BF                     l2418:
  3611  09BF  1FF8               	btfss	___awdiv@divisor+1,7
  3612  09C0  29C2               	goto	u3291
  3613  09C1  29C3               	goto	u3290
  3614  09C2                     u3291:
  3615  09C2  29CA               	goto	l2424
  3616  09C3                     u3290:
  3617  09C3                     l2420:
  3618  09C3  09F7               	comf	___awdiv@divisor,f
  3619  09C4  09F8               	comf	___awdiv@divisor+1,f
  3620  09C5  0AF7               	incf	___awdiv@divisor,f
  3621  09C6  1903               	skipnz
  3622  09C7  0AF8               	incf	___awdiv@divisor+1,f
  3623  09C8                     l2422:
  3624  09C8  01A1               	clrf	___awdiv@sign
  3625  09C9  0AA1               	incf	___awdiv@sign,f
  3626  09CA                     l2424:
  3627  09CA  1FFA               	btfss	___awdiv@dividend+1,7
  3628  09CB  29CD               	goto	u3301
  3629  09CC  29CE               	goto	u3300
  3630  09CD                     u3301:
  3631  09CD  29D7               	goto	l2430
  3632  09CE                     u3300:
  3633  09CE                     l2426:
  3634  09CE  09F9               	comf	___awdiv@dividend,f
  3635  09CF  09FA               	comf	___awdiv@dividend+1,f
  3636  09D0  0AF9               	incf	___awdiv@dividend,f
  3637  09D1  1903               	skipnz
  3638  09D2  0AFA               	incf	___awdiv@dividend+1,f
  3639  09D3                     l2428:
  3640  09D3  3001               	movlw	1
  3641  09D4  00FB               	movwf	??___awdiv
  3642  09D5  087B               	movf	??___awdiv,w
  3643  09D6  06A1               	xorwf	___awdiv@sign,f
  3644  09D7                     l2430:
  3645  09D7  01A2               	clrf	___awdiv@quotient
  3646  09D8  01A3               	clrf	___awdiv@quotient+1
  3647  09D9                     l2432:
  3648  09D9  0877               	movf	___awdiv@divisor,w
  3649  09DA  0478               	iorwf	___awdiv@divisor+1,w
  3650  09DB  1903               	btfsc	3,2
  3651  09DC  29DE               	goto	u3311
  3652  09DD  29DF               	goto	u3310
  3653  09DE                     u3311:
  3654  09DE  2A16               	goto	l2452
  3655  09DF                     u3310:
  3656  09DF                     l2434:
  3657  09DF  01A0               	clrf	___awdiv@counter
  3658  09E0  0AA0               	incf	___awdiv@counter,f
  3659  09E1  29ED               	goto	l2440
  3660  09E2                     l2436:
  3661  09E2  3001               	movlw	1
  3662  09E3                     u3325:
  3663  09E3  1003               	clrc
  3664  09E4  0DF7               	rlf	___awdiv@divisor,f
  3665  09E5  0DF8               	rlf	___awdiv@divisor+1,f
  3666  09E6  3EFF               	addlw	-1
  3667  09E7  1D03               	skipz
  3668  09E8  29E3               	goto	u3325
  3669  09E9                     l2438:
  3670  09E9  3001               	movlw	1
  3671  09EA  00FB               	movwf	??___awdiv
  3672  09EB  087B               	movf	??___awdiv,w
  3673  09EC  07A0               	addwf	___awdiv@counter,f
  3674  09ED                     l2440:
  3675  09ED  1FF8               	btfss	___awdiv@divisor+1,7
  3676  09EE  29F0               	goto	u3331
  3677  09EF  29F1               	goto	u3330
  3678  09F0                     u3331:
  3679  09F0  29E2               	goto	l2436
  3680  09F1                     u3330:
  3681  09F1                     l2442:
  3682  09F1  3001               	movlw	1
  3683  09F2                     u3345:
  3684  09F2  1003               	clrc
  3685  09F3  0DA2               	rlf	___awdiv@quotient,f
  3686  09F4  0DA3               	rlf	___awdiv@quotient+1,f
  3687  09F5  3EFF               	addlw	-1
  3688  09F6  1D03               	skipz
  3689  09F7  29F2               	goto	u3345
  3690  09F8  0878               	movf	___awdiv@divisor+1,w
  3691  09F9  027A               	subwf	___awdiv@dividend+1,w
  3692  09FA  1D03               	skipz
  3693  09FB  29FE               	goto	u3355
  3694  09FC  0877               	movf	___awdiv@divisor,w
  3695  09FD  0279               	subwf	___awdiv@dividend,w
  3696  09FE                     u3355:
  3697  09FE  1C03               	skipc
  3698  09FF  2A01               	goto	u3351
  3699  0A00  2A02               	goto	u3350
  3700  0A01                     u3351:
  3701  0A01  2A09               	goto	l2448
  3702  0A02                     u3350:
  3703  0A02                     l2444:
  3704  0A02  0877               	movf	___awdiv@divisor,w
  3705  0A03  02F9               	subwf	___awdiv@dividend,f
  3706  0A04  0878               	movf	___awdiv@divisor+1,w
  3707  0A05  1C03               	skipc
  3708  0A06  03FA               	decf	___awdiv@dividend+1,f
  3709  0A07  02FA               	subwf	___awdiv@dividend+1,f
  3710  0A08                     l2446:
  3711  0A08  1422               	bsf	___awdiv@quotient,0
  3712  0A09                     l2448:
  3713  0A09  3001               	movlw	1
  3714  0A0A                     u3365:
  3715  0A0A  1003               	clrc
  3716  0A0B  0CF8               	rrf	___awdiv@divisor+1,f
  3717  0A0C  0CF7               	rrf	___awdiv@divisor,f
  3718  0A0D  3EFF               	addlw	-1
  3719  0A0E  1D03               	skipz
  3720  0A0F  2A0A               	goto	u3365
  3721  0A10                     l2450:
  3722  0A10  3001               	movlw	1
  3723  0A11  02A0               	subwf	___awdiv@counter,f
  3724  0A12  1D03               	btfss	3,2
  3725  0A13  2A15               	goto	u3371
  3726  0A14  2A16               	goto	u3370
  3727  0A15                     u3371:
  3728  0A15  29F1               	goto	l2442
  3729  0A16                     u3370:
  3730  0A16                     l2452:
  3731  0A16  0821               	movf	___awdiv@sign,w
  3732  0A17  1903               	btfsc	3,2
  3733  0A18  2A1A               	goto	u3381
  3734  0A19  2A1B               	goto	u3380
  3735  0A1A                     u3381:
  3736  0A1A  2A20               	goto	l2456
  3737  0A1B                     u3380:
  3738  0A1B                     l2454:
  3739  0A1B  09A2               	comf	___awdiv@quotient,f
  3740  0A1C  09A3               	comf	___awdiv@quotient+1,f
  3741  0A1D  0AA2               	incf	___awdiv@quotient,f
  3742  0A1E  1903               	skipnz
  3743  0A1F  0AA3               	incf	___awdiv@quotient+1,f
  3744  0A20                     l2456:
  3745  0A20  0823               	movf	___awdiv@quotient+1,w
  3746  0A21  00F8               	movwf	?___awdiv+1
  3747  0A22  0822               	movf	___awdiv@quotient,w
  3748  0A23  00F7               	movwf	?___awdiv
  3749  0A24                     l511:
  3750  0A24  0008               	return
  3751  0A25                     __end_of___awdiv:
  3752                           
  3753                           	psect	text15
  3754  0E07                     __ptext15:	
  3755 ;; *************** function _controlarValores *****************
  3756 ;; Defined at:
  3757 ;;		line 44 in file "main.c"
  3758 ;; Parameters:    Size  Location     Type
  3759 ;;		None
  3760 ;; Auto vars:     Size  Location     Type
  3761 ;;		None
  3762 ;; Return value:  Size  Location     Type
  3763 ;;                  1    wreg      void 
  3764 ;; Registers used:
  3765 ;;		wreg, status,2, status,0
  3766 ;; Tracked objects:
  3767 ;;		On entry : 0/0
  3768 ;;		On exit  : 0/0
  3769 ;;		Unchanged: 0/0
  3770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3771 ;;      Params:         0       0       0       0       0
  3772 ;;      Locals:         0       0       0       0       0
  3773 ;;      Temps:          1       0       0       0       0
  3774 ;;      Totals:         1       0       0       0       0
  3775 ;;Total ram usage:        1 bytes
  3776 ;; Hardware stack levels used: 1
  3777 ;; This function calls:
  3778 ;;		Nothing
  3779 ;; This function is called by:
  3780 ;;		_main
  3781 ;; This function uses a non-reentrant model
  3782 ;;
  3783                           
  3784                           
  3785                           ;psect for function _controlarValores
  3786  0E07                     _controlarValores:
  3787  0E07                     l2498:	
  3788                           ;incstack = 0
  3789                           ; Regs used in _controlarValores: [wreg+status,2+status,0]
  3790                           
  3791                           
  3792                           ;main.c: 45:     static char S1Anterior;;main.c: 46:     static char S1Atual;;main.c: 47
      +                          :     static char S2Anterior;;main.c: 48:     static char S2Atual;;main.c: 49:     stati
      +                          c char S3Anterior;;main.c: 50:     static char S3Atual;;main.c: 51:     static char S4An
      +                          terior;;main.c: 52:     static char S4Atual;;main.c: 54:     S1Atual = RB0;
  3793  0E07  3000               	movlw	0
  3794  0E08  1283               	bcf	3,5	;RP0=0, select bank0
  3795  0E09  1303               	bcf	3,6	;RP1=0, select bank0
  3796  0E0A  1806               	btfsc	6,0	;volatile
  3797  0E0B  3001               	movlw	1
  3798  0E0C  1683               	bsf	3,5	;RP0=1, select bank1
  3799  0E0D  1303               	bcf	3,6	;RP1=0, select bank1
  3800  0E0E  00C6               	movwf	controlarValores@S1Atual^(0+128)
  3801  0E0F                     l2500:
  3802                           
  3803                           ;main.c: 56:     if((S1Atual)&&(!S1Anterior)){
  3804  0E0F  0846               	movf	controlarValores@S1Atual^(0+128),w
  3805  0E10  1903               	btfsc	3,2
  3806  0E11  2E13               	goto	u3481
  3807  0E12  2E14               	goto	u3480
  3808  0E13                     u3481:
  3809  0E13  2E4C               	goto	l99
  3810  0E14                     u3480:
  3811  0E14                     l2502:
  3812  0E14  0847               	movf	controlarValores@S1Anterior^(0+128),w
  3813  0E15  1D03               	btfss	3,2
  3814  0E16  2E18               	goto	u3491
  3815  0E17  2E19               	goto	u3490
  3816  0E18                     u3491:
  3817  0E18  2E4C               	goto	l99
  3818  0E19                     u3490:
  3819  0E19                     l2504:
  3820                           
  3821                           ;main.c: 57:         if (menu == 1){
  3822  0E19  033A               	decf	_menu^(0+128),w
  3823  0E1A  043B               	iorwf	(_menu+1)^(0+128),w
  3824  0E1B  1D03               	btfss	3,2
  3825  0E1C  2E1E               	goto	u3501
  3826  0E1D  2E1F               	goto	u3500
  3827  0E1E                     u3501:
  3828  0E1E  2E25               	goto	l2508
  3829  0E1F                     u3500:
  3830  0E1F                     l2506:
  3831                           
  3832                           ;main.c: 58:             setPoint += 100;
  3833  0E1F  3064               	movlw	100
  3834  0E20  07D7               	addwf	_setPoint^(0+128),f
  3835  0E21  1803               	skipnc
  3836  0E22  0AD8               	incf	(_setPoint+1)^(0+128),f
  3837  0E23  3000               	movlw	0
  3838  0E24  07D8               	addwf	(_setPoint+1)^(0+128),f
  3839  0E25                     l2508:
  3840                           
  3841                           ;main.c: 61:         if (menu == 2){
  3842  0E25  3002               	movlw	2
  3843  0E26  063A               	xorwf	_menu^(0+128),w
  3844  0E27  043B               	iorwf	(_menu+1)^(0+128),w
  3845  0E28  1D03               	btfss	3,2
  3846  0E29  2E2B               	goto	u3511
  3847  0E2A  2E2C               	goto	u3510
  3848  0E2B                     u3511:
  3849  0E2B  2E32               	goto	l2512
  3850  0E2C                     u3510:
  3851  0E2C                     l2510:
  3852                           
  3853                           ;main.c: 62:             kp += 10;
  3854  0E2C  300A               	movlw	10
  3855  0E2D  07D5               	addwf	_kp^(0+128),f
  3856  0E2E  1803               	skipnc
  3857  0E2F  0AD6               	incf	(_kp+1)^(0+128),f
  3858  0E30  3000               	movlw	0
  3859  0E31  07D6               	addwf	(_kp+1)^(0+128),f
  3860  0E32                     l2512:
  3861                           
  3862                           ;main.c: 65:         if (menu == 3){
  3863  0E32  3003               	movlw	3
  3864  0E33  063A               	xorwf	_menu^(0+128),w
  3865  0E34  043B               	iorwf	(_menu+1)^(0+128),w
  3866  0E35  1D03               	btfss	3,2
  3867  0E36  2E38               	goto	u3521
  3868  0E37  2E39               	goto	u3520
  3869  0E38                     u3521:
  3870  0E38  2E3F               	goto	l2516
  3871  0E39                     u3520:
  3872  0E39                     l2514:
  3873                           
  3874                           ;main.c: 66:             ki += 1;
  3875  0E39  3001               	movlw	1
  3876  0E3A  07D3               	addwf	_ki^(0+128),f
  3877  0E3B  1803               	skipnc
  3878  0E3C  0AD4               	incf	(_ki+1)^(0+128),f
  3879  0E3D  3000               	movlw	0
  3880  0E3E  07D4               	addwf	(_ki+1)^(0+128),f
  3881  0E3F                     l2516:
  3882                           
  3883                           ;main.c: 69:         if (menu == 4){
  3884  0E3F  3004               	movlw	4
  3885  0E40  063A               	xorwf	_menu^(0+128),w
  3886  0E41  043B               	iorwf	(_menu+1)^(0+128),w
  3887  0E42  1D03               	btfss	3,2
  3888  0E43  2E45               	goto	u3531
  3889  0E44  2E46               	goto	u3530
  3890  0E45                     u3531:
  3891  0E45  2E4C               	goto	l99
  3892  0E46                     u3530:
  3893  0E46                     l2518:
  3894                           
  3895                           ;main.c: 70:             kd += 1;
  3896  0E46  3001               	movlw	1
  3897  0E47  07B2               	addwf	_kd^(0+128),f
  3898  0E48  1803               	skipnc
  3899  0E49  0AB3               	incf	(_kd+1)^(0+128),f
  3900  0E4A  3000               	movlw	0
  3901  0E4B  07B3               	addwf	(_kd+1)^(0+128),f
  3902  0E4C                     l99:	
  3903                           ;main.c: 72:     }
  3904                           
  3905                           
  3906                           ;main.c: 74:     S1Anterior = S1Atual;
  3907  0E4C  0846               	movf	controlarValores@S1Atual^(0+128),w
  3908  0E4D  00F0               	movwf	??_controlarValores
  3909  0E4E  0870               	movf	??_controlarValores,w
  3910  0E4F  00C7               	movwf	controlarValores@S1Anterior^(0+128)
  3911  0E50                     l2520:
  3912                           
  3913                           ;main.c: 75:     S2Atual = RB1;
  3914  0E50  3000               	movlw	0
  3915  0E51  1283               	bcf	3,5	;RP0=0, select bank0
  3916  0E52  1303               	bcf	3,6	;RP1=0, select bank0
  3917  0E53  1886               	btfsc	6,1	;volatile
  3918  0E54  3001               	movlw	1
  3919  0E55  1683               	bsf	3,5	;RP0=1, select bank1
  3920  0E56  1303               	bcf	3,6	;RP1=0, select bank1
  3921  0E57  00C4               	movwf	controlarValores@S2Atual^(0+128)
  3922  0E58                     l2522:
  3923                           
  3924                           ;main.c: 77:     if((S2Atual)&&(!S2Anterior)){
  3925  0E58  0844               	movf	controlarValores@S2Atual^(0+128),w
  3926  0E59  1903               	btfsc	3,2
  3927  0E5A  2E5C               	goto	u3541
  3928  0E5B  2E5D               	goto	u3540
  3929  0E5C                     u3541:
  3930  0E5C  2E95               	goto	l104
  3931  0E5D                     u3540:
  3932  0E5D                     l2524:
  3933  0E5D  0845               	movf	controlarValores@S2Anterior^(0+128),w
  3934  0E5E  1D03               	btfss	3,2
  3935  0E5F  2E61               	goto	u3551
  3936  0E60  2E62               	goto	u3550
  3937  0E61                     u3551:
  3938  0E61  2E95               	goto	l104
  3939  0E62                     u3550:
  3940  0E62                     l2526:
  3941                           
  3942                           ;main.c: 78:         if (menu == 1){
  3943  0E62  033A               	decf	_menu^(0+128),w
  3944  0E63  043B               	iorwf	(_menu+1)^(0+128),w
  3945  0E64  1D03               	btfss	3,2
  3946  0E65  2E67               	goto	u3561
  3947  0E66  2E68               	goto	u3560
  3948  0E67                     u3561:
  3949  0E67  2E6E               	goto	l2530
  3950  0E68                     u3560:
  3951  0E68                     l2528:
  3952                           
  3953                           ;main.c: 79:             setPoint -= 100;
  3954  0E68  309C               	movlw	156
  3955  0E69  07D7               	addwf	_setPoint^(0+128),f
  3956  0E6A  1803               	skipnc
  3957  0E6B  0AD8               	incf	(_setPoint+1)^(0+128),f
  3958  0E6C  30FF               	movlw	255
  3959  0E6D  07D8               	addwf	(_setPoint+1)^(0+128),f
  3960  0E6E                     l2530:
  3961                           
  3962                           ;main.c: 82:         if (menu == 2){
  3963  0E6E  3002               	movlw	2
  3964  0E6F  063A               	xorwf	_menu^(0+128),w
  3965  0E70  043B               	iorwf	(_menu+1)^(0+128),w
  3966  0E71  1D03               	btfss	3,2
  3967  0E72  2E74               	goto	u3571
  3968  0E73  2E75               	goto	u3570
  3969  0E74                     u3571:
  3970  0E74  2E7B               	goto	l2534
  3971  0E75                     u3570:
  3972  0E75                     l2532:
  3973                           
  3974                           ;main.c: 83:             kp -= 10;
  3975  0E75  30F6               	movlw	246
  3976  0E76  07D5               	addwf	_kp^(0+128),f
  3977  0E77  1803               	skipnc
  3978  0E78  0AD6               	incf	(_kp+1)^(0+128),f
  3979  0E79  30FF               	movlw	255
  3980  0E7A  07D6               	addwf	(_kp+1)^(0+128),f
  3981  0E7B                     l2534:
  3982                           
  3983                           ;main.c: 86:         if (menu == 3){
  3984  0E7B  3003               	movlw	3
  3985  0E7C  063A               	xorwf	_menu^(0+128),w
  3986  0E7D  043B               	iorwf	(_menu+1)^(0+128),w
  3987  0E7E  1D03               	btfss	3,2
  3988  0E7F  2E81               	goto	u3581
  3989  0E80  2E82               	goto	u3580
  3990  0E81                     u3581:
  3991  0E81  2E88               	goto	l2538
  3992  0E82                     u3580:
  3993  0E82                     l2536:
  3994                           
  3995                           ;main.c: 87:             ki -= 1;
  3996  0E82  30FF               	movlw	255
  3997  0E83  07D3               	addwf	_ki^(0+128),f
  3998  0E84  1803               	skipnc
  3999  0E85  0AD4               	incf	(_ki+1)^(0+128),f
  4000  0E86  30FF               	movlw	255
  4001  0E87  07D4               	addwf	(_ki+1)^(0+128),f
  4002  0E88                     l2538:
  4003                           
  4004                           ;main.c: 90:         if (menu == 4){
  4005  0E88  3004               	movlw	4
  4006  0E89  063A               	xorwf	_menu^(0+128),w
  4007  0E8A  043B               	iorwf	(_menu+1)^(0+128),w
  4008  0E8B  1D03               	btfss	3,2
  4009  0E8C  2E8E               	goto	u3591
  4010  0E8D  2E8F               	goto	u3590
  4011  0E8E                     u3591:
  4012  0E8E  2E95               	goto	l104
  4013  0E8F                     u3590:
  4014  0E8F                     l2540:
  4015                           
  4016                           ;main.c: 91:             kd -= 1;
  4017  0E8F  30FF               	movlw	255
  4018  0E90  07B2               	addwf	_kd^(0+128),f
  4019  0E91  1803               	skipnc
  4020  0E92  0AB3               	incf	(_kd+1)^(0+128),f
  4021  0E93  30FF               	movlw	255
  4022  0E94  07B3               	addwf	(_kd+1)^(0+128),f
  4023  0E95                     l104:	
  4024                           ;main.c: 93:     }
  4025                           
  4026                           
  4027                           ;main.c: 95:     S2Anterior = S2Atual;
  4028  0E95  0844               	movf	controlarValores@S2Atual^(0+128),w
  4029  0E96  00F0               	movwf	??_controlarValores
  4030  0E97  0870               	movf	??_controlarValores,w
  4031  0E98  00C5               	movwf	controlarValores@S2Anterior^(0+128)
  4032  0E99                     l2542:
  4033                           
  4034                           ;main.c: 96:     S3Atual = RB2;
  4035  0E99  3000               	movlw	0
  4036  0E9A  1283               	bcf	3,5	;RP0=0, select bank0
  4037  0E9B  1303               	bcf	3,6	;RP1=0, select bank0
  4038  0E9C  1906               	btfsc	6,2	;volatile
  4039  0E9D  3001               	movlw	1
  4040  0E9E  1683               	bsf	3,5	;RP0=1, select bank1
  4041  0E9F  1303               	bcf	3,6	;RP1=0, select bank1
  4042  0EA0  00C2               	movwf	controlarValores@S3Atual^(0+128)
  4043  0EA1                     l2548:
  4044                           
  4045                           ;main.c: 101:     S3Anterior = S3Atual;
  4046  0EA1  0842               	movf	controlarValores@S3Atual^(0+128),w
  4047  0EA2  00F0               	movwf	??_controlarValores
  4048  0EA3  0870               	movf	??_controlarValores,w
  4049  0EA4  00C3               	movwf	controlarValores@S3Anterior^(0+128)
  4050  0EA5                     l2550:
  4051                           
  4052                           ;main.c: 103:     S4Atual = RB3;
  4053  0EA5  3000               	movlw	0
  4054  0EA6  1283               	bcf	3,5	;RP0=0, select bank0
  4055  0EA7  1303               	bcf	3,6	;RP1=0, select bank0
  4056  0EA8  1986               	btfsc	6,3	;volatile
  4057  0EA9  3001               	movlw	1
  4058  0EAA  1683               	bsf	3,5	;RP0=1, select bank1
  4059  0EAB  1303               	bcf	3,6	;RP1=0, select bank1
  4060  0EAC  00C0               	movwf	controlarValores@S4Atual^(0+128)
  4061  0EAD                     l2552:
  4062                           
  4063                           ;main.c: 104:     if((S4Atual)&&(!S4Anterior)){
  4064  0EAD  0840               	movf	controlarValores@S4Atual^(0+128),w
  4065  0EAE  1903               	btfsc	3,2
  4066  0EAF  2EB1               	goto	u3601
  4067  0EB0  2EB2               	goto	u3600
  4068  0EB1                     u3601:
  4069  0EB1  2EC8               	goto	l110
  4070  0EB2                     u3600:
  4071  0EB2                     l2554:
  4072  0EB2  0841               	movf	controlarValores@S4Anterior^(0+128),w
  4073  0EB3  1D03               	btfss	3,2
  4074  0EB4  2EB6               	goto	u3611
  4075  0EB5  2EB7               	goto	u3610
  4076  0EB6                     u3611:
  4077  0EB6  2EC8               	goto	l110
  4078  0EB7                     u3610:
  4079  0EB7                     l2556:
  4080                           
  4081                           ;main.c: 105:         menu += 1;
  4082  0EB7  3001               	movlw	1
  4083  0EB8  07BA               	addwf	_menu^(0+128),f
  4084  0EB9  1803               	skipnc
  4085  0EBA  0ABB               	incf	(_menu+1)^(0+128),f
  4086  0EBB  3000               	movlw	0
  4087  0EBC  07BB               	addwf	(_menu+1)^(0+128),f
  4088  0EBD                     l2558:
  4089                           
  4090                           ;main.c: 107:         if (menu == 5){
  4091  0EBD  3005               	movlw	5
  4092  0EBE  063A               	xorwf	_menu^(0+128),w
  4093  0EBF  043B               	iorwf	(_menu+1)^(0+128),w
  4094  0EC0  1D03               	btfss	3,2
  4095  0EC1  2EC3               	goto	u3621
  4096  0EC2  2EC4               	goto	u3620
  4097  0EC3                     u3621:
  4098  0EC3  2EC8               	goto	l110
  4099  0EC4                     u3620:
  4100  0EC4                     l2560:
  4101                           
  4102                           ;main.c: 108:             menu = 1;
  4103  0EC4  3001               	movlw	1
  4104  0EC5  00BA               	movwf	_menu^(0+128)
  4105  0EC6  3000               	movlw	0
  4106  0EC7  00BB               	movwf	(_menu^(0+128)+1)
  4107  0EC8                     l110:	
  4108                           ;main.c: 110:     }
  4109                           
  4110                           
  4111                           ;main.c: 111:     S4Anterior = S4Atual;
  4112  0EC8  0840               	movf	controlarValores@S4Atual^(0+128),w
  4113  0EC9  00F0               	movwf	??_controlarValores
  4114  0ECA  0870               	movf	??_controlarValores,w
  4115  0ECB  00C1               	movwf	controlarValores@S4Anterior^(0+128)
  4116  0ECC                     l112:
  4117  0ECC  0008               	return
  4118  0ECD                     __end_of_controlarValores:
  4119                           
  4120                           	psect	text16
  4121  17D1                     __ptext16:	
  4122 ;; *************** function _controlarCooler *****************
  4123 ;; Defined at:
  4124 ;;		line 225 in file "main.c"
  4125 ;; Parameters:    Size  Location     Type
  4126 ;;		None
  4127 ;; Auto vars:     Size  Location     Type
  4128 ;;  cooler          2    7[BANK1 ] int 
  4129 ;; Return value:  Size  Location     Type
  4130 ;;                  1    wreg      void 
  4131 ;; Registers used:
  4132 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4133 ;; Tracked objects:
  4134 ;;		On entry : 0/0
  4135 ;;		On exit  : 0/0
  4136 ;;		Unchanged: 0/0
  4137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4138 ;;      Params:         0       0       0       0       0
  4139 ;;      Locals:         0       0       2       0       0
  4140 ;;      Temps:          0       0       0       0       0
  4141 ;;      Totals:         0       0       2       0       0
  4142 ;;Total ram usage:        2 bytes
  4143 ;; Hardware stack levels used: 1
  4144 ;; Hardware stack levels required when called: 3
  4145 ;; This function calls:
  4146 ;;		_ADC_Read
  4147 ;;		_PWM2_Duty
  4148 ;;		_controleMaximoMinimo
  4149 ;; This function is called by:
  4150 ;;		_main
  4151 ;; This function uses a non-reentrant model
  4152 ;;
  4153                           
  4154                           
  4155                           ;psect for function _controlarCooler
  4156  17D1                     _controlarCooler:
  4157  17D1                     l2632:	
  4158                           ;incstack = 0
  4159                           ; Regs used in _controlarCooler: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4160                           
  4161                           
  4162                           ;main.c: 227:     int cooler = (unsigned int)ADC_Read(1);
  4163  17D1  3001               	movlw	1
  4164  17D2  120A  158A  2044  160A  118A  	fcall	_ADC_Read
  4165  17D7  0871               	movf	?_ADC_Read+1,w
  4166  17D8  1683               	bsf	3,5	;RP0=1, select bank1
  4167  17D9  1303               	bcf	3,6	;RP1=0, select bank1
  4168  17DA  00D0               	movwf	(controlarCooler@cooler+1)^(0+128)
  4169  17DB  0870               	movf	?_ADC_Read,w
  4170  17DC  00CF               	movwf	controlarCooler@cooler^(0+128)
  4171  17DD                     l2634:
  4172                           
  4173                           ;main.c: 228:     cooler = controleMaximoMinimo(cooler);
  4174  17DD  0850               	movf	(controlarCooler@cooler+1)^(0+128),w
  4175  17DE  00F1               	movwf	controleMaximoMinimo@valor+1
  4176  17DF  084F               	movf	controlarCooler@cooler^(0+128),w
  4177  17E0  00F0               	movwf	controleMaximoMinimo@valor
  4178  17E1  160A  118A  2742  160A  118A  	fcall	_controleMaximoMinimo
  4179  17E6  0871               	movf	?_controleMaximoMinimo+1,w
  4180  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  4181  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  4182  17E9  00D0               	movwf	(controlarCooler@cooler+1)^(0+128)
  4183  17EA  0870               	movf	?_controleMaximoMinimo,w
  4184  17EB  00CF               	movwf	controlarCooler@cooler^(0+128)
  4185  17EC                     l2636:
  4186                           
  4187                           ;main.c: 229:     PWM2_Duty(cooler, 4000);
  4188  17EC  0850               	movf	(controlarCooler@cooler+1)^(0+128),w
  4189  17ED  1283               	bcf	3,5	;RP0=0, select bank0
  4190  17EE  1303               	bcf	3,6	;RP1=0, select bank0
  4191  17EF  00ED               	movwf	PWM2_Duty@duty+1
  4192  17F0  1683               	bsf	3,5	;RP0=1, select bank1
  4193  17F1  1303               	bcf	3,6	;RP1=0, select bank1
  4194  17F2  084F               	movf	controlarCooler@cooler^(0+128),w
  4195  17F3  1283               	bcf	3,5	;RP0=0, select bank0
  4196  17F4  1303               	bcf	3,6	;RP1=0, select bank0
  4197  17F5  00EC               	movwf	PWM2_Duty@duty
  4198  17F6  30A0               	movlw	160
  4199  17F7  00EE               	movwf	PWM2_Duty@freq
  4200  17F8  300F               	movlw	15
  4201  17F9  00EF               	movwf	PWM2_Duty@freq+1
  4202  17FA  120A  158A  23DF  160A  118A  	fcall	_PWM2_Duty
  4203  17FF                     l137:
  4204  17FF  0008               	return
  4205  1800                     __end_of_controlarCooler:
  4206                           
  4207                           	psect	text17
  4208  1742                     __ptext17:	
  4209 ;; *************** function _controleMaximoMinimo *****************
  4210 ;; Defined at:
  4211 ;;		line 114 in file "main.c"
  4212 ;; Parameters:    Size  Location     Type
  4213 ;;  valor           2    0[COMMON] int 
  4214 ;; Auto vars:     Size  Location     Type
  4215 ;;		None
  4216 ;; Return value:  Size  Location     Type
  4217 ;;                  2    0[COMMON] int 
  4218 ;; Registers used:
  4219 ;;		wreg, status,2, btemp+1
  4220 ;; Tracked objects:
  4221 ;;		On entry : 0/0
  4222 ;;		On exit  : 0/0
  4223 ;;		Unchanged: 0/0
  4224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4225 ;;      Params:         2       0       0       0       0
  4226 ;;      Locals:         0       0       0       0       0
  4227 ;;      Temps:          0       0       0       0       0
  4228 ;;      Totals:         2       0       0       0       0
  4229 ;;Total ram usage:        2 bytes
  4230 ;; Hardware stack levels used: 1
  4231 ;; This function calls:
  4232 ;;		Nothing
  4233 ;; This function is called by:
  4234 ;;		_realizarCalculo
  4235 ;;		_controlarCooler
  4236 ;;		_main
  4237 ;;		_realizarCalculo2
  4238 ;; This function uses a non-reentrant model
  4239 ;;
  4240                           
  4241                           
  4242                           ;psect for function _controleMaximoMinimo
  4243  1742                     _controleMaximoMinimo:
  4244  1742                     l2270:	
  4245                           ;incstack = 0
  4246                           ; Regs used in _controleMaximoMinimo: [wreg+status,2+btemp+1]
  4247                           
  4248                           
  4249                           ;main.c: 115:     if (valor < 0){
  4250  1742  1FF1               	btfss	controleMaximoMinimo@valor+1,7
  4251  1743  2F45               	goto	u3041
  4252  1744  2F46               	goto	u3040
  4253  1745                     u3041:
  4254  1745  2F48               	goto	l2274
  4255  1746                     u3040:
  4256  1746                     l2272:
  4257                           
  4258                           ;main.c: 116:         valor = 0;
  4259  1746  01F0               	clrf	controleMaximoMinimo@valor
  4260  1747  01F1               	clrf	controleMaximoMinimo@valor+1
  4261  1748                     l2274:
  4262                           
  4263                           ;main.c: 119:     if (valor > 1023){
  4264  1748  0871               	movf	controleMaximoMinimo@valor+1,w
  4265  1749  3A80               	xorlw	128
  4266  174A  00FF               	movwf	btemp+1
  4267  174B  3084               	movlw	132
  4268  174C  027F               	subwf	btemp+1,w
  4269  174D  1D03               	skipz
  4270  174E  2F51               	goto	u3055
  4271  174F  3000               	movlw	0
  4272  1750  0270               	subwf	controleMaximoMinimo@valor,w
  4273  1751                     u3055:
  4274  1751  1C03               	skipc
  4275  1752  2F54               	goto	u3051
  4276  1753  2F55               	goto	u3050
  4277  1754                     u3051:
  4278  1754  2F59               	goto	l2278
  4279  1755                     u3050:
  4280  1755                     l2276:
  4281                           
  4282                           ;main.c: 120:         valor = 1023;
  4283  1755  30FF               	movlw	255
  4284  1756  00F0               	movwf	controleMaximoMinimo@valor
  4285  1757  3003               	movlw	3
  4286  1758  00F1               	movwf	controleMaximoMinimo@valor+1
  4287  1759                     l2278:
  4288  1759                     l117:	
  4289                           ;main.c: 123:     return valor;
  4290                           
  4291  1759  0008               	return
  4292  175A                     __end_of_controleMaximoMinimo:
  4293                           
  4294                           	psect	text18
  4295  0BDF                     __ptext18:	
  4296 ;; *************** function _PWM2_Duty *****************
  4297 ;; Defined at:
  4298 ;;		line 29 in file "PWM.c"
  4299 ;; Parameters:    Size  Location     Type
  4300 ;;  duty            2   76[BANK0 ] unsigned int 
  4301 ;;  freq            2   78[BANK0 ] unsigned int 
  4302 ;; Auto vars:     Size  Location     Type
  4303 ;;		None
  4304 ;; Return value:  Size  Location     Type
  4305 ;;                  1    wreg      void 
  4306 ;; Registers used:
  4307 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4308 ;; Tracked objects:
  4309 ;;		On entry : 0/0
  4310 ;;		On exit  : 0/0
  4311 ;;		Unchanged: 0/0
  4312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4313 ;;      Params:         0       4       0       0       0
  4314 ;;      Locals:         0       0       0       0       0
  4315 ;;      Temps:          0       0       2       0       0
  4316 ;;      Totals:         0       4       2       0       0
  4317 ;;Total ram usage:        6 bytes
  4318 ;; Hardware stack levels used: 1
  4319 ;; Hardware stack levels required when called: 2
  4320 ;; This function calls:
  4321 ;;		_PWM_Init
  4322 ;;		___aldiv
  4323 ;;		___fldiv
  4324 ;;		___flmul
  4325 ;;		___fltol
  4326 ;;		___xxtofl
  4327 ;; This function is called by:
  4328 ;;		_controlarCooler
  4329 ;; This function uses a non-reentrant model
  4330 ;;
  4331                           
  4332                           
  4333                           ;psect for function _PWM2_Duty
  4334  0BDF                     _PWM2_Duty:
  4335  0BDF                     l2390:	
  4336                           ;incstack = 0
  4337                           ; Regs used in _PWM2_Duty: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4338                           
  4339                           
  4340                           ;PWM.c: 29: void PWM2_Duty(unsigned int duty, unsigned int freq);PWM.c: 30: {;PWM.c: 31:
      +                             PWM_Init(freq);
  4341  0BDF  1283               	bcf	3,5	;RP0=0, select bank0
  4342  0BE0  1303               	bcf	3,6	;RP1=0, select bank0
  4343  0BE1  086E               	movf	PWM2_Duty@freq,w
  4344  0BE2  00A6               	movwf	PWM_Init@freq
  4345  0BE3  086F               	movf	PWM2_Duty@freq+1,w
  4346  0BE4  00A7               	movwf	PWM_Init@freq+1
  4347  0BE5  01A8               	clrf	PWM_Init@freq+2
  4348  0BE6  01A9               	clrf	PWM_Init@freq+3
  4349  0BE7  120A  158A  20AE  120A  158A  	fcall	_PWM_Init
  4350  0BEC                     l2392:
  4351                           
  4352                           ;PWM.c: 32:   if(duty<1024)
  4353  0BEC  3004               	movlw	4
  4354  0BED  1283               	bcf	3,5	;RP0=0, select bank0
  4355  0BEE  1303               	bcf	3,6	;RP1=0, select bank0
  4356  0BEF  026D               	subwf	PWM2_Duty@duty+1,w
  4357  0BF0  3000               	movlw	0
  4358  0BF1  1903               	skipnz
  4359  0BF2  026C               	subwf	PWM2_Duty@duty,w
  4360  0BF3  1803               	skipnc
  4361  0BF4  2BF6               	goto	u3211
  4362  0BF5  2BF7               	goto	u3210
  4363  0BF6                     u3211:
  4364  0BF6  2C94               	goto	l188
  4365  0BF7                     u3210:
  4366  0BF7                     l2394:
  4367                           
  4368                           ;PWM.c: 33:   {;PWM.c: 34:     duty = ((float)duty/1023.0)*(4000000/(freq*4));
  4369  0BF7  086C               	movf	PWM2_Duty@duty,w
  4370  0BF8  00A6               	movwf	___xxtofl@val
  4371  0BF9  086D               	movf	PWM2_Duty@duty+1,w
  4372  0BFA  00A7               	movwf	___xxtofl@val+1
  4373  0BFB  01A8               	clrf	___xxtofl@val+2
  4374  0BFC  01A9               	clrf	___xxtofl@val+3
  4375  0BFD  3000               	movlw	0
  4376  0BFE  120A  158A  254B  120A  158A  	fcall	___xxtofl
  4377  0C03  1283               	bcf	3,5	;RP0=0, select bank0
  4378  0C04  1303               	bcf	3,6	;RP1=0, select bank0
  4379  0C05  0829               	movf	?___xxtofl+3,w
  4380  0C06  00BB               	movwf	___fldiv@b+3
  4381  0C07  0828               	movf	?___xxtofl+2,w
  4382  0C08  00BA               	movwf	___fldiv@b+2
  4383  0C09  0827               	movf	?___xxtofl+1,w
  4384  0C0A  00B9               	movwf	___fldiv@b+1
  4385  0C0B  0826               	movf	?___xxtofl,w
  4386  0C0C  00B8               	movwf	___fldiv@b
  4387  0C0D  3044               	movlw	68
  4388  0C0E  00B7               	movwf	___fldiv@a+3
  4389  0C0F  307F               	movlw	127
  4390  0C10  00B6               	movwf	___fldiv@a+2
  4391  0C11  30C0               	movlw	192
  4392  0C12  00B5               	movwf	___fldiv@a+1
  4393  0C13  3000               	movlw	0
  4394  0C14  00B4               	movwf	___fldiv@a
  4395  0C15  120A  118A  229E  120A  158A  	fcall	___fldiv
  4396  0C1A  1283               	bcf	3,5	;RP0=0, select bank0
  4397  0C1B  1303               	bcf	3,6	;RP1=0, select bank0
  4398  0C1C  0837               	movf	?___fldiv+3,w
  4399  0C1D  00D5               	movwf	___flmul@a+3
  4400  0C1E  0836               	movf	?___fldiv+2,w
  4401  0C1F  00D4               	movwf	___flmul@a+2
  4402  0C20  0835               	movf	?___fldiv+1,w
  4403  0C21  00D3               	movwf	___flmul@a+1
  4404  0C22  0834               	movf	?___fldiv,w
  4405  0C23  00D2               	movwf	___flmul@a
  4406  0C24  3000               	movlw	0
  4407  0C25  00F7               	movwf	___aldiv@dividend+3
  4408  0C26  303D               	movlw	61
  4409  0C27  00F6               	movwf	___aldiv@dividend+2
  4410  0C28  3009               	movlw	9
  4411  0C29  00F5               	movwf	___aldiv@dividend+1
  4412  0C2A  3000               	movlw	0
  4413  0C2B  00F4               	movwf	___aldiv@dividend
  4414  0C2C  086F               	movf	PWM2_Duty@freq+1,w
  4415  0C2D  1683               	bsf	3,5	;RP0=1, select bank1
  4416  0C2E  1303               	bcf	3,6	;RP1=0, select bank1
  4417  0C2F  00CE               	movwf	(??_PWM2_Duty^(0+128)+1)
  4418  0C30  1283               	bcf	3,5	;RP0=0, select bank0
  4419  0C31  1303               	bcf	3,6	;RP1=0, select bank0
  4420  0C32  086E               	movf	PWM2_Duty@freq,w
  4421  0C33  1683               	bsf	3,5	;RP0=1, select bank1
  4422  0C34  1303               	bcf	3,6	;RP1=0, select bank1
  4423  0C35  00CD               	movwf	??_PWM2_Duty^(0+128)
  4424  0C36  1003               	clrc
  4425  0C37  0DCD               	rlf	??_PWM2_Duty^(0+128),f
  4426  0C38  0DCE               	rlf	(??_PWM2_Duty^(0+128)+1),f
  4427  0C39  1003               	clrc
  4428  0C3A  0DCD               	rlf	??_PWM2_Duty^(0+128),f
  4429  0C3B  0DCE               	rlf	(??_PWM2_Duty^(0+128)+1),f
  4430  0C3C  084D               	movf	??_PWM2_Duty^(0+128),w
  4431  0C3D  00F0               	movwf	___aldiv@divisor
  4432  0C3E  084E               	movf	(??_PWM2_Duty+1)^(0+128),w
  4433  0C3F  00F1               	movwf	___aldiv@divisor+1
  4434  0C40  01F2               	clrf	___aldiv@divisor+2
  4435  0C41  01F3               	clrf	___aldiv@divisor+3
  4436  0C42  120A  158A  2342  120A  158A  	fcall	___aldiv
  4437  0C47  0873               	movf	?___aldiv+3,w
  4438  0C48  1283               	bcf	3,5	;RP0=0, select bank0
  4439  0C49  1303               	bcf	3,6	;RP1=0, select bank0
  4440  0C4A  00A9               	movwf	___xxtofl@val+3
  4441  0C4B  0872               	movf	?___aldiv+2,w
  4442  0C4C  00A8               	movwf	___xxtofl@val+2
  4443  0C4D  0871               	movf	?___aldiv+1,w
  4444  0C4E  00A7               	movwf	___xxtofl@val+1
  4445  0C4F  0870               	movf	?___aldiv,w
  4446  0C50  00A6               	movwf	___xxtofl@val
  4447  0C51  3001               	movlw	1
  4448  0C52  120A  158A  254B  120A  158A  	fcall	___xxtofl
  4449  0C57  1283               	bcf	3,5	;RP0=0, select bank0
  4450  0C58  1303               	bcf	3,6	;RP1=0, select bank0
  4451  0C59  0829               	movf	?___xxtofl+3,w
  4452  0C5A  00D1               	movwf	___flmul@b+3
  4453  0C5B  0828               	movf	?___xxtofl+2,w
  4454  0C5C  00D0               	movwf	___flmul@b+2
  4455  0C5D  0827               	movf	?___xxtofl+1,w
  4456  0C5E  00CF               	movwf	___flmul@b+1
  4457  0C5F  0826               	movf	?___xxtofl,w
  4458  0C60  00CE               	movwf	___flmul@b
  4459  0C61  120A  118A  247B  120A  158A  	fcall	___flmul
  4460  0C66  1283               	bcf	3,5	;RP0=0, select bank0
  4461  0C67  1303               	bcf	3,6	;RP1=0, select bank0
  4462  0C68  0851               	movf	?___flmul+3,w
  4463  0C69  00EB               	movwf	___fltol@f1+3
  4464  0C6A  0850               	movf	?___flmul+2,w
  4465  0C6B  00EA               	movwf	___fltol@f1+2
  4466  0C6C  084F               	movf	?___flmul+1,w
  4467  0C6D  00E9               	movwf	___fltol@f1+1
  4468  0C6E  084E               	movf	?___flmul,w
  4469  0C6F  00E8               	movwf	___fltol@f1
  4470  0C70  120A  158A  22A7  120A  158A  	fcall	___fltol
  4471  0C75  1283               	bcf	3,5	;RP0=0, select bank0
  4472  0C76  1303               	bcf	3,6	;RP1=0, select bank0
  4473  0C77  0869               	movf	?___fltol+1,w
  4474  0C78  00ED               	movwf	PWM2_Duty@duty+1
  4475  0C79  0868               	movf	?___fltol,w
  4476  0C7A  00EC               	movwf	PWM2_Duty@duty
  4477  0C7B                     l2396:
  4478                           
  4479                           ;PWM.c: 35:     CCP2X = duty & 0b00000010;;
  4480  0C7B  129D               	bcf	29,5	;volatile
  4481  0C7C                     l2398:
  4482                           
  4483                           ;PWM.c: 36:     CCP2Y = duty & 0b00000001;;
  4484  0C7C  186C               	btfsc	PWM2_Duty@duty,0
  4485  0C7D  2C7F               	goto	u3221
  4486  0C7E  2C83               	goto	u3220
  4487  0C7F                     u3221:
  4488  0C7F  1283               	bcf	3,5	;RP0=0, select bank0
  4489  0C80  1303               	bcf	3,6	;RP1=0, select bank0
  4490  0C81  161D               	bsf	29,4	;volatile
  4491  0C82  2C86               	goto	u3234
  4492  0C83                     u3220:
  4493  0C83  1283               	bcf	3,5	;RP0=0, select bank0
  4494  0C84  1303               	bcf	3,6	;RP1=0, select bank0
  4495  0C85  121D               	bcf	29,4	;volatile
  4496  0C86                     u3234:
  4497  0C86                     l2400:
  4498                           
  4499                           ;PWM.c: 37:     CCPR2L = (unsigned char)duty>>2;
  4500  0C86  086C               	movf	PWM2_Duty@duty,w
  4501  0C87  1683               	bsf	3,5	;RP0=1, select bank1
  4502  0C88  1303               	bcf	3,6	;RP1=0, select bank1
  4503  0C89  00CD               	movwf	??_PWM2_Duty^(0+128)
  4504  0C8A  3002               	movlw	2
  4505  0C8B                     u3245:
  4506  0C8B  1003               	clrc
  4507  0C8C  0CCD               	rrf	??_PWM2_Duty^(0+128),f
  4508  0C8D  3EFF               	addlw	-1
  4509  0C8E  1D03               	skipz
  4510  0C8F  2C8B               	goto	u3245
  4511  0C90  084D               	movf	??_PWM2_Duty^(0+128),w
  4512  0C91  1283               	bcf	3,5	;RP0=0, select bank0
  4513  0C92  1303               	bcf	3,6	;RP1=0, select bank0
  4514  0C93  009B               	movwf	27	;volatile
  4515  0C94                     l188:
  4516  0C94  0008               	return
  4517  0C95                     __end_of_PWM2_Duty:
  4518                           
  4519                           	psect	text19
  4520  0D4B                     __ptext19:	
  4521 ;; *************** function ___xxtofl *****************
  4522 ;; Defined at:
  4523 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\xxtofl.c"
  4524 ;; Parameters:    Size  Location     Type
  4525 ;;  sign            1    wreg     unsigned char 
  4526 ;;  val             4    6[BANK0 ] long 
  4527 ;; Auto vars:     Size  Location     Type
  4528 ;;  sign            1   14[BANK0 ] unsigned char 
  4529 ;;  arg             4   16[BANK0 ] unsigned long 
  4530 ;;  exp             1   15[BANK0 ] unsigned char 
  4531 ;; Return value:  Size  Location     Type
  4532 ;;                  4    6[BANK0 ] unsigned char 
  4533 ;; Registers used:
  4534 ;;		wreg, status,2, status,0
  4535 ;; Tracked objects:
  4536 ;;		On entry : 0/0
  4537 ;;		On exit  : 0/0
  4538 ;;		Unchanged: 0/0
  4539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4540 ;;      Params:         0       4       0       0       0
  4541 ;;      Locals:         0       6       0       0       0
  4542 ;;      Temps:          0       4       0       0       0
  4543 ;;      Totals:         0      14       0       0       0
  4544 ;;Total ram usage:       14 bytes
  4545 ;; Hardware stack levels used: 1
  4546 ;; This function calls:
  4547 ;;		Nothing
  4548 ;; This function is called by:
  4549 ;;		_realizarCalculo
  4550 ;;		_PWM1_Duty
  4551 ;;		_PWM2_Duty
  4552 ;; This function uses a non-reentrant model
  4553 ;;
  4554                           
  4555                           
  4556                           ;psect for function ___xxtofl
  4557  0D4B                     ___xxtofl:
  4558                           
  4559                           ;incstack = 0
  4560                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4561                           ;___xxtofl@sign stored from wreg
  4562  0D4B  1283               	bcf	3,5	;RP0=0, select bank0
  4563  0D4C  1303               	bcf	3,6	;RP1=0, select bank0
  4564  0D4D  00AE               	movwf	___xxtofl@sign
  4565  0D4E                     l2226:
  4566  0D4E  082E               	movf	___xxtofl@sign,w
  4567  0D4F  1903               	btfsc	3,2
  4568  0D50  2D52               	goto	u2901
  4569  0D51  2D53               	goto	u2900
  4570  0D52                     u2901:
  4571  0D52  2D67               	goto	l2232
  4572  0D53                     u2900:
  4573  0D53                     l2228:
  4574  0D53  1FA9               	btfss	___xxtofl@val+3,7
  4575  0D54  2D56               	goto	u2911
  4576  0D55  2D57               	goto	u2910
  4577  0D56                     u2911:
  4578  0D56  2D67               	goto	l2232
  4579  0D57                     u2910:
  4580  0D57                     l2230:
  4581  0D57  0926               	comf	___xxtofl@val,w
  4582  0D58  00B0               	movwf	___xxtofl@arg
  4583  0D59  0927               	comf	___xxtofl@val+1,w
  4584  0D5A  00B1               	movwf	___xxtofl@arg+1
  4585  0D5B  0928               	comf	___xxtofl@val+2,w
  4586  0D5C  00B2               	movwf	___xxtofl@arg+2
  4587  0D5D  0929               	comf	___xxtofl@val+3,w
  4588  0D5E  00B3               	movwf	___xxtofl@arg+3
  4589  0D5F  0AB0               	incf	___xxtofl@arg,f
  4590  0D60  1903               	skipnz
  4591  0D61  0AB1               	incf	___xxtofl@arg+1,f
  4592  0D62  1903               	skipnz
  4593  0D63  0AB2               	incf	___xxtofl@arg+2,f
  4594  0D64  1903               	skipnz
  4595  0D65  0AB3               	incf	___xxtofl@arg+3,f
  4596  0D66  2D6F               	goto	l791
  4597  0D67                     l2232:
  4598  0D67  0829               	movf	___xxtofl@val+3,w
  4599  0D68  00B3               	movwf	___xxtofl@arg+3
  4600  0D69  0828               	movf	___xxtofl@val+2,w
  4601  0D6A  00B2               	movwf	___xxtofl@arg+2
  4602  0D6B  0827               	movf	___xxtofl@val+1,w
  4603  0D6C  00B1               	movwf	___xxtofl@arg+1
  4604  0D6D  0826               	movf	___xxtofl@val,w
  4605  0D6E  00B0               	movwf	___xxtofl@arg
  4606  0D6F                     l791:
  4607  0D6F  0829               	movf	___xxtofl@val+3,w
  4608  0D70  0428               	iorwf	___xxtofl@val+2,w
  4609  0D71  0427               	iorwf	___xxtofl@val+1,w
  4610  0D72  0426               	iorwf	___xxtofl@val,w
  4611  0D73  1D03               	skipz
  4612  0D74  2D76               	goto	u2921
  4613  0D75  2D77               	goto	u2920
  4614  0D76                     u2921:
  4615  0D76  2D80               	goto	l2238
  4616  0D77                     u2920:
  4617  0D77                     l2234:
  4618  0D77  3000               	movlw	0
  4619  0D78  00A9               	movwf	?___xxtofl+3
  4620  0D79  3000               	movlw	0
  4621  0D7A  00A8               	movwf	?___xxtofl+2
  4622  0D7B  3000               	movlw	0
  4623  0D7C  00A7               	movwf	?___xxtofl+1
  4624  0D7D  3000               	movlw	0
  4625  0D7E  00A6               	movwf	?___xxtofl
  4626  0D7F  2E06               	goto	l793
  4627  0D80                     l2238:
  4628  0D80  3096               	movlw	150
  4629  0D81  00AA               	movwf	??___xxtofl
  4630  0D82  082A               	movf	??___xxtofl,w
  4631  0D83  00AF               	movwf	___xxtofl@exp
  4632  0D84  2D92               	goto	l2242
  4633  0D85                     l2240:
  4634  0D85  3001               	movlw	1
  4635  0D86  00AA               	movwf	??___xxtofl
  4636  0D87  082A               	movf	??___xxtofl,w
  4637  0D88  07AF               	addwf	___xxtofl@exp,f
  4638  0D89  3001               	movlw	1
  4639  0D8A                     u2935:
  4640  0D8A  1003               	clrc
  4641  0D8B  0CB3               	rrf	___xxtofl@arg+3,f
  4642  0D8C  0CB2               	rrf	___xxtofl@arg+2,f
  4643  0D8D  0CB1               	rrf	___xxtofl@arg+1,f
  4644  0D8E  0CB0               	rrf	___xxtofl@arg,f
  4645  0D8F  3EFF               	addlw	-1
  4646  0D90  1D03               	skipz
  4647  0D91  2D8A               	goto	u2935
  4648  0D92                     l2242:
  4649  0D92  30FE               	movlw	254
  4650  0D93  0533               	andwf	___xxtofl@arg+3,w
  4651  0D94  1D03               	btfss	3,2
  4652  0D95  2D97               	goto	u2941
  4653  0D96  2D98               	goto	u2940
  4654  0D97                     u2941:
  4655  0D97  2D85               	goto	l2240
  4656  0D98                     u2940:
  4657  0D98  2DB4               	goto	l797
  4658  0D99                     l2244:
  4659  0D99  3001               	movlw	1
  4660  0D9A  00AA               	movwf	??___xxtofl
  4661  0D9B  082A               	movf	??___xxtofl,w
  4662  0D9C  07AF               	addwf	___xxtofl@exp,f
  4663  0D9D                     l2246:
  4664  0D9D  3001               	movlw	1
  4665  0D9E  07B0               	addwf	___xxtofl@arg,f
  4666  0D9F  3000               	movlw	0
  4667  0DA0  1803               	skipnc
  4668  0DA1  3001               	movlw	1
  4669  0DA2  07B1               	addwf	___xxtofl@arg+1,f
  4670  0DA3  3000               	movlw	0
  4671  0DA4  1803               	skipnc
  4672  0DA5  3001               	movlw	1
  4673  0DA6  07B2               	addwf	___xxtofl@arg+2,f
  4674  0DA7  3000               	movlw	0
  4675  0DA8  1803               	skipnc
  4676  0DA9  3001               	movlw	1
  4677  0DAA  07B3               	addwf	___xxtofl@arg+3,f
  4678  0DAB                     l2248:
  4679  0DAB  3001               	movlw	1
  4680  0DAC                     u2955:
  4681  0DAC  1003               	clrc
  4682  0DAD  0CB3               	rrf	___xxtofl@arg+3,f
  4683  0DAE  0CB2               	rrf	___xxtofl@arg+2,f
  4684  0DAF  0CB1               	rrf	___xxtofl@arg+1,f
  4685  0DB0  0CB0               	rrf	___xxtofl@arg,f
  4686  0DB1  3EFF               	addlw	-1
  4687  0DB2  1D03               	skipz
  4688  0DB3  2DAC               	goto	u2955
  4689  0DB4                     l797:
  4690  0DB4  30FF               	movlw	255
  4691  0DB5  0533               	andwf	___xxtofl@arg+3,w
  4692  0DB6  1D03               	btfss	3,2
  4693  0DB7  2DB9               	goto	u2961
  4694  0DB8  2DBA               	goto	u2960
  4695  0DB9                     u2961:
  4696  0DB9  2D99               	goto	l2244
  4697  0DBA                     u2960:
  4698  0DBA  2DC6               	goto	l2252
  4699  0DBB                     l2250:
  4700  0DBB  3001               	movlw	1
  4701  0DBC  02AF               	subwf	___xxtofl@exp,f
  4702  0DBD  3001               	movlw	1
  4703  0DBE  00AA               	movwf	??___xxtofl
  4704  0DBF                     u2975:
  4705  0DBF  1003               	clrc
  4706  0DC0  0DB0               	rlf	___xxtofl@arg,f
  4707  0DC1  0DB1               	rlf	___xxtofl@arg+1,f
  4708  0DC2  0DB2               	rlf	___xxtofl@arg+2,f
  4709  0DC3  0DB3               	rlf	___xxtofl@arg+3,f
  4710  0DC4  0BAA               	decfsz	??___xxtofl,f
  4711  0DC5  2DBF               	goto	u2975
  4712  0DC6                     l2252:
  4713  0DC6  1BB2               	btfsc	___xxtofl@arg+2,7
  4714  0DC7  2DC9               	goto	u2981
  4715  0DC8  2DCA               	goto	u2980
  4716  0DC9                     u2981:
  4717  0DC9  2DD0               	goto	l804
  4718  0DCA                     u2980:
  4719  0DCA                     l2254:
  4720  0DCA  3002               	movlw	2
  4721  0DCB  022F               	subwf	___xxtofl@exp,w
  4722  0DCC  1803               	skipnc
  4723  0DCD  2DCF               	goto	u2991
  4724  0DCE  2DD0               	goto	u2990
  4725  0DCF                     u2991:
  4726  0DCF  2DBB               	goto	l2250
  4727  0DD0                     u2990:
  4728  0DD0                     l804:
  4729  0DD0  182F               	btfsc	___xxtofl@exp,0
  4730  0DD1  2DD3               	goto	u3001
  4731  0DD2  2DD4               	goto	u3000
  4732  0DD3                     u3001:
  4733  0DD3  2DDC               	goto	l805
  4734  0DD4                     u3000:
  4735  0DD4                     l2256:
  4736  0DD4  30FF               	movlw	255
  4737  0DD5  05B0               	andwf	___xxtofl@arg,f
  4738  0DD6  30FF               	movlw	255
  4739  0DD7  05B1               	andwf	___xxtofl@arg+1,f
  4740  0DD8  307F               	movlw	127
  4741  0DD9  05B2               	andwf	___xxtofl@arg+2,f
  4742  0DDA  30FF               	movlw	255
  4743  0DDB  05B3               	andwf	___xxtofl@arg+3,f
  4744  0DDC                     l805:
  4745  0DDC  1003               	clrc
  4746  0DDD  0CAF               	rrf	___xxtofl@exp,f
  4747  0DDE                     l2258:
  4748  0DDE  082F               	movf	___xxtofl@exp,w
  4749  0DDF  00AA               	movwf	??___xxtofl
  4750  0DE0  01AB               	clrf	??___xxtofl+1
  4751  0DE1  01AC               	clrf	??___xxtofl+2
  4752  0DE2  01AD               	clrf	??___xxtofl+3
  4753  0DE3  3018               	movlw	24
  4754  0DE4                     u3015:
  4755  0DE4  1003               	clrc
  4756  0DE5  0DAA               	rlf	??___xxtofl,f
  4757  0DE6  0DAB               	rlf	??___xxtofl+1,f
  4758  0DE7  0DAC               	rlf	??___xxtofl+2,f
  4759  0DE8  0DAD               	rlf	??___xxtofl+3,f
  4760  0DE9                     u3010:
  4761  0DE9  3EFF               	addlw	-1
  4762  0DEA  1D03               	skipz
  4763  0DEB  2DE4               	goto	u3015
  4764  0DEC  082A               	movf	??___xxtofl,w
  4765  0DED  04B0               	iorwf	___xxtofl@arg,f
  4766  0DEE  082B               	movf	??___xxtofl+1,w
  4767  0DEF  04B1               	iorwf	___xxtofl@arg+1,f
  4768  0DF0  082C               	movf	??___xxtofl+2,w
  4769  0DF1  04B2               	iorwf	___xxtofl@arg+2,f
  4770  0DF2  082D               	movf	??___xxtofl+3,w
  4771  0DF3  04B3               	iorwf	___xxtofl@arg+3,f
  4772  0DF4                     l2260:
  4773  0DF4  082E               	movf	___xxtofl@sign,w
  4774  0DF5  1903               	btfsc	3,2
  4775  0DF6  2DF8               	goto	u3021
  4776  0DF7  2DF9               	goto	u3020
  4777  0DF8                     u3021:
  4778  0DF8  2DFE               	goto	l2266
  4779  0DF9                     u3020:
  4780  0DF9                     l2262:
  4781  0DF9  1FA9               	btfss	___xxtofl@val+3,7
  4782  0DFA  2DFC               	goto	u3031
  4783  0DFB  2DFD               	goto	u3030
  4784  0DFC                     u3031:
  4785  0DFC  2DFE               	goto	l2266
  4786  0DFD                     u3030:
  4787  0DFD                     l2264:
  4788  0DFD  17B3               	bsf	___xxtofl@arg+3,7
  4789  0DFE                     l2266:
  4790  0DFE  0833               	movf	___xxtofl@arg+3,w
  4791  0DFF  00A9               	movwf	?___xxtofl+3
  4792  0E00  0832               	movf	___xxtofl@arg+2,w
  4793  0E01  00A8               	movwf	?___xxtofl+2
  4794  0E02  0831               	movf	___xxtofl@arg+1,w
  4795  0E03  00A7               	movwf	?___xxtofl+1
  4796  0E04  0830               	movf	___xxtofl@arg,w
  4797  0E05  00A6               	movwf	?___xxtofl
  4798  0E06                     l793:
  4799  0E06  0008               	return
  4800  0E07                     __end_of___xxtofl:
  4801                           
  4802                           	psect	text20
  4803  0AA7                     __ptext20:	
  4804 ;; *************** function ___fltol *****************
  4805 ;; Defined at:
  4806 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fltol.c"
  4807 ;; Parameters:    Size  Location     Type
  4808 ;;  f1              4   72[BANK0 ] unsigned char 
  4809 ;; Auto vars:     Size  Location     Type
  4810 ;;  exp1            1   12[COMMON] unsigned char 
  4811 ;;  sign1           1   11[COMMON] unsigned char 
  4812 ;; Return value:  Size  Location     Type
  4813 ;;                  4   72[BANK0 ] long 
  4814 ;; Registers used:
  4815 ;;		wreg, status,2, status,0
  4816 ;; Tracked objects:
  4817 ;;		On entry : 0/0
  4818 ;;		On exit  : 0/0
  4819 ;;		Unchanged: 0/0
  4820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4821 ;;      Params:         0       4       0       0       0
  4822 ;;      Locals:         2       0       0       0       0
  4823 ;;      Temps:          0       0       5       0       0
  4824 ;;      Totals:         2       4       5       0       0
  4825 ;;Total ram usage:       11 bytes
  4826 ;; Hardware stack levels used: 1
  4827 ;; This function calls:
  4828 ;;		Nothing
  4829 ;; This function is called by:
  4830 ;;		_realizarCalculo
  4831 ;;		_PWM1_Duty
  4832 ;;		_PWM2_Duty
  4833 ;; This function uses a non-reentrant model
  4834 ;;
  4835                           
  4836                           
  4837                           ;psect for function ___fltol
  4838  0AA7                     ___fltol:
  4839  0AA7                     l1860:	
  4840                           ;incstack = 0
  4841                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4842                           
  4843  0AA7  1003               	clrc
  4844  0AA8  1283               	bcf	3,5	;RP0=0, select bank0
  4845  0AA9  1303               	bcf	3,6	;RP1=0, select bank0
  4846  0AAA  0D6A               	rlf	___fltol@f1+2,w
  4847  0AAB  0D6B               	rlf	___fltol@f1+3,w
  4848  0AAC  1683               	bsf	3,5	;RP0=1, select bank1
  4849  0AAD  1303               	bcf	3,6	;RP1=0, select bank1
  4850  0AAE  00C8               	movwf	??___fltol^(0+128)
  4851  0AAF  0848               	movf	??___fltol^(0+128),w
  4852  0AB0  00FC               	movwf	___fltol@exp1
  4853  0AB1  087C               	movf	___fltol@exp1,w
  4854  0AB2  1D03               	btfss	3,2
  4855  0AB3  2AB5               	goto	u2011
  4856  0AB4  2AB6               	goto	u2010
  4857  0AB5                     u2011:
  4858  0AB5  2AC0               	goto	l1866
  4859  0AB6                     u2010:
  4860  0AB6                     l1862:
  4861  0AB6  3000               	movlw	0
  4862  0AB7  1283               	bcf	3,5	;RP0=0, select bank0
  4863  0AB8  00EB               	movwf	?___fltol+3
  4864  0AB9  3000               	movlw	0
  4865  0ABA  00EA               	movwf	?___fltol+2
  4866  0ABB  3000               	movlw	0
  4867  0ABC  00E9               	movwf	?___fltol+1
  4868  0ABD  3000               	movlw	0
  4869  0ABE  00E8               	movwf	?___fltol
  4870  0ABF  2B41               	goto	l544
  4871  0AC0                     l1866:
  4872  0AC0  1283               	bcf	3,5	;RP0=0, select bank0
  4873  0AC1  1303               	bcf	3,6	;RP1=0, select bank0
  4874  0AC2  0868               	movf	___fltol@f1,w
  4875  0AC3  1683               	bsf	3,5	;RP0=1, select bank1
  4876  0AC4  1303               	bcf	3,6	;RP1=0, select bank1
  4877  0AC5  00C8               	movwf	??___fltol^(0+128)
  4878  0AC6  1283               	bcf	3,5	;RP0=0, select bank0
  4879  0AC7  1303               	bcf	3,6	;RP1=0, select bank0
  4880  0AC8  0869               	movf	___fltol@f1+1,w
  4881  0AC9  1683               	bsf	3,5	;RP0=1, select bank1
  4882  0ACA  1303               	bcf	3,6	;RP1=0, select bank1
  4883  0ACB  00C9               	movwf	(??___fltol^(0+128)+1)
  4884  0ACC  1283               	bcf	3,5	;RP0=0, select bank0
  4885  0ACD  1303               	bcf	3,6	;RP1=0, select bank0
  4886  0ACE  086A               	movf	___fltol@f1+2,w
  4887  0ACF  1683               	bsf	3,5	;RP0=1, select bank1
  4888  0AD0  1303               	bcf	3,6	;RP1=0, select bank1
  4889  0AD1  00CA               	movwf	(??___fltol^(0+128)+2)
  4890  0AD2  1283               	bcf	3,5	;RP0=0, select bank0
  4891  0AD3  1303               	bcf	3,6	;RP1=0, select bank0
  4892  0AD4  086B               	movf	___fltol@f1+3,w
  4893  0AD5  1683               	bsf	3,5	;RP0=1, select bank1
  4894  0AD6  1303               	bcf	3,6	;RP1=0, select bank1
  4895  0AD7  00CB               	movwf	(??___fltol^(0+128)+3)
  4896  0AD8  301F               	movlw	31
  4897  0AD9                     u2025:
  4898  0AD9  1003               	clrc
  4899  0ADA  0CCB               	rrf	(??___fltol^(0+128)+3),f
  4900  0ADB  0CCA               	rrf	(??___fltol^(0+128)+2),f
  4901  0ADC  0CC9               	rrf	(??___fltol^(0+128)+1),f
  4902  0ADD  0CC8               	rrf	??___fltol^(0+128),f
  4903  0ADE                     u2020:
  4904  0ADE  3EFF               	addlw	-1
  4905  0ADF  1D03               	skipz
  4906  0AE0  2AD9               	goto	u2025
  4907  0AE1  0848               	movf	??___fltol^(0+128),w
  4908  0AE2  00CC               	movwf	(??___fltol+4)^(0+128)
  4909  0AE3  084C               	movf	(??___fltol+4)^(0+128),w
  4910  0AE4  00FB               	movwf	___fltol@sign1
  4911  0AE5                     l1868:
  4912  0AE5  1283               	bcf	3,5	;RP0=0, select bank0
  4913  0AE6  1303               	bcf	3,6	;RP1=0, select bank0
  4914  0AE7  17EA               	bsf	___fltol@f1+2,7
  4915  0AE8                     l1870:
  4916  0AE8  30FF               	movlw	255
  4917  0AE9  05E8               	andwf	___fltol@f1,f
  4918  0AEA  30FF               	movlw	255
  4919  0AEB  05E9               	andwf	___fltol@f1+1,f
  4920  0AEC  30FF               	movlw	255
  4921  0AED  05EA               	andwf	___fltol@f1+2,f
  4922  0AEE  3000               	movlw	0
  4923  0AEF  05EB               	andwf	___fltol@f1+3,f
  4924  0AF0                     l1872:
  4925  0AF0  3096               	movlw	150
  4926  0AF1  02FC               	subwf	___fltol@exp1,f
  4927  0AF2                     l1874:
  4928  0AF2  1FFC               	btfss	___fltol@exp1,7
  4929  0AF3  2AF5               	goto	u2031
  4930  0AF4  2AF6               	goto	u2030
  4931  0AF5                     u2031:
  4932  0AF5  2B13               	goto	l1884
  4933  0AF6                     u2030:
  4934  0AF6                     l1876:
  4935  0AF6  087C               	movf	___fltol@exp1,w
  4936  0AF7  3A80               	xorlw	128
  4937  0AF8  3E97               	addlw	151
  4938  0AF9  1803               	skipnc
  4939  0AFA  2AFC               	goto	u2041
  4940  0AFB  2AFD               	goto	u2040
  4941  0AFC                     u2041:
  4942  0AFC  2AFE               	goto	l1882
  4943  0AFD                     u2040:
  4944  0AFD  2AB6               	goto	l1862
  4945  0AFE                     l1882:
  4946  0AFE  3001               	movlw	1
  4947  0AFF                     u2055:
  4948  0AFF  1003               	clrc
  4949  0B00  1283               	bcf	3,5	;RP0=0, select bank0
  4950  0B01  0CEB               	rrf	___fltol@f1+3,f
  4951  0B02  0CEA               	rrf	___fltol@f1+2,f
  4952  0B03  0CE9               	rrf	___fltol@f1+1,f
  4953  0B04  0CE8               	rrf	___fltol@f1,f
  4954  0B05  3EFF               	addlw	-1
  4955  0B06  1D03               	skipz
  4956  0B07  2AFF               	goto	u2055
  4957  0B08  3001               	movlw	1
  4958  0B09  1683               	bsf	3,5	;RP0=1, select bank1
  4959  0B0A  1303               	bcf	3,6	;RP1=0, select bank1
  4960  0B0B  00C8               	movwf	??___fltol^(0+128)
  4961  0B0C  0848               	movf	??___fltol^(0+128),w
  4962  0B0D  07FC               	addwf	___fltol@exp1,f
  4963  0B0E  1D03               	btfss	3,2
  4964  0B0F  2B11               	goto	u2061
  4965  0B10  2B12               	goto	u2060
  4966  0B11                     u2061:
  4967  0B11  2AFE               	goto	l1882
  4968  0B12                     u2060:
  4969  0B12  2B30               	goto	l1892
  4970  0B13                     l1884:
  4971  0B13  3020               	movlw	32
  4972  0B14  027C               	subwf	___fltol@exp1,w
  4973  0B15  1C03               	skipc
  4974  0B16  2B18               	goto	u2071
  4975  0B17  2B19               	goto	u2070
  4976  0B18                     u2071:
  4977  0B18  2B2B               	goto	l551
  4978  0B19                     u2070:
  4979  0B19  2AB6               	goto	l1862
  4980  0B1A                     l1890:
  4981  0B1A  3001               	movlw	1
  4982  0B1B  1683               	bsf	3,5	;RP0=1, select bank1
  4983  0B1C  1303               	bcf	3,6	;RP1=0, select bank1
  4984  0B1D  00C8               	movwf	??___fltol^(0+128)
  4985  0B1E                     u2085:
  4986  0B1E  1003               	clrc
  4987  0B1F  1283               	bcf	3,5	;RP0=0, select bank0
  4988  0B20  1303               	bcf	3,6	;RP1=0, select bank0
  4989  0B21  0DE8               	rlf	___fltol@f1,f
  4990  0B22  0DE9               	rlf	___fltol@f1+1,f
  4991  0B23  0DEA               	rlf	___fltol@f1+2,f
  4992  0B24  0DEB               	rlf	___fltol@f1+3,f
  4993  0B25  1683               	bsf	3,5	;RP0=1, select bank1
  4994  0B26  1303               	bcf	3,6	;RP1=0, select bank1
  4995  0B27  0BC8               	decfsz	??___fltol^(0+128),f
  4996  0B28  2B1E               	goto	u2085
  4997  0B29  3001               	movlw	1
  4998  0B2A  02FC               	subwf	___fltol@exp1,f
  4999  0B2B                     l551:
  5000  0B2B  087C               	movf	___fltol@exp1,w
  5001  0B2C  1D03               	btfss	3,2
  5002  0B2D  2B2F               	goto	u2091
  5003  0B2E  2B30               	goto	u2090
  5004  0B2F                     u2091:
  5005  0B2F  2B1A               	goto	l1890
  5006  0B30                     u2090:
  5007  0B30                     l1892:
  5008  0B30  087B               	movf	___fltol@sign1,w
  5009  0B31  1903               	btfsc	3,2
  5010  0B32  2B34               	goto	u2101
  5011  0B33  2B35               	goto	u2100
  5012  0B34                     u2101:
  5013  0B34  2B41               	goto	l554
  5014  0B35                     u2100:
  5015  0B35                     l1894:
  5016  0B35  1283               	bcf	3,5	;RP0=0, select bank0
  5017  0B36  09E8               	comf	___fltol@f1,f
  5018  0B37  09E9               	comf	___fltol@f1+1,f
  5019  0B38  09EA               	comf	___fltol@f1+2,f
  5020  0B39  09EB               	comf	___fltol@f1+3,f
  5021  0B3A  0AE8               	incf	___fltol@f1,f
  5022  0B3B  1903               	skipnz
  5023  0B3C  0AE9               	incf	___fltol@f1+1,f
  5024  0B3D  1903               	skipnz
  5025  0B3E  0AEA               	incf	___fltol@f1+2,f
  5026  0B3F  1903               	skipnz
  5027  0B40  0AEB               	incf	___fltol@f1+3,f
  5028  0B41                     l554:
  5029  0B41                     l544:
  5030  0B41  0008               	return
  5031  0B42                     __end_of___fltol:
  5032                           
  5033                           	psect	text21
  5034  047B                     __ptext21:	
  5035 ;; *************** function ___flmul *****************
  5036 ;; Defined at:
  5037 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcmul.c"
  5038 ;; Parameters:    Size  Location     Type
  5039 ;;  b               4   46[BANK0 ] long 
  5040 ;;  a               4   50[BANK0 ] long 
  5041 ;; Auto vars:     Size  Location     Type
  5042 ;;  prod            4   66[BANK0 ] struct .
  5043 ;;  grs             4   60[BANK0 ] unsigned long 
  5044 ;;  temp            2   70[BANK0 ] struct .
  5045 ;;  bexp            1   65[BANK0 ] unsigned char 
  5046 ;;  aexp            1   64[BANK0 ] unsigned char 
  5047 ;;  sign            1   59[BANK0 ] unsigned char 
  5048 ;; Return value:  Size  Location     Type
  5049 ;;                  4   46[BANK0 ] unsigned char 
  5050 ;; Registers used:
  5051 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5052 ;; Tracked objects:
  5053 ;;		On entry : 0/0
  5054 ;;		On exit  : 0/0
  5055 ;;		Unchanged: 0/0
  5056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5057 ;;      Params:         0       8       0       0       0
  5058 ;;      Locals:         0      13       0       0       0
  5059 ;;      Temps:          0       5       0       0       0
  5060 ;;      Totals:         0      26       0       0       0
  5061 ;;Total ram usage:       26 bytes
  5062 ;; Hardware stack levels used: 1
  5063 ;; Hardware stack levels required when called: 1
  5064 ;; This function calls:
  5065 ;;		__Umul8_16
  5066 ;; This function is called by:
  5067 ;;		_realizarCalculo
  5068 ;;		_PWM1_Duty
  5069 ;;		_PWM2_Duty
  5070 ;; This function uses a non-reentrant model
  5071 ;;
  5072                           
  5073                           
  5074                           ;psect for function ___flmul
  5075  047B                     ___flmul:
  5076  047B                     l2086:	
  5077                           ;incstack = 0
  5078                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5079                           
  5080  047B  1283               	bcf	3,5	;RP0=0, select bank0
  5081  047C  1303               	bcf	3,6	;RP1=0, select bank0
  5082  047D  0851               	movf	___flmul@b+3,w
  5083  047E  3980               	andlw	128
  5084  047F  00D6               	movwf	??___flmul
  5085  0480  0856               	movf	??___flmul,w
  5086  0481  00DB               	movwf	___flmul@sign
  5087  0482                     l2088:
  5088  0482  0851               	movf	___flmul@b+3,w
  5089  0483  00D6               	movwf	??___flmul
  5090  0484  0756               	addwf	??___flmul,w
  5091  0485  00D7               	movwf	??___flmul+1
  5092  0486  0857               	movf	??___flmul+1,w
  5093  0487  00E1               	movwf	___flmul@bexp
  5094  0488                     l2090:
  5095  0488  1FD0               	btfss	___flmul@b+2,7
  5096  0489  2C8B               	goto	u2531
  5097  048A  2C8C               	goto	u2530
  5098  048B                     u2531:
  5099  048B  2C8D               	goto	l2094
  5100  048C                     u2530:
  5101  048C                     l2092:
  5102  048C  1461               	bsf	___flmul@bexp,0
  5103  048D                     l2094:
  5104  048D  0861               	movf	___flmul@bexp,w
  5105  048E  1903               	btfsc	3,2
  5106  048F  2C91               	goto	u2541
  5107  0490  2C92               	goto	u2540
  5108  0491                     u2541:
  5109  0491  2CA1               	goto	l2102
  5110  0492                     u2540:
  5111  0492                     l2096:
  5112  0492  0A61               	incf	___flmul@bexp,w
  5113  0493  1D03               	btfss	3,2
  5114  0494  2C96               	goto	u2551
  5115  0495  2C97               	goto	u2550
  5116  0496                     u2551:
  5117  0496  2C9F               	goto	l2100
  5118  0497                     u2550:
  5119  0497                     l2098:
  5120  0497  3000               	movlw	0
  5121  0498  00D1               	movwf	___flmul@b+3
  5122  0499  3000               	movlw	0
  5123  049A  00D0               	movwf	___flmul@b+2
  5124  049B  3000               	movlw	0
  5125  049C  00CF               	movwf	___flmul@b+1
  5126  049D  3000               	movlw	0
  5127  049E  00CE               	movwf	___flmul@b
  5128  049F                     l2100:
  5129  049F  17D0               	bsf	___flmul@b+2,7
  5130  04A0  2CA9               	goto	l2104
  5131  04A1                     l2102:
  5132  04A1  3000               	movlw	0
  5133  04A2  00D1               	movwf	___flmul@b+3
  5134  04A3  3000               	movlw	0
  5135  04A4  00D0               	movwf	___flmul@b+2
  5136  04A5  3000               	movlw	0
  5137  04A6  00CF               	movwf	___flmul@b+1
  5138  04A7  3000               	movlw	0
  5139  04A8  00CE               	movwf	___flmul@b
  5140  04A9                     l2104:
  5141  04A9  0855               	movf	___flmul@a+3,w
  5142  04AA  3980               	andlw	128
  5143  04AB  00D6               	movwf	??___flmul
  5144  04AC  0856               	movf	??___flmul,w
  5145  04AD  06DB               	xorwf	___flmul@sign,f
  5146  04AE                     l2106:
  5147  04AE  0855               	movf	___flmul@a+3,w
  5148  04AF  00D6               	movwf	??___flmul
  5149  04B0  0756               	addwf	??___flmul,w
  5150  04B1  00D7               	movwf	??___flmul+1
  5151  04B2  0857               	movf	??___flmul+1,w
  5152  04B3  00E0               	movwf	___flmul@aexp
  5153  04B4                     l2108:
  5154  04B4  1FD4               	btfss	___flmul@a+2,7
  5155  04B5  2CB7               	goto	u2561
  5156  04B6  2CB8               	goto	u2560
  5157  04B7                     u2561:
  5158  04B7  2CB9               	goto	l2112
  5159  04B8                     u2560:
  5160  04B8                     l2110:
  5161  04B8  1460               	bsf	___flmul@aexp,0
  5162  04B9                     l2112:
  5163  04B9  0860               	movf	___flmul@aexp,w
  5164  04BA  1903               	btfsc	3,2
  5165  04BB  2CBD               	goto	u2571
  5166  04BC  2CBE               	goto	u2570
  5167  04BD                     u2571:
  5168  04BD  2CCD               	goto	l2120
  5169  04BE                     u2570:
  5170  04BE                     l2114:
  5171  04BE  0A60               	incf	___flmul@aexp,w
  5172  04BF  1D03               	btfss	3,2
  5173  04C0  2CC2               	goto	u2581
  5174  04C1  2CC3               	goto	u2580
  5175  04C2                     u2581:
  5176  04C2  2CCB               	goto	l2118
  5177  04C3                     u2580:
  5178  04C3                     l2116:
  5179  04C3  3000               	movlw	0
  5180  04C4  00D5               	movwf	___flmul@a+3
  5181  04C5  3000               	movlw	0
  5182  04C6  00D4               	movwf	___flmul@a+2
  5183  04C7  3000               	movlw	0
  5184  04C8  00D3               	movwf	___flmul@a+1
  5185  04C9  3000               	movlw	0
  5186  04CA  00D2               	movwf	___flmul@a
  5187  04CB                     l2118:
  5188  04CB  17D4               	bsf	___flmul@a+2,7
  5189  04CC  2CD5               	goto	l2122
  5190  04CD                     l2120:
  5191  04CD  3000               	movlw	0
  5192  04CE  00D5               	movwf	___flmul@a+3
  5193  04CF  3000               	movlw	0
  5194  04D0  00D4               	movwf	___flmul@a+2
  5195  04D1  3000               	movlw	0
  5196  04D2  00D3               	movwf	___flmul@a+1
  5197  04D3  3000               	movlw	0
  5198  04D4  00D2               	movwf	___flmul@a
  5199  04D5                     l2122:
  5200  04D5  0860               	movf	___flmul@aexp,w
  5201  04D6  1903               	btfsc	3,2
  5202  04D7  2CD9               	goto	u2591
  5203  04D8  2CDA               	goto	u2590
  5204  04D9                     u2591:
  5205  04D9  2CDF               	goto	l2126
  5206  04DA                     u2590:
  5207  04DA                     l2124:
  5208  04DA  0861               	movf	___flmul@bexp,w
  5209  04DB  1D03               	btfss	3,2
  5210  04DC  2CDE               	goto	u2601
  5211  04DD  2CDF               	goto	u2600
  5212  04DE                     u2601:
  5213  04DE  2CE8               	goto	l2130
  5214  04DF                     u2600:
  5215  04DF                     l2126:
  5216  04DF  3000               	movlw	0
  5217  04E0  00D1               	movwf	?___flmul+3
  5218  04E1  3000               	movlw	0
  5219  04E2  00D0               	movwf	?___flmul+2
  5220  04E3  3000               	movlw	0
  5221  04E4  00CF               	movwf	?___flmul+1
  5222  04E5  3000               	movlw	0
  5223  04E6  00CE               	movwf	?___flmul
  5224  04E7  2FDB               	goto	l747
  5225  04E8                     l2130:
  5226  04E8  084E               	movf	___flmul@b,w
  5227  04E9  00D6               	movwf	??___flmul
  5228  04EA  0856               	movf	??___flmul,w
  5229  04EB  00F0               	movwf	__Umul8_16@multiplicand
  5230  04EC  0854               	movf	___flmul@a+2,w
  5231  04ED  160A  118A  277F  120A  118A  	fcall	__Umul8_16
  5232  04F2  0871               	movf	?__Umul8_16+1,w
  5233  04F3  1283               	bcf	3,5	;RP0=0, select bank0
  5234  04F4  1303               	bcf	3,6	;RP1=0, select bank0
  5235  04F5  00E7               	movwf	___flmul@temp+1
  5236  04F6  0870               	movf	?__Umul8_16,w
  5237  04F7  00E6               	movwf	___flmul@temp
  5238  04F8                     l2132:
  5239  04F8  0866               	movf	___flmul@temp,w
  5240  04F9  00D6               	movwf	??___flmul
  5241  04FA  01D7               	clrf	??___flmul+1
  5242  04FB  01D8               	clrf	??___flmul+2
  5243  04FC  01D9               	clrf	??___flmul+3
  5244  04FD  0859               	movf	??___flmul+3,w
  5245  04FE  00DF               	movwf	___flmul@grs+3
  5246  04FF  0858               	movf	??___flmul+2,w
  5247  0500  00DE               	movwf	___flmul@grs+2
  5248  0501  0857               	movf	??___flmul+1,w
  5249  0502  00DD               	movwf	___flmul@grs+1
  5250  0503  0856               	movf	??___flmul,w
  5251  0504  00DC               	movwf	___flmul@grs
  5252  0505                     l2134:
  5253  0505  0867               	movf	___flmul@temp+1,w
  5254  0506  00D6               	movwf	??___flmul
  5255  0507  01D7               	clrf	??___flmul+1
  5256  0508  01D8               	clrf	??___flmul+2
  5257  0509  01D9               	clrf	??___flmul+3
  5258  050A  0859               	movf	??___flmul+3,w
  5259  050B  00E5               	movwf	___flmul@prod+3
  5260  050C  0858               	movf	??___flmul+2,w
  5261  050D  00E4               	movwf	___flmul@prod+2
  5262  050E  0857               	movf	??___flmul+1,w
  5263  050F  00E3               	movwf	___flmul@prod+1
  5264  0510  0856               	movf	??___flmul,w
  5265  0511  00E2               	movwf	___flmul@prod
  5266  0512  084F               	movf	___flmul@b+1,w
  5267  0513  00D6               	movwf	??___flmul
  5268  0514  0856               	movf	??___flmul,w
  5269  0515  00F0               	movwf	__Umul8_16@multiplicand
  5270  0516  0853               	movf	___flmul@a+1,w
  5271  0517  160A  118A  277F  120A  118A  	fcall	__Umul8_16
  5272  051C  0871               	movf	?__Umul8_16+1,w
  5273  051D  1283               	bcf	3,5	;RP0=0, select bank0
  5274  051E  1303               	bcf	3,6	;RP1=0, select bank0
  5275  051F  00E7               	movwf	___flmul@temp+1
  5276  0520  0870               	movf	?__Umul8_16,w
  5277  0521  00E6               	movwf	___flmul@temp
  5278  0522                     l2136:
  5279  0522  0866               	movf	___flmul@temp,w
  5280  0523  00D6               	movwf	??___flmul
  5281  0524  01D7               	clrf	??___flmul+1
  5282  0525  01D8               	clrf	??___flmul+2
  5283  0526  01D9               	clrf	??___flmul+3
  5284  0527  0856               	movf	??___flmul,w
  5285  0528  07DC               	addwf	___flmul@grs,f
  5286  0529  0857               	movf	??___flmul+1,w
  5287  052A  1103               	clrz
  5288  052B  1803               	skipnc
  5289  052C  3E01               	addlw	1
  5290  052D  1903               	skipnz
  5291  052E  2D30               	goto	u2611
  5292  052F  07DD               	addwf	___flmul@grs+1,f
  5293  0530                     u2611:
  5294  0530  0858               	movf	??___flmul+2,w
  5295  0531  1103               	clrz
  5296  0532  1803               	skipnc
  5297  0533  3E01               	addlw	1
  5298  0534  1903               	skipnz
  5299  0535  2D37               	goto	u2612
  5300  0536  07DE               	addwf	___flmul@grs+2,f
  5301  0537                     u2612:
  5302  0537  0859               	movf	??___flmul+3,w
  5303  0538  1103               	clrz
  5304  0539  1803               	skipnc
  5305  053A  3E01               	addlw	1
  5306  053B  1903               	skipnz
  5307  053C  2D3E               	goto	u2613
  5308  053D  07DF               	addwf	___flmul@grs+3,f
  5309  053E                     u2613:
  5310  053E                     l2138:
  5311  053E  0867               	movf	___flmul@temp+1,w
  5312  053F  00D6               	movwf	??___flmul
  5313  0540  01D7               	clrf	??___flmul+1
  5314  0541  01D8               	clrf	??___flmul+2
  5315  0542  01D9               	clrf	??___flmul+3
  5316  0543  0856               	movf	??___flmul,w
  5317  0544  07E2               	addwf	___flmul@prod,f
  5318  0545  0857               	movf	??___flmul+1,w
  5319  0546  1103               	clrz
  5320  0547  1803               	skipnc
  5321  0548  3E01               	addlw	1
  5322  0549  1903               	skipnz
  5323  054A  2D4C               	goto	u2621
  5324  054B  07E3               	addwf	___flmul@prod+1,f
  5325  054C                     u2621:
  5326  054C  0858               	movf	??___flmul+2,w
  5327  054D  1103               	clrz
  5328  054E  1803               	skipnc
  5329  054F  3E01               	addlw	1
  5330  0550  1903               	skipnz
  5331  0551  2D53               	goto	u2622
  5332  0552  07E4               	addwf	___flmul@prod+2,f
  5333  0553                     u2622:
  5334  0553  0859               	movf	??___flmul+3,w
  5335  0554  1103               	clrz
  5336  0555  1803               	skipnc
  5337  0556  3E01               	addlw	1
  5338  0557  1903               	skipnz
  5339  0558  2D5A               	goto	u2623
  5340  0559  07E5               	addwf	___flmul@prod+3,f
  5341  055A                     u2623:
  5342  055A  0850               	movf	___flmul@b+2,w
  5343  055B  00D6               	movwf	??___flmul
  5344  055C  0856               	movf	??___flmul,w
  5345  055D  00F0               	movwf	__Umul8_16@multiplicand
  5346  055E  0852               	movf	___flmul@a,w
  5347  055F  160A  118A  277F  120A  118A  	fcall	__Umul8_16
  5348  0564  0871               	movf	?__Umul8_16+1,w
  5349  0565  1283               	bcf	3,5	;RP0=0, select bank0
  5350  0566  1303               	bcf	3,6	;RP1=0, select bank0
  5351  0567  00E7               	movwf	___flmul@temp+1
  5352  0568  0870               	movf	?__Umul8_16,w
  5353  0569  00E6               	movwf	___flmul@temp
  5354  056A                     l2140:
  5355  056A  0866               	movf	___flmul@temp,w
  5356  056B  00D6               	movwf	??___flmul
  5357  056C  01D7               	clrf	??___flmul+1
  5358  056D  01D8               	clrf	??___flmul+2
  5359  056E  01D9               	clrf	??___flmul+3
  5360  056F  0856               	movf	??___flmul,w
  5361  0570  07DC               	addwf	___flmul@grs,f
  5362  0571  0857               	movf	??___flmul+1,w
  5363  0572  1103               	clrz
  5364  0573  1803               	skipnc
  5365  0574  3E01               	addlw	1
  5366  0575  1903               	skipnz
  5367  0576  2D78               	goto	u2631
  5368  0577  07DD               	addwf	___flmul@grs+1,f
  5369  0578                     u2631:
  5370  0578  0858               	movf	??___flmul+2,w
  5371  0579  1103               	clrz
  5372  057A  1803               	skipnc
  5373  057B  3E01               	addlw	1
  5374  057C  1903               	skipnz
  5375  057D  2D7F               	goto	u2632
  5376  057E  07DE               	addwf	___flmul@grs+2,f
  5377  057F                     u2632:
  5378  057F  0859               	movf	??___flmul+3,w
  5379  0580  1103               	clrz
  5380  0581  1803               	skipnc
  5381  0582  3E01               	addlw	1
  5382  0583  1903               	skipnz
  5383  0584  2D86               	goto	u2633
  5384  0585  07DF               	addwf	___flmul@grs+3,f
  5385  0586                     u2633:
  5386  0586                     l2142:
  5387  0586  0867               	movf	___flmul@temp+1,w
  5388  0587  00D6               	movwf	??___flmul
  5389  0588  01D7               	clrf	??___flmul+1
  5390  0589  01D8               	clrf	??___flmul+2
  5391  058A  01D9               	clrf	??___flmul+3
  5392  058B  0856               	movf	??___flmul,w
  5393  058C  07E2               	addwf	___flmul@prod,f
  5394  058D  0857               	movf	??___flmul+1,w
  5395  058E  1103               	clrz
  5396  058F  1803               	skipnc
  5397  0590  3E01               	addlw	1
  5398  0591  1903               	skipnz
  5399  0592  2D94               	goto	u2641
  5400  0593  07E3               	addwf	___flmul@prod+1,f
  5401  0594                     u2641:
  5402  0594  0858               	movf	??___flmul+2,w
  5403  0595  1103               	clrz
  5404  0596  1803               	skipnc
  5405  0597  3E01               	addlw	1
  5406  0598  1903               	skipnz
  5407  0599  2D9B               	goto	u2642
  5408  059A  07E4               	addwf	___flmul@prod+2,f
  5409  059B                     u2642:
  5410  059B  0859               	movf	??___flmul+3,w
  5411  059C  1103               	clrz
  5412  059D  1803               	skipnc
  5413  059E  3E01               	addlw	1
  5414  059F  1903               	skipnz
  5415  05A0  2DA2               	goto	u2643
  5416  05A1  07E5               	addwf	___flmul@prod+3,f
  5417  05A2                     u2643:
  5418  05A2                     l2144:
  5419  05A2  3008               	movlw	8
  5420  05A3  00D6               	movwf	??___flmul
  5421  05A4                     u2655:
  5422  05A4  1003               	clrc
  5423  05A5  0DDC               	rlf	___flmul@grs,f
  5424  05A6  0DDD               	rlf	___flmul@grs+1,f
  5425  05A7  0DDE               	rlf	___flmul@grs+2,f
  5426  05A8  0DDF               	rlf	___flmul@grs+3,f
  5427  05A9  0BD6               	decfsz	??___flmul,f
  5428  05AA  2DA4               	goto	u2655
  5429  05AB                     l2146:
  5430  05AB  084F               	movf	___flmul@b+1,w
  5431  05AC  00D6               	movwf	??___flmul
  5432  05AD  0856               	movf	??___flmul,w
  5433  05AE  00F0               	movwf	__Umul8_16@multiplicand
  5434  05AF  0852               	movf	___flmul@a,w
  5435  05B0  160A  118A  277F  120A  118A  	fcall	__Umul8_16
  5436  05B5  0871               	movf	?__Umul8_16+1,w
  5437  05B6  1283               	bcf	3,5	;RP0=0, select bank0
  5438  05B7  1303               	bcf	3,6	;RP1=0, select bank0
  5439  05B8  00E7               	movwf	___flmul@temp+1
  5440  05B9  0870               	movf	?__Umul8_16,w
  5441  05BA  00E6               	movwf	___flmul@temp
  5442  05BB                     l2148:
  5443  05BB  0866               	movf	___flmul@temp,w
  5444  05BC  00D6               	movwf	??___flmul
  5445  05BD  0867               	movf	___flmul@temp+1,w
  5446  05BE  00D7               	movwf	??___flmul+1
  5447  05BF  01D8               	clrf	??___flmul+2
  5448  05C0  01D9               	clrf	??___flmul+3
  5449  05C1  0856               	movf	??___flmul,w
  5450  05C2  07DC               	addwf	___flmul@grs,f
  5451  05C3  0857               	movf	??___flmul+1,w
  5452  05C4  1103               	clrz
  5453  05C5  1803               	skipnc
  5454  05C6  3E01               	addlw	1
  5455  05C7  1903               	skipnz
  5456  05C8  2DCA               	goto	u2661
  5457  05C9  07DD               	addwf	___flmul@grs+1,f
  5458  05CA                     u2661:
  5459  05CA  0858               	movf	??___flmul+2,w
  5460  05CB  1103               	clrz
  5461  05CC  1803               	skipnc
  5462  05CD  3E01               	addlw	1
  5463  05CE  1903               	skipnz
  5464  05CF  2DD1               	goto	u2662
  5465  05D0  07DE               	addwf	___flmul@grs+2,f
  5466  05D1                     u2662:
  5467  05D1  0859               	movf	??___flmul+3,w
  5468  05D2  1103               	clrz
  5469  05D3  1803               	skipnc
  5470  05D4  3E01               	addlw	1
  5471  05D5  1903               	skipnz
  5472  05D6  2DD8               	goto	u2663
  5473  05D7  07DF               	addwf	___flmul@grs+3,f
  5474  05D8                     u2663:
  5475  05D8                     l2150:
  5476  05D8  084E               	movf	___flmul@b,w
  5477  05D9  00D6               	movwf	??___flmul
  5478  05DA  0856               	movf	??___flmul,w
  5479  05DB  00F0               	movwf	__Umul8_16@multiplicand
  5480  05DC  0853               	movf	___flmul@a+1,w
  5481  05DD  160A  118A  277F  120A  118A  	fcall	__Umul8_16
  5482  05E2  0871               	movf	?__Umul8_16+1,w
  5483  05E3  1283               	bcf	3,5	;RP0=0, select bank0
  5484  05E4  1303               	bcf	3,6	;RP1=0, select bank0
  5485  05E5  00E7               	movwf	___flmul@temp+1
  5486  05E6  0870               	movf	?__Umul8_16,w
  5487  05E7  00E6               	movwf	___flmul@temp
  5488  05E8                     l2152:
  5489  05E8  0866               	movf	___flmul@temp,w
  5490  05E9  00D6               	movwf	??___flmul
  5491  05EA  0867               	movf	___flmul@temp+1,w
  5492  05EB  00D7               	movwf	??___flmul+1
  5493  05EC  01D8               	clrf	??___flmul+2
  5494  05ED  01D9               	clrf	??___flmul+3
  5495  05EE  0856               	movf	??___flmul,w
  5496  05EF  07DC               	addwf	___flmul@grs,f
  5497  05F0  0857               	movf	??___flmul+1,w
  5498  05F1  1103               	clrz
  5499  05F2  1803               	skipnc
  5500  05F3  3E01               	addlw	1
  5501  05F4  1903               	skipnz
  5502  05F5  2DF7               	goto	u2671
  5503  05F6  07DD               	addwf	___flmul@grs+1,f
  5504  05F7                     u2671:
  5505  05F7  0858               	movf	??___flmul+2,w
  5506  05F8  1103               	clrz
  5507  05F9  1803               	skipnc
  5508  05FA  3E01               	addlw	1
  5509  05FB  1903               	skipnz
  5510  05FC  2DFE               	goto	u2672
  5511  05FD  07DE               	addwf	___flmul@grs+2,f
  5512  05FE                     u2672:
  5513  05FE  0859               	movf	??___flmul+3,w
  5514  05FF  1103               	clrz
  5515  0600  1803               	skipnc
  5516  0601  3E01               	addlw	1
  5517  0602  1903               	skipnz
  5518  0603  2E05               	goto	u2673
  5519  0604  07DF               	addwf	___flmul@grs+3,f
  5520  0605                     u2673:
  5521  0605                     l2154:
  5522  0605  3008               	movlw	8
  5523  0606  00D6               	movwf	??___flmul
  5524  0607                     u2685:
  5525  0607  1003               	clrc
  5526  0608  0DDC               	rlf	___flmul@grs,f
  5527  0609  0DDD               	rlf	___flmul@grs+1,f
  5528  060A  0DDE               	rlf	___flmul@grs+2,f
  5529  060B  0DDF               	rlf	___flmul@grs+3,f
  5530  060C  0BD6               	decfsz	??___flmul,f
  5531  060D  2E07               	goto	u2685
  5532  060E  084E               	movf	___flmul@b,w
  5533  060F  00D6               	movwf	??___flmul
  5534  0610  0856               	movf	??___flmul,w
  5535  0611  00F0               	movwf	__Umul8_16@multiplicand
  5536  0612  0852               	movf	___flmul@a,w
  5537  0613  160A  118A  277F  120A  118A  	fcall	__Umul8_16
  5538  0618  0871               	movf	?__Umul8_16+1,w
  5539  0619  1283               	bcf	3,5	;RP0=0, select bank0
  5540  061A  1303               	bcf	3,6	;RP1=0, select bank0
  5541  061B  00E7               	movwf	___flmul@temp+1
  5542  061C  0870               	movf	?__Umul8_16,w
  5543  061D  00E6               	movwf	___flmul@temp
  5544  061E                     l2156:
  5545  061E  0866               	movf	___flmul@temp,w
  5546  061F  00D6               	movwf	??___flmul
  5547  0620  0867               	movf	___flmul@temp+1,w
  5548  0621  00D7               	movwf	??___flmul+1
  5549  0622  01D8               	clrf	??___flmul+2
  5550  0623  01D9               	clrf	??___flmul+3
  5551  0624  0856               	movf	??___flmul,w
  5552  0625  07DC               	addwf	___flmul@grs,f
  5553  0626  0857               	movf	??___flmul+1,w
  5554  0627  1103               	clrz
  5555  0628  1803               	skipnc
  5556  0629  3E01               	addlw	1
  5557  062A  1903               	skipnz
  5558  062B  2E2D               	goto	u2691
  5559  062C  07DD               	addwf	___flmul@grs+1,f
  5560  062D                     u2691:
  5561  062D  0858               	movf	??___flmul+2,w
  5562  062E  1103               	clrz
  5563  062F  1803               	skipnc
  5564  0630  3E01               	addlw	1
  5565  0631  1903               	skipnz
  5566  0632  2E34               	goto	u2692
  5567  0633  07DE               	addwf	___flmul@grs+2,f
  5568  0634                     u2692:
  5569  0634  0859               	movf	??___flmul+3,w
  5570  0635  1103               	clrz
  5571  0636  1803               	skipnc
  5572  0637  3E01               	addlw	1
  5573  0638  1903               	skipnz
  5574  0639  2E3B               	goto	u2693
  5575  063A  07DF               	addwf	___flmul@grs+3,f
  5576  063B                     u2693:
  5577  063B                     l2158:
  5578  063B  084F               	movf	___flmul@b+1,w
  5579  063C  00D6               	movwf	??___flmul
  5580  063D  0856               	movf	??___flmul,w
  5581  063E  00F0               	movwf	__Umul8_16@multiplicand
  5582  063F  0854               	movf	___flmul@a+2,w
  5583  0640  160A  118A  277F  120A  118A  	fcall	__Umul8_16
  5584  0645  0871               	movf	?__Umul8_16+1,w
  5585  0646  1283               	bcf	3,5	;RP0=0, select bank0
  5586  0647  1303               	bcf	3,6	;RP1=0, select bank0
  5587  0648  00E7               	movwf	___flmul@temp+1
  5588  0649  0870               	movf	?__Umul8_16,w
  5589  064A  00E6               	movwf	___flmul@temp
  5590  064B  0866               	movf	___flmul@temp,w
  5591  064C  00D6               	movwf	??___flmul
  5592  064D  0867               	movf	___flmul@temp+1,w
  5593  064E  00D7               	movwf	??___flmul+1
  5594  064F  01D8               	clrf	??___flmul+2
  5595  0650  01D9               	clrf	??___flmul+3
  5596  0651  0856               	movf	??___flmul,w
  5597  0652  07E2               	addwf	___flmul@prod,f
  5598  0653  0857               	movf	??___flmul+1,w
  5599  0654  1103               	clrz
  5600  0655  1803               	skipnc
  5601  0656  3E01               	addlw	1
  5602  0657  1903               	skipnz
  5603  0658  2E5A               	goto	u2701
  5604  0659  07E3               	addwf	___flmul@prod+1,f
  5605  065A                     u2701:
  5606  065A  0858               	movf	??___flmul+2,w
  5607  065B  1103               	clrz
  5608  065C  1803               	skipnc
  5609  065D  3E01               	addlw	1
  5610  065E  1903               	skipnz
  5611  065F  2E61               	goto	u2702
  5612  0660  07E4               	addwf	___flmul@prod+2,f
  5613  0661                     u2702:
  5614  0661  0859               	movf	??___flmul+3,w
  5615  0662  1103               	clrz
  5616  0663  1803               	skipnc
  5617  0664  3E01               	addlw	1
  5618  0665  1903               	skipnz
  5619  0666  2E68               	goto	u2703
  5620  0667  07E5               	addwf	___flmul@prod+3,f
  5621  0668                     u2703:
  5622  0668                     l2160:
  5623  0668  0850               	movf	___flmul@b+2,w
  5624  0669  00D6               	movwf	??___flmul
  5625  066A  0856               	movf	??___flmul,w
  5626  066B  00F0               	movwf	__Umul8_16@multiplicand
  5627  066C  0853               	movf	___flmul@a+1,w
  5628  066D  160A  118A  277F  120A  118A  	fcall	__Umul8_16
  5629  0672  0871               	movf	?__Umul8_16+1,w
  5630  0673  1283               	bcf	3,5	;RP0=0, select bank0
  5631  0674  1303               	bcf	3,6	;RP1=0, select bank0
  5632  0675  00E7               	movwf	___flmul@temp+1
  5633  0676  0870               	movf	?__Umul8_16,w
  5634  0677  00E6               	movwf	___flmul@temp
  5635  0678                     l2162:
  5636  0678  0866               	movf	___flmul@temp,w
  5637  0679  00D6               	movwf	??___flmul
  5638  067A  0867               	movf	___flmul@temp+1,w
  5639  067B  00D7               	movwf	??___flmul+1
  5640  067C  01D8               	clrf	??___flmul+2
  5641  067D  01D9               	clrf	??___flmul+3
  5642  067E  0856               	movf	??___flmul,w
  5643  067F  07E2               	addwf	___flmul@prod,f
  5644  0680  0857               	movf	??___flmul+1,w
  5645  0681  1103               	clrz
  5646  0682  1803               	skipnc
  5647  0683  3E01               	addlw	1
  5648  0684  1903               	skipnz
  5649  0685  2E87               	goto	u2711
  5650  0686  07E3               	addwf	___flmul@prod+1,f
  5651  0687                     u2711:
  5652  0687  0858               	movf	??___flmul+2,w
  5653  0688  1103               	clrz
  5654  0689  1803               	skipnc
  5655  068A  3E01               	addlw	1
  5656  068B  1903               	skipnz
  5657  068C  2E8E               	goto	u2712
  5658  068D  07E4               	addwf	___flmul@prod+2,f
  5659  068E                     u2712:
  5660  068E  0859               	movf	??___flmul+3,w
  5661  068F  1103               	clrz
  5662  0690  1803               	skipnc
  5663  0691  3E01               	addlw	1
  5664  0692  1903               	skipnz
  5665  0693  2E95               	goto	u2713
  5666  0694  07E5               	addwf	___flmul@prod+3,f
  5667  0695                     u2713:
  5668  0695  0850               	movf	___flmul@b+2,w
  5669  0696  00D6               	movwf	??___flmul
  5670  0697  0856               	movf	??___flmul,w
  5671  0698  00F0               	movwf	__Umul8_16@multiplicand
  5672  0699  0854               	movf	___flmul@a+2,w
  5673  069A  160A  118A  277F  120A  118A  	fcall	__Umul8_16
  5674  069F  0871               	movf	?__Umul8_16+1,w
  5675  06A0  1283               	bcf	3,5	;RP0=0, select bank0
  5676  06A1  1303               	bcf	3,6	;RP1=0, select bank0
  5677  06A2  00E7               	movwf	___flmul@temp+1
  5678  06A3  0870               	movf	?__Umul8_16,w
  5679  06A4  00E6               	movwf	___flmul@temp
  5680  06A5                     l2164:
  5681  06A5  0866               	movf	___flmul@temp,w
  5682  06A6  00D6               	movwf	??___flmul
  5683  06A7  0867               	movf	___flmul@temp+1,w
  5684  06A8  00D7               	movwf	??___flmul+1
  5685  06A9  01D8               	clrf	??___flmul+2
  5686  06AA  01D9               	clrf	??___flmul+3
  5687  06AB  3008               	movlw	8
  5688  06AC                     u2725:
  5689  06AC  1003               	clrc
  5690  06AD  0DD6               	rlf	??___flmul,f
  5691  06AE  0DD7               	rlf	??___flmul+1,f
  5692  06AF  0DD8               	rlf	??___flmul+2,f
  5693  06B0  0DD9               	rlf	??___flmul+3,f
  5694  06B1                     u2720:
  5695  06B1  3EFF               	addlw	-1
  5696  06B2  1D03               	skipz
  5697  06B3  2EAC               	goto	u2725
  5698  06B4  0856               	movf	??___flmul,w
  5699  06B5  07E2               	addwf	___flmul@prod,f
  5700  06B6  0857               	movf	??___flmul+1,w
  5701  06B7  1103               	clrz
  5702  06B8  1803               	skipnc
  5703  06B9  3E01               	addlw	1
  5704  06BA  1903               	skipnz
  5705  06BB  2EBD               	goto	u2731
  5706  06BC  07E3               	addwf	___flmul@prod+1,f
  5707  06BD                     u2731:
  5708  06BD  0858               	movf	??___flmul+2,w
  5709  06BE  1103               	clrz
  5710  06BF  1803               	skipnc
  5711  06C0  3E01               	addlw	1
  5712  06C1  1903               	skipnz
  5713  06C2  2EC4               	goto	u2732
  5714  06C3  07E4               	addwf	___flmul@prod+2,f
  5715  06C4                     u2732:
  5716  06C4  0859               	movf	??___flmul+3,w
  5717  06C5  1103               	clrz
  5718  06C6  1803               	skipnc
  5719  06C7  3E01               	addlw	1
  5720  06C8  1903               	skipnz
  5721  06C9  2ECB               	goto	u2733
  5722  06CA  07E5               	addwf	___flmul@prod+3,f
  5723  06CB                     u2733:
  5724  06CB                     l2166:
  5725  06CB  085C               	movf	___flmul@grs,w
  5726  06CC  00D6               	movwf	??___flmul
  5727  06CD  085D               	movf	___flmul@grs+1,w
  5728  06CE  00D7               	movwf	??___flmul+1
  5729  06CF  085E               	movf	___flmul@grs+2,w
  5730  06D0  00D8               	movwf	??___flmul+2
  5731  06D1  085F               	movf	___flmul@grs+3,w
  5732  06D2  00D9               	movwf	??___flmul+3
  5733  06D3  3018               	movlw	24
  5734  06D4                     u2745:
  5735  06D4  1003               	clrc
  5736  06D5  0CD9               	rrf	??___flmul+3,f
  5737  06D6  0CD8               	rrf	??___flmul+2,f
  5738  06D7  0CD7               	rrf	??___flmul+1,f
  5739  06D8  0CD6               	rrf	??___flmul,f
  5740  06D9                     u2740:
  5741  06D9  3EFF               	addlw	-1
  5742  06DA  1D03               	skipz
  5743  06DB  2ED4               	goto	u2745
  5744  06DC  0856               	movf	??___flmul,w
  5745  06DD  07E2               	addwf	___flmul@prod,f
  5746  06DE  0857               	movf	??___flmul+1,w
  5747  06DF  1103               	clrz
  5748  06E0  1803               	skipnc
  5749  06E1  3E01               	addlw	1
  5750  06E2  1903               	skipnz
  5751  06E3  2EE5               	goto	u2751
  5752  06E4  07E3               	addwf	___flmul@prod+1,f
  5753  06E5                     u2751:
  5754  06E5  0858               	movf	??___flmul+2,w
  5755  06E6  1103               	clrz
  5756  06E7  1803               	skipnc
  5757  06E8  3E01               	addlw	1
  5758  06E9  1903               	skipnz
  5759  06EA  2EEC               	goto	u2752
  5760  06EB  07E4               	addwf	___flmul@prod+2,f
  5761  06EC                     u2752:
  5762  06EC  0859               	movf	??___flmul+3,w
  5763  06ED  1103               	clrz
  5764  06EE  1803               	skipnc
  5765  06EF  3E01               	addlw	1
  5766  06F0  1903               	skipnz
  5767  06F1  2EF3               	goto	u2753
  5768  06F2  07E5               	addwf	___flmul@prod+3,f
  5769  06F3                     u2753:
  5770  06F3                     l2168:
  5771  06F3  3008               	movlw	8
  5772  06F4  00D6               	movwf	??___flmul
  5773  06F5                     u2765:
  5774  06F5  1003               	clrc
  5775  06F6  0DDC               	rlf	___flmul@grs,f
  5776  06F7  0DDD               	rlf	___flmul@grs+1,f
  5777  06F8  0DDE               	rlf	___flmul@grs+2,f
  5778  06F9  0DDF               	rlf	___flmul@grs+3,f
  5779  06FA  0BD6               	decfsz	??___flmul,f
  5780  06FB  2EF5               	goto	u2765
  5781  06FC                     l2170:
  5782  06FC  0861               	movf	___flmul@bexp,w
  5783  06FD  0760               	addwf	___flmul@aexp,w
  5784  06FE  00D6               	movwf	??___flmul
  5785  06FF  01D7               	clrf	??___flmul+1
  5786  0700  0DD7               	rlf	??___flmul+1,f
  5787  0701  0856               	movf	??___flmul,w
  5788  0702  3E82               	addlw	130
  5789  0703  00E6               	movwf	___flmul@temp
  5790  0704  0857               	movf	??___flmul+1,w
  5791  0705  1803               	skipnc
  5792  0706  3E01               	addlw	1
  5793  0707  3EFF               	addlw	255
  5794  0708  00E7               	movwf	___flmul@temp+1
  5795  0709  2F27               	goto	l2182
  5796  070A                     l2172:
  5797  070A  3001               	movlw	1
  5798  070B  00D6               	movwf	??___flmul
  5799  070C                     u2775:
  5800  070C  1003               	clrc
  5801  070D  0DE2               	rlf	___flmul@prod,f
  5802  070E  0DE3               	rlf	___flmul@prod+1,f
  5803  070F  0DE4               	rlf	___flmul@prod+2,f
  5804  0710  0DE5               	rlf	___flmul@prod+3,f
  5805  0711  0BD6               	decfsz	??___flmul,f
  5806  0712  2F0C               	goto	u2775
  5807  0713                     l2174:
  5808  0713  1FDF               	btfss	___flmul@grs+3,7
  5809  0714  2F16               	goto	u2781
  5810  0715  2F17               	goto	u2780
  5811  0716                     u2781:
  5812  0716  2F18               	goto	l2178
  5813  0717                     u2780:
  5814  0717                     l2176:
  5815  0717  1462               	bsf	___flmul@prod,0
  5816  0718                     l2178:
  5817  0718  3001               	movlw	1
  5818  0719  00D6               	movwf	??___flmul
  5819  071A                     u2795:
  5820  071A  1003               	clrc
  5821  071B  0DDC               	rlf	___flmul@grs,f
  5822  071C  0DDD               	rlf	___flmul@grs+1,f
  5823  071D  0DDE               	rlf	___flmul@grs+2,f
  5824  071E  0DDF               	rlf	___flmul@grs+3,f
  5825  071F  0BD6               	decfsz	??___flmul,f
  5826  0720  2F1A               	goto	u2795
  5827  0721                     l2180:
  5828  0721  30FF               	movlw	255
  5829  0722  07E6               	addwf	___flmul@temp,f
  5830  0723  1803               	skipnc
  5831  0724  0AE7               	incf	___flmul@temp+1,f
  5832  0725  30FF               	movlw	255
  5833  0726  07E7               	addwf	___flmul@temp+1,f
  5834  0727                     l2182:
  5835  0727  1FE4               	btfss	___flmul@prod+2,7
  5836  0728  2F2A               	goto	u2801
  5837  0729  2F2B               	goto	u2800
  5838  072A                     u2801:
  5839  072A  2F0A               	goto	l2172
  5840  072B                     u2800:
  5841  072B                     l2184:
  5842  072B  01E0               	clrf	___flmul@aexp
  5843  072C                     l2186:
  5844  072C  1FDF               	btfss	___flmul@grs+3,7
  5845  072D  2F2F               	goto	u2811
  5846  072E  2F30               	goto	u2810
  5847  072F                     u2811:
  5848  072F  2F4C               	goto	l2194
  5849  0730                     u2810:
  5850  0730                     l2188:
  5851  0730  30FF               	movlw	255
  5852  0731  055C               	andwf	___flmul@grs,w
  5853  0732  00D6               	movwf	??___flmul
  5854  0733  30FF               	movlw	255
  5855  0734  055D               	andwf	___flmul@grs+1,w
  5856  0735  00D7               	movwf	??___flmul+1
  5857  0736  30FF               	movlw	255
  5858  0737  055E               	andwf	___flmul@grs+2,w
  5859  0738  00D8               	movwf	??___flmul+2
  5860  0739  307F               	movlw	127
  5861  073A  055F               	andwf	___flmul@grs+3,w
  5862  073B  00D9               	movwf	??___flmul+3
  5863  073C  0859               	movf	??___flmul+3,w
  5864  073D  0458               	iorwf	??___flmul+2,w
  5865  073E  0457               	iorwf	??___flmul+1,w
  5866  073F  0456               	iorwf	??___flmul,w
  5867  0740  1903               	skipnz
  5868  0741  2F43               	goto	u2821
  5869  0742  2F44               	goto	u2820
  5870  0743                     u2821:
  5871  0743  2F47               	goto	l753
  5872  0744                     u2820:
  5873  0744                     l2190:
  5874  0744  01E0               	clrf	___flmul@aexp
  5875  0745  0AE0               	incf	___flmul@aexp,f
  5876  0746  2F4C               	goto	l2194
  5877  0747                     l753:
  5878  0747  1C62               	btfss	___flmul@prod,0
  5879  0748  2F4A               	goto	u2831
  5880  0749  2F4B               	goto	u2830
  5881  074A                     u2831:
  5882  074A  2F4C               	goto	l2194
  5883  074B                     u2830:
  5884  074B  2F44               	goto	l2190
  5885  074C                     l2194:
  5886  074C  0860               	movf	___flmul@aexp,w
  5887  074D  1903               	btfsc	3,2
  5888  074E  2F50               	goto	u2841
  5889  074F  2F51               	goto	u2840
  5890  0750                     u2841:
  5891  0750  2F82               	goto	l2204
  5892  0751                     u2840:
  5893  0751                     l2196:
  5894  0751  3001               	movlw	1
  5895  0752  07E2               	addwf	___flmul@prod,f
  5896  0753  3000               	movlw	0
  5897  0754  1803               	skipnc
  5898  0755  3001               	movlw	1
  5899  0756  07E3               	addwf	___flmul@prod+1,f
  5900  0757  3000               	movlw	0
  5901  0758  1803               	skipnc
  5902  0759  3001               	movlw	1
  5903  075A  07E4               	addwf	___flmul@prod+2,f
  5904  075B  3000               	movlw	0
  5905  075C  1803               	skipnc
  5906  075D  3001               	movlw	1
  5907  075E  07E5               	addwf	___flmul@prod+3,f
  5908  075F                     l2198:
  5909  075F  1C65               	btfss	___flmul@prod+3,0
  5910  0760  2F62               	goto	u2851
  5911  0761  2F63               	goto	u2850
  5912  0762                     u2851:
  5913  0762  2F82               	goto	l2204
  5914  0763                     u2850:
  5915  0763                     l2200:
  5916  0763  0862               	movf	___flmul@prod,w
  5917  0764  00D6               	movwf	??___flmul
  5918  0765  0863               	movf	___flmul@prod+1,w
  5919  0766  00D7               	movwf	??___flmul+1
  5920  0767  0864               	movf	___flmul@prod+2,w
  5921  0768  00D8               	movwf	??___flmul+2
  5922  0769  0865               	movf	___flmul@prod+3,w
  5923  076A  00D9               	movwf	??___flmul+3
  5924  076B  3001               	movlw	1
  5925  076C  00DA               	movwf	??___flmul+4
  5926  076D                     u2865:
  5927  076D  0D59               	rlf	??___flmul+3,w
  5928  076E  0CD9               	rrf	??___flmul+3,f
  5929  076F  0CD8               	rrf	??___flmul+2,f
  5930  0770  0CD7               	rrf	??___flmul+1,f
  5931  0771  0CD6               	rrf	??___flmul,f
  5932  0772                     u2860:
  5933  0772  0BDA               	decfsz	??___flmul+4,f
  5934  0773  2F6D               	goto	u2865
  5935  0774  0859               	movf	??___flmul+3,w
  5936  0775  00E5               	movwf	___flmul@prod+3
  5937  0776  0858               	movf	??___flmul+2,w
  5938  0777  00E4               	movwf	___flmul@prod+2
  5939  0778  0857               	movf	??___flmul+1,w
  5940  0779  00E3               	movwf	___flmul@prod+1
  5941  077A  0856               	movf	??___flmul,w
  5942  077B  00E2               	movwf	___flmul@prod
  5943  077C                     l2202:
  5944  077C  3001               	movlw	1
  5945  077D  07E6               	addwf	___flmul@temp,f
  5946  077E  1803               	skipnc
  5947  077F  0AE7               	incf	___flmul@temp+1,f
  5948  0780  3000               	movlw	0
  5949  0781  07E7               	addwf	___flmul@temp+1,f
  5950  0782                     l2204:
  5951  0782  0867               	movf	___flmul@temp+1,w
  5952  0783  3A80               	xorlw	128
  5953  0784  00FF               	movwf	btemp+1
  5954  0785  3080               	movlw	128
  5955  0786  027F               	subwf	btemp+1,w
  5956  0787  1D03               	skipz
  5957  0788  2F8B               	goto	u2875
  5958  0789  30FF               	movlw	255
  5959  078A  0266               	subwf	___flmul@temp,w
  5960  078B                     u2875:
  5961  078B  1C03               	skipc
  5962  078C  2F8E               	goto	u2871
  5963  078D  2F8F               	goto	u2870
  5964  078E                     u2871:
  5965  078E  2F9A               	goto	l2208
  5966  078F                     u2870:
  5967  078F                     l2206:
  5968  078F  307F               	movlw	127
  5969  0790  1283               	bcf	3,5	;RP0=0, select bank0
  5970  0791  1303               	bcf	3,6	;RP1=0, select bank0
  5971  0792  00E5               	movwf	___flmul@prod+3
  5972  0793  3080               	movlw	128
  5973  0794  00E4               	movwf	___flmul@prod+2
  5974  0795  3000               	movlw	0
  5975  0796  00E3               	movwf	___flmul@prod+1
  5976  0797  3000               	movlw	0
  5977  0798  00E2               	movwf	___flmul@prod
  5978  0799  2FCF               	goto	l759
  5979  079A                     l2208:
  5980  079A  1283               	bcf	3,5	;RP0=0, select bank0
  5981  079B  1303               	bcf	3,6	;RP1=0, select bank0
  5982  079C  0867               	movf	___flmul@temp+1,w
  5983  079D  3A80               	xorlw	128
  5984  079E  00FF               	movwf	btemp+1
  5985  079F  3080               	movlw	128
  5986  07A0  027F               	subwf	btemp+1,w
  5987  07A1  1D03               	skipz
  5988  07A2  2FA5               	goto	u2885
  5989  07A3  3001               	movlw	1
  5990  07A4  0266               	subwf	___flmul@temp,w
  5991  07A5                     u2885:
  5992  07A5  1803               	skipnc
  5993  07A6  2FA8               	goto	u2881
  5994  07A7  2FA9               	goto	u2880
  5995  07A8                     u2881:
  5996  07A8  2FB5               	goto	l2214
  5997  07A9                     u2880:
  5998  07A9                     l2210:
  5999  07A9  3000               	movlw	0
  6000  07AA  1283               	bcf	3,5	;RP0=0, select bank0
  6001  07AB  1303               	bcf	3,6	;RP1=0, select bank0
  6002  07AC  00E5               	movwf	___flmul@prod+3
  6003  07AD  3000               	movlw	0
  6004  07AE  00E4               	movwf	___flmul@prod+2
  6005  07AF  3000               	movlw	0
  6006  07B0  00E3               	movwf	___flmul@prod+1
  6007  07B1  3000               	movlw	0
  6008  07B2  00E2               	movwf	___flmul@prod
  6009  07B3                     l2212:
  6010  07B3  01DB               	clrf	___flmul@sign
  6011  07B4  2FCF               	goto	l759
  6012  07B5                     l2214:
  6013  07B5  1283               	bcf	3,5	;RP0=0, select bank0
  6014  07B6  1303               	bcf	3,6	;RP1=0, select bank0
  6015  07B7  0866               	movf	___flmul@temp,w
  6016  07B8  00D6               	movwf	??___flmul
  6017  07B9  0856               	movf	??___flmul,w
  6018  07BA  00E1               	movwf	___flmul@bexp
  6019  07BB  30FF               	movlw	255
  6020  07BC  05E2               	andwf	___flmul@prod,f
  6021  07BD  30FF               	movlw	255
  6022  07BE  05E3               	andwf	___flmul@prod+1,f
  6023  07BF  307F               	movlw	127
  6024  07C0  05E4               	andwf	___flmul@prod+2,f
  6025  07C1  3000               	movlw	0
  6026  07C2  05E5               	andwf	___flmul@prod+3,f
  6027  07C3                     l2216:
  6028  07C3  1C61               	btfss	___flmul@bexp,0
  6029  07C4  2FC6               	goto	u2891
  6030  07C5  2FC7               	goto	u2890
  6031  07C6                     u2891:
  6032  07C6  2FC8               	goto	l2220
  6033  07C7                     u2890:
  6034  07C7                     l2218:
  6035  07C7  17E4               	bsf	___flmul@prod+2,7
  6036  07C8                     l2220:
  6037  07C8  0861               	movf	___flmul@bexp,w
  6038  07C9  00D6               	movwf	??___flmul
  6039  07CA  1003               	clrc
  6040  07CB  0C56               	rrf	??___flmul,w
  6041  07CC  00D7               	movwf	??___flmul+1
  6042  07CD  0857               	movf	??___flmul+1,w
  6043  07CE  00E5               	movwf	___flmul@prod+3
  6044  07CF                     l759:
  6045  07CF  085B               	movf	___flmul@sign,w
  6046  07D0  00D6               	movwf	??___flmul
  6047  07D1  0856               	movf	??___flmul,w
  6048  07D2  04E5               	iorwf	___flmul@prod+3,f
  6049  07D3                     l2222:
  6050  07D3  0865               	movf	___flmul@prod+3,w
  6051  07D4  00D1               	movwf	?___flmul+3
  6052  07D5  0864               	movf	___flmul@prod+2,w
  6053  07D6  00D0               	movwf	?___flmul+2
  6054  07D7  0863               	movf	___flmul@prod+1,w
  6055  07D8  00CF               	movwf	?___flmul+1
  6056  07D9  0862               	movf	___flmul@prod,w
  6057  07DA  00CE               	movwf	?___flmul
  6058  07DB                     l747:
  6059  07DB  0008               	return
  6060  07DC                     __end_of___flmul:
  6061                           
  6062                           	psect	text22
  6063  177F                     __ptext22:	
  6064 ;; *************** function __Umul8_16 *****************
  6065 ;; Defined at:
  6066 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8_16.c"
  6067 ;; Parameters:    Size  Location     Type
  6068 ;;  multiplier      1    wreg     unsigned char 
  6069 ;;  multiplicand    1    0[COMMON] unsigned char 
  6070 ;; Auto vars:     Size  Location     Type
  6071 ;;  multiplier      1    8[COMMON] unsigned char 
  6072 ;;  word_mpld       2    6[COMMON] unsigned int 
  6073 ;;  product         2    4[COMMON] unsigned int 
  6074 ;; Return value:  Size  Location     Type
  6075 ;;                  2    0[COMMON] unsigned int 
  6076 ;; Registers used:
  6077 ;;		wreg, status,2, status,0
  6078 ;; Tracked objects:
  6079 ;;		On entry : 0/0
  6080 ;;		On exit  : 0/0
  6081 ;;		Unchanged: 0/0
  6082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6083 ;;      Params:         2       0       0       0       0
  6084 ;;      Locals:         5       0       0       0       0
  6085 ;;      Temps:          2       0       0       0       0
  6086 ;;      Totals:         9       0       0       0       0
  6087 ;;Total ram usage:        9 bytes
  6088 ;; Hardware stack levels used: 1
  6089 ;; This function calls:
  6090 ;;		Nothing
  6091 ;; This function is called by:
  6092 ;;		___flmul
  6093 ;; This function uses a non-reentrant model
  6094 ;;
  6095                           
  6096                           
  6097                           ;psect for function __Umul8_16
  6098  177F                     __Umul8_16:
  6099                           
  6100                           ;incstack = 0
  6101                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6102                           ;__Umul8_16@multiplier stored from wreg
  6103  177F  00F8               	movwf	__Umul8_16@multiplier
  6104  1780                     l1834:
  6105  1780  01F4               	clrf	__Umul8_16@product
  6106  1781  01F5               	clrf	__Umul8_16@product+1
  6107  1782                     l1836:
  6108  1782  0870               	movf	__Umul8_16@multiplicand,w
  6109  1783  00F2               	movwf	??__Umul8_16
  6110  1784  01F3               	clrf	??__Umul8_16+1
  6111  1785  0872               	movf	??__Umul8_16,w
  6112  1786  00F6               	movwf	__Umul8_16@word_mpld
  6113  1787  0873               	movf	??__Umul8_16+1,w
  6114  1788  00F7               	movwf	__Umul8_16@word_mpld+1
  6115  1789                     l1838:
  6116  1789  1C78               	btfss	__Umul8_16@multiplier,0
  6117  178A  2F8C               	goto	u1961
  6118  178B  2F8D               	goto	u1960
  6119  178C                     u1961:
  6120  178C  2F93               	goto	l766
  6121  178D                     u1960:
  6122  178D                     l1840:
  6123  178D  0876               	movf	__Umul8_16@word_mpld,w
  6124  178E  07F4               	addwf	__Umul8_16@product,f
  6125  178F  1803               	skipnc
  6126  1790  0AF5               	incf	__Umul8_16@product+1,f
  6127  1791  0877               	movf	__Umul8_16@word_mpld+1,w
  6128  1792  07F5               	addwf	__Umul8_16@product+1,f
  6129  1793                     l766:
  6130  1793  3001               	movlw	1
  6131  1794                     u1975:
  6132  1794  1003               	clrc
  6133  1795  0DF6               	rlf	__Umul8_16@word_mpld,f
  6134  1796  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  6135  1797  3EFF               	addlw	-1
  6136  1798  1D03               	skipz
  6137  1799  2F94               	goto	u1975
  6138  179A  1003               	clrc
  6139  179B  0CF8               	rrf	__Umul8_16@multiplier,f
  6140  179C                     l1842:
  6141  179C  0878               	movf	__Umul8_16@multiplier,w
  6142  179D  1D03               	btfss	3,2
  6143  179E  2FA0               	goto	u1981
  6144  179F  2FA1               	goto	u1980
  6145  17A0                     u1981:
  6146  17A0  2F89               	goto	l1838
  6147  17A1                     u1980:
  6148  17A1                     l1844:
  6149  17A1  0875               	movf	__Umul8_16@product+1,w
  6150  17A2  00F1               	movwf	?__Umul8_16+1
  6151  17A3  0874               	movf	__Umul8_16@product,w
  6152  17A4  00F0               	movwf	?__Umul8_16
  6153  17A5                     l768:
  6154  17A5  0008               	return
  6155  17A6                     __end_of__Umul8_16:
  6156                           
  6157                           	psect	text23
  6158  029E                     __ptext23:	
  6159 ;; *************** function ___fldiv *****************
  6160 ;; Defined at:
  6161 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcdiv.c"
  6162 ;; Parameters:    Size  Location     Type
  6163 ;;  a               4   20[BANK0 ] unsigned int 
  6164 ;;  b               4   24[BANK0 ] unsigned int 
  6165 ;; Auto vars:     Size  Location     Type
  6166 ;;  grs             4   40[BANK0 ] unsigned long 
  6167 ;;  rem             4   33[BANK0 ] unsigned long 
  6168 ;;  new_exp         2   38[BANK0 ] int 
  6169 ;;  aexp            1   45[BANK0 ] unsigned char 
  6170 ;;  bexp            1   44[BANK0 ] unsigned char 
  6171 ;;  sign            1   37[BANK0 ] unsigned char 
  6172 ;; Return value:  Size  Location     Type
  6173 ;;                  4   20[BANK0 ] unsigned char 
  6174 ;; Registers used:
  6175 ;;		wreg, status,2, status,0, btemp+1
  6176 ;; Tracked objects:
  6177 ;;		On entry : 0/0
  6178 ;;		On exit  : 0/0
  6179 ;;		Unchanged: 0/0
  6180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6181 ;;      Params:         0       8       0       0       0
  6182 ;;      Locals:         0      13       0       0       0
  6183 ;;      Temps:          0       5       0       0       0
  6184 ;;      Totals:         0      26       0       0       0
  6185 ;;Total ram usage:       26 bytes
  6186 ;; Hardware stack levels used: 1
  6187 ;; This function calls:
  6188 ;;		Nothing
  6189 ;; This function is called by:
  6190 ;;		_realizarCalculo
  6191 ;;		_PWM1_Duty
  6192 ;;		_PWM2_Duty
  6193 ;; This function uses a non-reentrant model
  6194 ;;
  6195                           
  6196                           
  6197                           ;psect for function ___fldiv
  6198  029E                     ___fldiv:
  6199  029E                     l1944:	
  6200                           ;incstack = 0
  6201                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  6202                           
  6203  029E  1283               	bcf	3,5	;RP0=0, select bank0
  6204  029F  1303               	bcf	3,6	;RP1=0, select bank0
  6205  02A0  083B               	movf	___fldiv@b+3,w
  6206  02A1  3980               	andlw	128
  6207  02A2  00BC               	movwf	??___fldiv
  6208  02A3  083C               	movf	??___fldiv,w
  6209  02A4  00C5               	movwf	___fldiv@sign
  6210  02A5                     l1946:
  6211  02A5  083B               	movf	___fldiv@b+3,w
  6212  02A6  00BC               	movwf	??___fldiv
  6213  02A7  073C               	addwf	??___fldiv,w
  6214  02A8  00BD               	movwf	??___fldiv+1
  6215  02A9  083D               	movf	??___fldiv+1,w
  6216  02AA  00CC               	movwf	___fldiv@bexp
  6217  02AB                     l1948:
  6218  02AB  1FBA               	btfss	___fldiv@b+2,7
  6219  02AC  2AAE               	goto	u2241
  6220  02AD  2AAF               	goto	u2240
  6221  02AE                     u2241:
  6222  02AE  2AB0               	goto	l1952
  6223  02AF                     u2240:
  6224  02AF                     l1950:
  6225  02AF  144C               	bsf	___fldiv@bexp,0
  6226  02B0                     l1952:
  6227  02B0  084C               	movf	___fldiv@bexp,w
  6228  02B1  1903               	btfsc	3,2
  6229  02B2  2AB4               	goto	u2251
  6230  02B3  2AB5               	goto	u2250
  6231  02B4                     u2251:
  6232  02B4  2AC5               	goto	l1962
  6233  02B5                     u2250:
  6234  02B5                     l1954:
  6235  02B5  0A4C               	incf	___fldiv@bexp,w
  6236  02B6  1D03               	btfss	3,2
  6237  02B7  2AB9               	goto	u2261
  6238  02B8  2ABA               	goto	u2260
  6239  02B9                     u2261:
  6240  02B9  2AC2               	goto	l1958
  6241  02BA                     u2260:
  6242  02BA                     l1956:
  6243  02BA  3000               	movlw	0
  6244  02BB  00BB               	movwf	___fldiv@b+3
  6245  02BC  3000               	movlw	0
  6246  02BD  00BA               	movwf	___fldiv@b+2
  6247  02BE  3000               	movlw	0
  6248  02BF  00B9               	movwf	___fldiv@b+1
  6249  02C0  3000               	movlw	0
  6250  02C1  00B8               	movwf	___fldiv@b
  6251  02C2                     l1958:
  6252  02C2  17BA               	bsf	___fldiv@b+2,7
  6253  02C3                     l1960:
  6254  02C3  01BB               	clrf	___fldiv@b+3
  6255  02C4  2ACD               	goto	l1964
  6256  02C5                     l1962:
  6257  02C5  3000               	movlw	0
  6258  02C6  00BB               	movwf	___fldiv@b+3
  6259  02C7  3000               	movlw	0
  6260  02C8  00BA               	movwf	___fldiv@b+2
  6261  02C9  3000               	movlw	0
  6262  02CA  00B9               	movwf	___fldiv@b+1
  6263  02CB  3000               	movlw	0
  6264  02CC  00B8               	movwf	___fldiv@b
  6265  02CD                     l1964:
  6266  02CD  0837               	movf	___fldiv@a+3,w
  6267  02CE  3980               	andlw	128
  6268  02CF  00BC               	movwf	??___fldiv
  6269  02D0  083C               	movf	??___fldiv,w
  6270  02D1  06C5               	xorwf	___fldiv@sign,f
  6271  02D2                     l1966:
  6272  02D2  0837               	movf	___fldiv@a+3,w
  6273  02D3  00BC               	movwf	??___fldiv
  6274  02D4  073C               	addwf	??___fldiv,w
  6275  02D5  00BD               	movwf	??___fldiv+1
  6276  02D6  083D               	movf	??___fldiv+1,w
  6277  02D7  00CD               	movwf	___fldiv@aexp
  6278  02D8                     l1968:
  6279  02D8  1FB6               	btfss	___fldiv@a+2,7
  6280  02D9  2ADB               	goto	u2271
  6281  02DA  2ADC               	goto	u2270
  6282  02DB                     u2271:
  6283  02DB  2ADD               	goto	l1972
  6284  02DC                     u2270:
  6285  02DC                     l1970:
  6286  02DC  144D               	bsf	___fldiv@aexp,0
  6287  02DD                     l1972:
  6288  02DD  084D               	movf	___fldiv@aexp,w
  6289  02DE  1903               	btfsc	3,2
  6290  02DF  2AE1               	goto	u2281
  6291  02E0  2AE2               	goto	u2280
  6292  02E1                     u2281:
  6293  02E1  2AF2               	goto	l1982
  6294  02E2                     u2280:
  6295  02E2                     l1974:
  6296  02E2  0A4D               	incf	___fldiv@aexp,w
  6297  02E3  1D03               	btfss	3,2
  6298  02E4  2AE6               	goto	u2291
  6299  02E5  2AE7               	goto	u2290
  6300  02E6                     u2291:
  6301  02E6  2AEF               	goto	l1978
  6302  02E7                     u2290:
  6303  02E7                     l1976:
  6304  02E7  3000               	movlw	0
  6305  02E8  00B7               	movwf	___fldiv@a+3
  6306  02E9  3000               	movlw	0
  6307  02EA  00B6               	movwf	___fldiv@a+2
  6308  02EB  3000               	movlw	0
  6309  02EC  00B5               	movwf	___fldiv@a+1
  6310  02ED  3000               	movlw	0
  6311  02EE  00B4               	movwf	___fldiv@a
  6312  02EF                     l1978:
  6313  02EF  17B6               	bsf	___fldiv@a+2,7
  6314  02F0                     l1980:
  6315  02F0  01B7               	clrf	___fldiv@a+3
  6316  02F1  2AFA               	goto	l707
  6317  02F2                     l1982:
  6318  02F2  3000               	movlw	0
  6319  02F3  00B7               	movwf	___fldiv@a+3
  6320  02F4  3000               	movlw	0
  6321  02F5  00B6               	movwf	___fldiv@a+2
  6322  02F6  3000               	movlw	0
  6323  02F7  00B5               	movwf	___fldiv@a+1
  6324  02F8  3000               	movlw	0
  6325  02F9  00B4               	movwf	___fldiv@a
  6326  02FA                     l707:
  6327  02FA  0837               	movf	___fldiv@a+3,w
  6328  02FB  0436               	iorwf	___fldiv@a+2,w
  6329  02FC  0435               	iorwf	___fldiv@a+1,w
  6330  02FD  0434               	iorwf	___fldiv@a,w
  6331  02FE  1D03               	skipz
  6332  02FF  2B01               	goto	u2301
  6333  0300  2B02               	goto	u2300
  6334  0301                     u2301:
  6335  0301  2B1B               	goto	l1992
  6336  0302                     u2300:
  6337  0302                     l1984:
  6338  0302  3000               	movlw	0
  6339  0303  00BB               	movwf	___fldiv@b+3
  6340  0304  3000               	movlw	0
  6341  0305  00BA               	movwf	___fldiv@b+2
  6342  0306  3000               	movlw	0
  6343  0307  00B9               	movwf	___fldiv@b+1
  6344  0308  3000               	movlw	0
  6345  0309  00B8               	movwf	___fldiv@b
  6346  030A  3080               	movlw	128
  6347  030B  04BA               	iorwf	___fldiv@b+2,f
  6348  030C  307F               	movlw	127
  6349  030D  04BB               	iorwf	___fldiv@b+3,f
  6350  030E                     l1986:
  6351  030E  0845               	movf	___fldiv@sign,w
  6352  030F  00BC               	movwf	??___fldiv
  6353  0310  083C               	movf	??___fldiv,w
  6354  0311  04BB               	iorwf	___fldiv@b+3,f
  6355  0312                     l1988:
  6356  0312  083B               	movf	___fldiv@b+3,w
  6357  0313  00B7               	movwf	?___fldiv+3
  6358  0314  083A               	movf	___fldiv@b+2,w
  6359  0315  00B6               	movwf	?___fldiv+2
  6360  0316  0839               	movf	___fldiv@b+1,w
  6361  0317  00B5               	movwf	?___fldiv+1
  6362  0318  0838               	movf	___fldiv@b,w
  6363  0319  00B4               	movwf	?___fldiv
  6364  031A  2C7A               	goto	l709
  6365  031B                     l1992:
  6366  031B  084C               	movf	___fldiv@bexp,w
  6367  031C  1D03               	btfss	3,2
  6368  031D  2B1F               	goto	u2311
  6369  031E  2B20               	goto	u2310
  6370  031F                     u2311:
  6371  031F  2B29               	goto	l1998
  6372  0320                     u2310:
  6373  0320                     l1994:
  6374  0320  3000               	movlw	0
  6375  0321  00B7               	movwf	?___fldiv+3
  6376  0322  3000               	movlw	0
  6377  0323  00B6               	movwf	?___fldiv+2
  6378  0324  3000               	movlw	0
  6379  0325  00B5               	movwf	?___fldiv+1
  6380  0326  3000               	movlw	0
  6381  0327  00B4               	movwf	?___fldiv
  6382  0328  2C7A               	goto	l709
  6383  0329                     l1998:
  6384  0329  084C               	movf	___fldiv@bexp,w
  6385  032A  00BC               	movwf	??___fldiv
  6386  032B  01BD               	clrf	??___fldiv+1
  6387  032C  083D               	movf	??___fldiv+1,w
  6388  032D  00BF               	movwf	??___fldiv+3
  6389  032E  084D               	movf	___fldiv@aexp,w
  6390  032F  023C               	subwf	??___fldiv,w
  6391  0330  00BE               	movwf	??___fldiv+2
  6392  0331  1C03               	skipc
  6393  0332  03BF               	decf	??___fldiv+3,f
  6394  0333  083E               	movf	??___fldiv+2,w
  6395  0334  3E7F               	addlw	127
  6396  0335  00C6               	movwf	___fldiv@new_exp
  6397  0336  083F               	movf	??___fldiv+3,w
  6398  0337  1803               	skipnc
  6399  0338  3E01               	addlw	1
  6400  0339  3E00               	addlw	0
  6401  033A  00C7               	movwf	___fldiv@new_exp+1
  6402  033B                     l2000:
  6403  033B  083B               	movf	___fldiv@b+3,w
  6404  033C  00C4               	movwf	___fldiv@rem+3
  6405  033D  083A               	movf	___fldiv@b+2,w
  6406  033E  00C3               	movwf	___fldiv@rem+2
  6407  033F  0839               	movf	___fldiv@b+1,w
  6408  0340  00C2               	movwf	___fldiv@rem+1
  6409  0341  0838               	movf	___fldiv@b,w
  6410  0342  00C1               	movwf	___fldiv@rem
  6411  0343                     l2002:
  6412  0343  3000               	movlw	0
  6413  0344  00BB               	movwf	___fldiv@b+3
  6414  0345  3000               	movlw	0
  6415  0346  00BA               	movwf	___fldiv@b+2
  6416  0347  3000               	movlw	0
  6417  0348  00B9               	movwf	___fldiv@b+1
  6418  0349  3000               	movlw	0
  6419  034A  00B8               	movwf	___fldiv@b
  6420  034B                     l2004:
  6421  034B  3000               	movlw	0
  6422  034C  00CB               	movwf	___fldiv@grs+3
  6423  034D  3000               	movlw	0
  6424  034E  00CA               	movwf	___fldiv@grs+2
  6425  034F  3000               	movlw	0
  6426  0350  00C9               	movwf	___fldiv@grs+1
  6427  0351  3000               	movlw	0
  6428  0352  00C8               	movwf	___fldiv@grs
  6429  0353                     l2006:
  6430  0353  01CD               	clrf	___fldiv@aexp
  6431  0354  2B9F               	goto	l2026
  6432  0355                     l2008:
  6433  0355  084D               	movf	___fldiv@aexp,w
  6434  0356  1903               	btfsc	3,2
  6435  0357  2B59               	goto	u2321
  6436  0358  2B5A               	goto	u2320
  6437  0359                     u2321:
  6438  0359  2B7A               	goto	l2018
  6439  035A                     u2320:
  6440  035A                     l2010:
  6441  035A  3001               	movlw	1
  6442  035B  00BC               	movwf	??___fldiv
  6443  035C                     u2335:
  6444  035C  1003               	clrc
  6445  035D  0DC1               	rlf	___fldiv@rem,f
  6446  035E  0DC2               	rlf	___fldiv@rem+1,f
  6447  035F  0DC3               	rlf	___fldiv@rem+2,f
  6448  0360  0DC4               	rlf	___fldiv@rem+3,f
  6449  0361  0BBC               	decfsz	??___fldiv,f
  6450  0362  2B5C               	goto	u2335
  6451  0363  3001               	movlw	1
  6452  0364  00BC               	movwf	??___fldiv
  6453  0365                     u2345:
  6454  0365  1003               	clrc
  6455  0366  0DB8               	rlf	___fldiv@b,f
  6456  0367  0DB9               	rlf	___fldiv@b+1,f
  6457  0368  0DBA               	rlf	___fldiv@b+2,f
  6458  0369  0DBB               	rlf	___fldiv@b+3,f
  6459  036A  0BBC               	decfsz	??___fldiv,f
  6460  036B  2B65               	goto	u2345
  6461  036C                     l2012:
  6462  036C  1FCB               	btfss	___fldiv@grs+3,7
  6463  036D  2B6F               	goto	u2351
  6464  036E  2B70               	goto	u2350
  6465  036F                     u2351:
  6466  036F  2B71               	goto	l2016
  6467  0370                     u2350:
  6468  0370                     l2014:
  6469  0370  1438               	bsf	___fldiv@b,0
  6470  0371                     l2016:
  6471  0371  3001               	movlw	1
  6472  0372  00BC               	movwf	??___fldiv
  6473  0373                     u2365:
  6474  0373  1003               	clrc
  6475  0374  0DC8               	rlf	___fldiv@grs,f
  6476  0375  0DC9               	rlf	___fldiv@grs+1,f
  6477  0376  0DCA               	rlf	___fldiv@grs+2,f
  6478  0377  0DCB               	rlf	___fldiv@grs+3,f
  6479  0378  0BBC               	decfsz	??___fldiv,f
  6480  0379  2B73               	goto	u2365
  6481  037A                     l2018:
  6482  037A  0837               	movf	___fldiv@a+3,w
  6483  037B  0244               	subwf	___fldiv@rem+3,w
  6484  037C  1D03               	skipz
  6485  037D  2B88               	goto	u2375
  6486  037E  0836               	movf	___fldiv@a+2,w
  6487  037F  0243               	subwf	___fldiv@rem+2,w
  6488  0380  1D03               	skipz
  6489  0381  2B88               	goto	u2375
  6490  0382  0835               	movf	___fldiv@a+1,w
  6491  0383  0242               	subwf	___fldiv@rem+1,w
  6492  0384  1D03               	skipz
  6493  0385  2B88               	goto	u2375
  6494  0386  0834               	movf	___fldiv@a,w
  6495  0387  0241               	subwf	___fldiv@rem,w
  6496  0388                     u2375:
  6497  0388  1C03               	skipc
  6498  0389  2B8B               	goto	u2371
  6499  038A  2B8C               	goto	u2370
  6500  038B                     u2371:
  6501  038B  2B9B               	goto	l2024
  6502  038C                     u2370:
  6503  038C                     l2020:
  6504  038C  174B               	bsf	___fldiv@grs+3,6
  6505  038D                     l2022:
  6506  038D  0834               	movf	___fldiv@a,w
  6507  038E  02C1               	subwf	___fldiv@rem,f
  6508  038F  0835               	movf	___fldiv@a+1,w
  6509  0390  1C03               	skipc
  6510  0391  0F35               	incfsz	___fldiv@a+1,w
  6511  0392  02C2               	subwf	___fldiv@rem+1,f
  6512  0393  0836               	movf	___fldiv@a+2,w
  6513  0394  1C03               	skipc
  6514  0395  0F36               	incfsz	___fldiv@a+2,w
  6515  0396  02C3               	subwf	___fldiv@rem+2,f
  6516  0397  0837               	movf	___fldiv@a+3,w
  6517  0398  1C03               	skipc
  6518  0399  0F37               	incfsz	___fldiv@a+3,w
  6519  039A  02C4               	subwf	___fldiv@rem+3,f
  6520  039B                     l2024:
  6521  039B  3001               	movlw	1
  6522  039C  00BC               	movwf	??___fldiv
  6523  039D  083C               	movf	??___fldiv,w
  6524  039E  07CD               	addwf	___fldiv@aexp,f
  6525  039F                     l2026:
  6526  039F  301A               	movlw	26
  6527  03A0  024D               	subwf	___fldiv@aexp,w
  6528  03A1  1C03               	skipc
  6529  03A2  2BA4               	goto	u2381
  6530  03A3  2BA5               	goto	u2380
  6531  03A4                     u2381:
  6532  03A4  2B55               	goto	l2008
  6533  03A5                     u2380:
  6534  03A5                     l2028:
  6535  03A5  0844               	movf	___fldiv@rem+3,w
  6536  03A6  0443               	iorwf	___fldiv@rem+2,w
  6537  03A7  0442               	iorwf	___fldiv@rem+1,w
  6538  03A8  0441               	iorwf	___fldiv@rem,w
  6539  03A9  1903               	skipnz
  6540  03AA  2BAC               	goto	u2391
  6541  03AB  2BAD               	goto	u2390
  6542  03AC                     u2391:
  6543  03AC  2BCC               	goto	l2042
  6544  03AD                     u2390:
  6545  03AD                     l2030:
  6546  03AD  1448               	bsf	___fldiv@grs,0
  6547  03AE  2BCC               	goto	l2042
  6548  03AF                     l2032:
  6549  03AF  3001               	movlw	1
  6550  03B0  00BC               	movwf	??___fldiv
  6551  03B1                     u2405:
  6552  03B1  1003               	clrc
  6553  03B2  0DB8               	rlf	___fldiv@b,f
  6554  03B3  0DB9               	rlf	___fldiv@b+1,f
  6555  03B4  0DBA               	rlf	___fldiv@b+2,f
  6556  03B5  0DBB               	rlf	___fldiv@b+3,f
  6557  03B6  0BBC               	decfsz	??___fldiv,f
  6558  03B7  2BB1               	goto	u2405
  6559  03B8                     l2034:
  6560  03B8  1FCB               	btfss	___fldiv@grs+3,7
  6561  03B9  2BBB               	goto	u2411
  6562  03BA  2BBC               	goto	u2410
  6563  03BB                     u2411:
  6564  03BB  2BBD               	goto	l2038
  6565  03BC                     u2410:
  6566  03BC                     l2036:
  6567  03BC  1438               	bsf	___fldiv@b,0
  6568  03BD                     l2038:
  6569  03BD  3001               	movlw	1
  6570  03BE  00BC               	movwf	??___fldiv
  6571  03BF                     u2425:
  6572  03BF  1003               	clrc
  6573  03C0  0DC8               	rlf	___fldiv@grs,f
  6574  03C1  0DC9               	rlf	___fldiv@grs+1,f
  6575  03C2  0DCA               	rlf	___fldiv@grs+2,f
  6576  03C3  0DCB               	rlf	___fldiv@grs+3,f
  6577  03C4  0BBC               	decfsz	??___fldiv,f
  6578  03C5  2BBF               	goto	u2425
  6579  03C6                     l2040:
  6580  03C6  30FF               	movlw	255
  6581  03C7  07C6               	addwf	___fldiv@new_exp,f
  6582  03C8  1803               	skipnc
  6583  03C9  0AC7               	incf	___fldiv@new_exp+1,f
  6584  03CA  30FF               	movlw	255
  6585  03CB  07C7               	addwf	___fldiv@new_exp+1,f
  6586  03CC                     l2042:
  6587  03CC  1FBA               	btfss	___fldiv@b+2,7
  6588  03CD  2BCF               	goto	u2431
  6589  03CE  2BD0               	goto	u2430
  6590  03CF                     u2431:
  6591  03CF  2BAF               	goto	l2032
  6592  03D0                     u2430:
  6593  03D0                     l2044:
  6594  03D0  01CD               	clrf	___fldiv@aexp
  6595  03D1                     l2046:
  6596  03D1  1FCB               	btfss	___fldiv@grs+3,7
  6597  03D2  2BD4               	goto	u2441
  6598  03D3  2BD5               	goto	u2440
  6599  03D4                     u2441:
  6600  03D4  2BF1               	goto	l2054
  6601  03D5                     u2440:
  6602  03D5                     l2048:
  6603  03D5  30FF               	movlw	255
  6604  03D6  0548               	andwf	___fldiv@grs,w
  6605  03D7  00BC               	movwf	??___fldiv
  6606  03D8  30FF               	movlw	255
  6607  03D9  0549               	andwf	___fldiv@grs+1,w
  6608  03DA  00BD               	movwf	??___fldiv+1
  6609  03DB  30FF               	movlw	255
  6610  03DC  054A               	andwf	___fldiv@grs+2,w
  6611  03DD  00BE               	movwf	??___fldiv+2
  6612  03DE  307F               	movlw	127
  6613  03DF  054B               	andwf	___fldiv@grs+3,w
  6614  03E0  00BF               	movwf	??___fldiv+3
  6615  03E1  083F               	movf	??___fldiv+3,w
  6616  03E2  043E               	iorwf	??___fldiv+2,w
  6617  03E3  043D               	iorwf	??___fldiv+1,w
  6618  03E4  043C               	iorwf	??___fldiv,w
  6619  03E5  1903               	skipnz
  6620  03E6  2BE8               	goto	u2451
  6621  03E7  2BE9               	goto	u2450
  6622  03E8                     u2451:
  6623  03E8  2BEC               	goto	l723
  6624  03E9                     u2450:
  6625  03E9                     l2050:
  6626  03E9  01CD               	clrf	___fldiv@aexp
  6627  03EA  0ACD               	incf	___fldiv@aexp,f
  6628  03EB  2BF1               	goto	l2054
  6629  03EC                     l723:
  6630  03EC  1C38               	btfss	___fldiv@b,0
  6631  03ED  2BEF               	goto	u2461
  6632  03EE  2BF0               	goto	u2460
  6633  03EF                     u2461:
  6634  03EF  2BF1               	goto	l2054
  6635  03F0                     u2460:
  6636  03F0  2BE9               	goto	l2050
  6637  03F1                     l2054:
  6638  03F1  084D               	movf	___fldiv@aexp,w
  6639  03F2  1903               	btfsc	3,2
  6640  03F3  2BF5               	goto	u2471
  6641  03F4  2BF6               	goto	u2470
  6642  03F5                     u2471:
  6643  03F5  2C27               	goto	l2064
  6644  03F6                     u2470:
  6645  03F6                     l2056:
  6646  03F6  3001               	movlw	1
  6647  03F7  07B8               	addwf	___fldiv@b,f
  6648  03F8  3000               	movlw	0
  6649  03F9  1803               	skipnc
  6650  03FA  3001               	movlw	1
  6651  03FB  07B9               	addwf	___fldiv@b+1,f
  6652  03FC  3000               	movlw	0
  6653  03FD  1803               	skipnc
  6654  03FE  3001               	movlw	1
  6655  03FF  07BA               	addwf	___fldiv@b+2,f
  6656  0400  3000               	movlw	0
  6657  0401  1803               	skipnc
  6658  0402  3001               	movlw	1
  6659  0403  07BB               	addwf	___fldiv@b+3,f
  6660  0404                     l2058:
  6661  0404  1C3B               	btfss	___fldiv@b+3,0
  6662  0405  2C07               	goto	u2481
  6663  0406  2C08               	goto	u2480
  6664  0407                     u2481:
  6665  0407  2C27               	goto	l2064
  6666  0408                     u2480:
  6667  0408                     l2060:
  6668  0408  0838               	movf	___fldiv@b,w
  6669  0409  00BC               	movwf	??___fldiv
  6670  040A  0839               	movf	___fldiv@b+1,w
  6671  040B  00BD               	movwf	??___fldiv+1
  6672  040C  083A               	movf	___fldiv@b+2,w
  6673  040D  00BE               	movwf	??___fldiv+2
  6674  040E  083B               	movf	___fldiv@b+3,w
  6675  040F  00BF               	movwf	??___fldiv+3
  6676  0410  3001               	movlw	1
  6677  0411  00C0               	movwf	??___fldiv+4
  6678  0412                     u2495:
  6679  0412  0D3F               	rlf	??___fldiv+3,w
  6680  0413  0CBF               	rrf	??___fldiv+3,f
  6681  0414  0CBE               	rrf	??___fldiv+2,f
  6682  0415  0CBD               	rrf	??___fldiv+1,f
  6683  0416  0CBC               	rrf	??___fldiv,f
  6684  0417                     u2490:
  6685  0417  0BC0               	decfsz	??___fldiv+4,f
  6686  0418  2C12               	goto	u2495
  6687  0419  083F               	movf	??___fldiv+3,w
  6688  041A  00BB               	movwf	___fldiv@b+3
  6689  041B  083E               	movf	??___fldiv+2,w
  6690  041C  00BA               	movwf	___fldiv@b+2
  6691  041D  083D               	movf	??___fldiv+1,w
  6692  041E  00B9               	movwf	___fldiv@b+1
  6693  041F  083C               	movf	??___fldiv,w
  6694  0420  00B8               	movwf	___fldiv@b
  6695  0421                     l2062:
  6696  0421  3001               	movlw	1
  6697  0422  07C6               	addwf	___fldiv@new_exp,f
  6698  0423  1803               	skipnc
  6699  0424  0AC7               	incf	___fldiv@new_exp+1,f
  6700  0425  3000               	movlw	0
  6701  0426  07C7               	addwf	___fldiv@new_exp+1,f
  6702  0427                     l2064:
  6703  0427  0847               	movf	___fldiv@new_exp+1,w
  6704  0428  3A80               	xorlw	128
  6705  0429  00FF               	movwf	btemp+1
  6706  042A  3080               	movlw	128
  6707  042B  027F               	subwf	btemp+1,w
  6708  042C  1D03               	skipz
  6709  042D  2C30               	goto	u2505
  6710  042E  30FF               	movlw	255
  6711  042F  0246               	subwf	___fldiv@new_exp,w
  6712  0430                     u2505:
  6713  0430  1C03               	skipc
  6714  0431  2C33               	goto	u2501
  6715  0432  2C34               	goto	u2500
  6716  0433                     u2501:
  6717  0433  2C42               	goto	l2068
  6718  0434                     u2500:
  6719  0434                     l2066:
  6720  0434  30FF               	movlw	255
  6721  0435  1283               	bcf	3,5	;RP0=0, select bank0
  6722  0436  1303               	bcf	3,6	;RP1=0, select bank0
  6723  0437  00C6               	movwf	___fldiv@new_exp
  6724  0438  3000               	movlw	0
  6725  0439  00C7               	movwf	___fldiv@new_exp+1
  6726  043A  3000               	movlw	0
  6727  043B  00BB               	movwf	___fldiv@b+3
  6728  043C  3000               	movlw	0
  6729  043D  00BA               	movwf	___fldiv@b+2
  6730  043E  3000               	movlw	0
  6731  043F  00B9               	movwf	___fldiv@b+1
  6732  0440  3000               	movlw	0
  6733  0441  00B8               	movwf	___fldiv@b
  6734  0442                     l2068:
  6735  0442  1283               	bcf	3,5	;RP0=0, select bank0
  6736  0443  1303               	bcf	3,6	;RP1=0, select bank0
  6737  0444  0847               	movf	___fldiv@new_exp+1,w
  6738  0445  3A80               	xorlw	128
  6739  0446  00FF               	movwf	btemp+1
  6740  0447  3080               	movlw	128
  6741  0448  027F               	subwf	btemp+1,w
  6742  0449  1D03               	skipz
  6743  044A  2C4D               	goto	u2515
  6744  044B  3001               	movlw	1
  6745  044C  0246               	subwf	___fldiv@new_exp,w
  6746  044D                     u2515:
  6747  044D  1803               	skipnc
  6748  044E  2C50               	goto	u2511
  6749  044F  2C51               	goto	u2510
  6750  0450                     u2511:
  6751  0450  2C5E               	goto	l729
  6752  0451                     u2510:
  6753  0451                     l2070:
  6754  0451  1283               	bcf	3,5	;RP0=0, select bank0
  6755  0452  1303               	bcf	3,6	;RP1=0, select bank0
  6756  0453  01C6               	clrf	___fldiv@new_exp
  6757  0454  01C7               	clrf	___fldiv@new_exp+1
  6758  0455                     l2072:
  6759  0455  3000               	movlw	0
  6760  0456  00BB               	movwf	___fldiv@b+3
  6761  0457  3000               	movlw	0
  6762  0458  00BA               	movwf	___fldiv@b+2
  6763  0459  3000               	movlw	0
  6764  045A  00B9               	movwf	___fldiv@b+1
  6765  045B  3000               	movlw	0
  6766  045C  00B8               	movwf	___fldiv@b
  6767  045D                     l2074:
  6768  045D  01C5               	clrf	___fldiv@sign
  6769  045E                     l729:
  6770  045E  1283               	bcf	3,5	;RP0=0, select bank0
  6771  045F  1303               	bcf	3,6	;RP1=0, select bank0
  6772  0460  0846               	movf	___fldiv@new_exp,w
  6773  0461  00BC               	movwf	??___fldiv
  6774  0462  083C               	movf	??___fldiv,w
  6775  0463  00CC               	movwf	___fldiv@bexp
  6776  0464                     l2076:
  6777  0464  1C4C               	btfss	___fldiv@bexp,0
  6778  0465  2C67               	goto	u2521
  6779  0466  2C68               	goto	u2520
  6780  0467                     u2521:
  6781  0467  2C6A               	goto	l2080
  6782  0468                     u2520:
  6783  0468                     l2078:
  6784  0468  17BA               	bsf	___fldiv@b+2,7
  6785  0469  2C6E               	goto	l731
  6786  046A                     l2080:
  6787  046A  307F               	movlw	127
  6788  046B  00BC               	movwf	??___fldiv
  6789  046C  083C               	movf	??___fldiv,w
  6790  046D  05BA               	andwf	___fldiv@b+2,f
  6791  046E                     l731:
  6792  046E  084C               	movf	___fldiv@bexp,w
  6793  046F  00BC               	movwf	??___fldiv
  6794  0470  1003               	clrc
  6795  0471  0C3C               	rrf	??___fldiv,w
  6796  0472  00BD               	movwf	??___fldiv+1
  6797  0473  083D               	movf	??___fldiv+1,w
  6798  0474  00BB               	movwf	___fldiv@b+3
  6799  0475  0845               	movf	___fldiv@sign,w
  6800  0476  00BC               	movwf	??___fldiv
  6801  0477  083C               	movf	??___fldiv,w
  6802  0478  04BB               	iorwf	___fldiv@b+3,f
  6803  0479  2B12               	goto	l1988
  6804  047A                     l709:
  6805  047A  0008               	return
  6806  047B                     __end_of___fldiv:
  6807                           
  6808                           	psect	text24
  6809  08AE                     __ptext24:	
  6810 ;; *************** function _PWM_Init *****************
  6811 ;; Defined at:
  6812 ;;		line 12 in file "PWM.c"
  6813 ;; Parameters:    Size  Location     Type
  6814 ;;  freq            4    6[BANK0 ] long 
  6815 ;; Auto vars:     Size  Location     Type
  6816 ;;		None
  6817 ;; Return value:  Size  Location     Type
  6818 ;;                  1    wreg      void 
  6819 ;; Registers used:
  6820 ;;		wreg, status,2, status,0, pclath, cstack
  6821 ;; Tracked objects:
  6822 ;;		On entry : 0/0
  6823 ;;		On exit  : 0/0
  6824 ;;		Unchanged: 0/0
  6825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6826 ;;      Params:         0       4       0       0       0
  6827 ;;      Locals:         0       0       0       0       0
  6828 ;;      Temps:          4       0       0       0       0
  6829 ;;      Totals:         4       4       0       0       0
  6830 ;;Total ram usage:        8 bytes
  6831 ;; Hardware stack levels used: 1
  6832 ;; Hardware stack levels required when called: 1
  6833 ;; This function calls:
  6834 ;;		___aldiv
  6835 ;; This function is called by:
  6836 ;;		_PWM1_Duty
  6837 ;;		_PWM2_Duty
  6838 ;; This function uses a non-reentrant model
  6839 ;;
  6840                           
  6841                           
  6842                           ;psect for function _PWM_Init
  6843  08AE                     _PWM_Init:
  6844  08AE                     l1848:	
  6845                           ;incstack = 0
  6846                           ; Regs used in _PWM_Init: [wreg+status,2+status,0+pclath+cstack]
  6847                           
  6848                           
  6849                           ;PWM.c: 12: void PWM_Init(long freq);PWM.c: 13: {;PWM.c: 14:   PR2 = (4000000/(freq*4*4)
      +                          ) - 1;
  6850  08AE  1283               	bcf	3,5	;RP0=0, select bank0
  6851  08AF  1303               	bcf	3,6	;RP1=0, select bank0
  6852  08B0  0826               	movf	PWM_Init@freq,w
  6853  08B1  00F9               	movwf	??_PWM_Init
  6854  08B2  0827               	movf	PWM_Init@freq+1,w
  6855  08B3  00FA               	movwf	??_PWM_Init+1
  6856  08B4  0828               	movf	PWM_Init@freq+2,w
  6857  08B5  00FB               	movwf	??_PWM_Init+2
  6858  08B6  0829               	movf	PWM_Init@freq+3,w
  6859  08B7  00FC               	movwf	??_PWM_Init+3
  6860  08B8  3002               	movlw	2
  6861  08B9                     u1995:
  6862  08B9  1003               	clrc
  6863  08BA  0DF9               	rlf	??_PWM_Init,f
  6864  08BB  0DFA               	rlf	??_PWM_Init+1,f
  6865  08BC  0DFB               	rlf	??_PWM_Init+2,f
  6866  08BD  0DFC               	rlf	??_PWM_Init+3,f
  6867  08BE                     u1990:
  6868  08BE  3EFF               	addlw	-1
  6869  08BF  1D03               	skipz
  6870  08C0  28B9               	goto	u1995
  6871  08C1  3002               	movlw	2
  6872  08C2                     u2005:
  6873  08C2  1003               	clrc
  6874  08C3  0DF9               	rlf	??_PWM_Init,f
  6875  08C4  0DFA               	rlf	??_PWM_Init+1,f
  6876  08C5  0DFB               	rlf	??_PWM_Init+2,f
  6877  08C6  0DFC               	rlf	??_PWM_Init+3,f
  6878  08C7                     u2000:
  6879  08C7  3EFF               	addlw	-1
  6880  08C8  1D03               	skipz
  6881  08C9  28C2               	goto	u2005
  6882  08CA  087C               	movf	??_PWM_Init+3,w
  6883  08CB  00F3               	movwf	___aldiv@divisor+3
  6884  08CC  087B               	movf	??_PWM_Init+2,w
  6885  08CD  00F2               	movwf	___aldiv@divisor+2
  6886  08CE  087A               	movf	??_PWM_Init+1,w
  6887  08CF  00F1               	movwf	___aldiv@divisor+1
  6888  08D0  0879               	movf	??_PWM_Init,w
  6889  08D1  00F0               	movwf	___aldiv@divisor
  6890  08D2  3000               	movlw	0
  6891  08D3  00F7               	movwf	___aldiv@dividend+3
  6892  08D4  303D               	movlw	61
  6893  08D5  00F6               	movwf	___aldiv@dividend+2
  6894  08D6  3009               	movlw	9
  6895  08D7  00F5               	movwf	___aldiv@dividend+1
  6896  08D8  3000               	movlw	0
  6897  08D9  00F4               	movwf	___aldiv@dividend
  6898  08DA  120A  158A  2342  120A  158A  	fcall	___aldiv
  6899  08DF  0870               	movf	?___aldiv,w
  6900  08E0  3EFF               	addlw	255
  6901  08E1  1683               	bsf	3,5	;RP0=1, select bank1
  6902  08E2  1303               	bcf	3,6	;RP1=0, select bank1
  6903  08E3  0092               	movwf	18	;volatile
  6904  08E4                     l180:
  6905  08E4  0008               	return
  6906  08E5                     __end_of_PWM_Init:
  6907                           
  6908                           	psect	text25
  6909  0B42                     __ptext25:	
  6910 ;; *************** function ___aldiv *****************
  6911 ;; Defined at:
  6912 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\aldiv.c"
  6913 ;; Parameters:    Size  Location     Type
  6914 ;;  divisor         4    0[COMMON] long 
  6915 ;;  dividend        4    4[COMMON] long 
  6916 ;; Auto vars:     Size  Location     Type
  6917 ;;  quotient        4    2[BANK0 ] long 
  6918 ;;  sign            1    1[BANK0 ] unsigned char 
  6919 ;;  counter         1    0[BANK0 ] unsigned char 
  6920 ;; Return value:  Size  Location     Type
  6921 ;;                  4    0[COMMON] long 
  6922 ;; Registers used:
  6923 ;;		wreg, status,2, status,0
  6924 ;; Tracked objects:
  6925 ;;		On entry : 0/0
  6926 ;;		On exit  : 0/0
  6927 ;;		Unchanged: 0/0
  6928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6929 ;;      Params:         8       0       0       0       0
  6930 ;;      Locals:         0       6       0       0       0
  6931 ;;      Temps:          1       0       0       0       0
  6932 ;;      Totals:         9       6       0       0       0
  6933 ;;Total ram usage:       15 bytes
  6934 ;; Hardware stack levels used: 1
  6935 ;; This function calls:
  6936 ;;		Nothing
  6937 ;; This function is called by:
  6938 ;;		_PWM_Init
  6939 ;;		_PWM1_Duty
  6940 ;;		_PWM2_Duty
  6941 ;; This function uses a non-reentrant model
  6942 ;;
  6943                           
  6944                           
  6945                           ;psect for function ___aldiv
  6946  0B42                     ___aldiv:
  6947  0B42                     l1794:	
  6948                           ;incstack = 0
  6949                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  6950                           
  6951  0B42  1283               	bcf	3,5	;RP0=0, select bank0
  6952  0B43  1303               	bcf	3,6	;RP1=0, select bank0
  6953  0B44  01A1               	clrf	___aldiv@sign
  6954  0B45                     l1796:
  6955  0B45  1FF3               	btfss	___aldiv@divisor+3,7
  6956  0B46  2B48               	goto	u1861
  6957  0B47  2B49               	goto	u1860
  6958  0B48                     u1861:
  6959  0B48  2B56               	goto	l423
  6960  0B49                     u1860:
  6961  0B49                     l1798:
  6962  0B49  09F0               	comf	___aldiv@divisor,f
  6963  0B4A  09F1               	comf	___aldiv@divisor+1,f
  6964  0B4B  09F2               	comf	___aldiv@divisor+2,f
  6965  0B4C  09F3               	comf	___aldiv@divisor+3,f
  6966  0B4D  0AF0               	incf	___aldiv@divisor,f
  6967  0B4E  1903               	skipnz
  6968  0B4F  0AF1               	incf	___aldiv@divisor+1,f
  6969  0B50  1903               	skipnz
  6970  0B51  0AF2               	incf	___aldiv@divisor+2,f
  6971  0B52  1903               	skipnz
  6972  0B53  0AF3               	incf	___aldiv@divisor+3,f
  6973  0B54  01A1               	clrf	___aldiv@sign
  6974  0B55  0AA1               	incf	___aldiv@sign,f
  6975  0B56                     l423:
  6976  0B56  1FF7               	btfss	___aldiv@dividend+3,7
  6977  0B57  2B59               	goto	u1871
  6978  0B58  2B5A               	goto	u1870
  6979  0B59                     u1871:
  6980  0B59  2B69               	goto	l1804
  6981  0B5A                     u1870:
  6982  0B5A                     l1800:
  6983  0B5A  09F4               	comf	___aldiv@dividend,f
  6984  0B5B  09F5               	comf	___aldiv@dividend+1,f
  6985  0B5C  09F6               	comf	___aldiv@dividend+2,f
  6986  0B5D  09F7               	comf	___aldiv@dividend+3,f
  6987  0B5E  0AF4               	incf	___aldiv@dividend,f
  6988  0B5F  1903               	skipnz
  6989  0B60  0AF5               	incf	___aldiv@dividend+1,f
  6990  0B61  1903               	skipnz
  6991  0B62  0AF6               	incf	___aldiv@dividend+2,f
  6992  0B63  1903               	skipnz
  6993  0B64  0AF7               	incf	___aldiv@dividend+3,f
  6994  0B65                     l1802:
  6995  0B65  3001               	movlw	1
  6996  0B66  00F8               	movwf	??___aldiv
  6997  0B67  0878               	movf	??___aldiv,w
  6998  0B68  06A1               	xorwf	___aldiv@sign,f
  6999  0B69                     l1804:
  7000  0B69  3000               	movlw	0
  7001  0B6A  00A5               	movwf	___aldiv@quotient+3
  7002  0B6B  3000               	movlw	0
  7003  0B6C  00A4               	movwf	___aldiv@quotient+2
  7004  0B6D  3000               	movlw	0
  7005  0B6E  00A3               	movwf	___aldiv@quotient+1
  7006  0B6F  3000               	movlw	0
  7007  0B70  00A2               	movwf	___aldiv@quotient
  7008  0B71                     l1806:
  7009  0B71  0873               	movf	___aldiv@divisor+3,w
  7010  0B72  0472               	iorwf	___aldiv@divisor+2,w
  7011  0B73  0471               	iorwf	___aldiv@divisor+1,w
  7012  0B74  0470               	iorwf	___aldiv@divisor,w
  7013  0B75  1903               	skipnz
  7014  0B76  2B78               	goto	u1881
  7015  0B77  2B79               	goto	u1880
  7016  0B78                     u1881:
  7017  0B78  2BC6               	goto	l1826
  7018  0B79                     u1880:
  7019  0B79                     l1808:
  7020  0B79  01A0               	clrf	___aldiv@counter
  7021  0B7A  0AA0               	incf	___aldiv@counter,f
  7022  0B7B  2B89               	goto	l1812
  7023  0B7C                     l1810:
  7024  0B7C  3001               	movlw	1
  7025  0B7D  00F8               	movwf	??___aldiv
  7026  0B7E                     u1895:
  7027  0B7E  1003               	clrc
  7028  0B7F  0DF0               	rlf	___aldiv@divisor,f
  7029  0B80  0DF1               	rlf	___aldiv@divisor+1,f
  7030  0B81  0DF2               	rlf	___aldiv@divisor+2,f
  7031  0B82  0DF3               	rlf	___aldiv@divisor+3,f
  7032  0B83  0BF8               	decfsz	??___aldiv,f
  7033  0B84  2B7E               	goto	u1895
  7034  0B85  3001               	movlw	1
  7035  0B86  00F8               	movwf	??___aldiv
  7036  0B87  0878               	movf	??___aldiv,w
  7037  0B88  07A0               	addwf	___aldiv@counter,f
  7038  0B89                     l1812:
  7039  0B89  1FF3               	btfss	___aldiv@divisor+3,7
  7040  0B8A  2B8C               	goto	u1901
  7041  0B8B  2B8D               	goto	u1900
  7042  0B8C                     u1901:
  7043  0B8C  2B7C               	goto	l1810
  7044  0B8D                     u1900:
  7045  0B8D                     l1814:
  7046  0B8D  3001               	movlw	1
  7047  0B8E  00F8               	movwf	??___aldiv
  7048  0B8F                     u1915:
  7049  0B8F  1003               	clrc
  7050  0B90  0DA2               	rlf	___aldiv@quotient,f
  7051  0B91  0DA3               	rlf	___aldiv@quotient+1,f
  7052  0B92  0DA4               	rlf	___aldiv@quotient+2,f
  7053  0B93  0DA5               	rlf	___aldiv@quotient+3,f
  7054  0B94  0BF8               	decfsz	??___aldiv,f
  7055  0B95  2B8F               	goto	u1915
  7056  0B96                     l1816:
  7057  0B96  0873               	movf	___aldiv@divisor+3,w
  7058  0B97  0277               	subwf	___aldiv@dividend+3,w
  7059  0B98  1D03               	skipz
  7060  0B99  2BA4               	goto	u1925
  7061  0B9A  0872               	movf	___aldiv@divisor+2,w
  7062  0B9B  0276               	subwf	___aldiv@dividend+2,w
  7063  0B9C  1D03               	skipz
  7064  0B9D  2BA4               	goto	u1925
  7065  0B9E  0871               	movf	___aldiv@divisor+1,w
  7066  0B9F  0275               	subwf	___aldiv@dividend+1,w
  7067  0BA0  1D03               	skipz
  7068  0BA1  2BA4               	goto	u1925
  7069  0BA2  0870               	movf	___aldiv@divisor,w
  7070  0BA3  0274               	subwf	___aldiv@dividend,w
  7071  0BA4                     u1925:
  7072  0BA4  1C03               	skipc
  7073  0BA5  2BA7               	goto	u1921
  7074  0BA6  2BA8               	goto	u1920
  7075  0BA7                     u1921:
  7076  0BA7  2BB7               	goto	l1822
  7077  0BA8                     u1920:
  7078  0BA8                     l1818:
  7079  0BA8  0870               	movf	___aldiv@divisor,w
  7080  0BA9  02F4               	subwf	___aldiv@dividend,f
  7081  0BAA  0871               	movf	___aldiv@divisor+1,w
  7082  0BAB  1C03               	skipc
  7083  0BAC  0F71               	incfsz	___aldiv@divisor+1,w
  7084  0BAD  02F5               	subwf	___aldiv@dividend+1,f
  7085  0BAE  0872               	movf	___aldiv@divisor+2,w
  7086  0BAF  1C03               	skipc
  7087  0BB0  0F72               	incfsz	___aldiv@divisor+2,w
  7088  0BB1  02F6               	subwf	___aldiv@dividend+2,f
  7089  0BB2  0873               	movf	___aldiv@divisor+3,w
  7090  0BB3  1C03               	skipc
  7091  0BB4  0F73               	incfsz	___aldiv@divisor+3,w
  7092  0BB5  02F7               	subwf	___aldiv@dividend+3,f
  7093  0BB6                     l1820:
  7094  0BB6  1422               	bsf	___aldiv@quotient,0
  7095  0BB7                     l1822:
  7096  0BB7  3001               	movlw	1
  7097  0BB8                     u1935:
  7098  0BB8  1003               	clrc
  7099  0BB9  0CF3               	rrf	___aldiv@divisor+3,f
  7100  0BBA  0CF2               	rrf	___aldiv@divisor+2,f
  7101  0BBB  0CF1               	rrf	___aldiv@divisor+1,f
  7102  0BBC  0CF0               	rrf	___aldiv@divisor,f
  7103  0BBD  3EFF               	addlw	-1
  7104  0BBE  1D03               	skipz
  7105  0BBF  2BB8               	goto	u1935
  7106  0BC0                     l1824:
  7107  0BC0  3001               	movlw	1
  7108  0BC1  02A0               	subwf	___aldiv@counter,f
  7109  0BC2  1D03               	btfss	3,2
  7110  0BC3  2BC5               	goto	u1941
  7111  0BC4  2BC6               	goto	u1940
  7112  0BC5                     u1941:
  7113  0BC5  2B8D               	goto	l1814
  7114  0BC6                     u1940:
  7115  0BC6                     l1826:
  7116  0BC6  0821               	movf	___aldiv@sign,w
  7117  0BC7  1903               	btfsc	3,2
  7118  0BC8  2BCA               	goto	u1951
  7119  0BC9  2BCB               	goto	u1950
  7120  0BCA                     u1951:
  7121  0BCA  2BD6               	goto	l1830
  7122  0BCB                     u1950:
  7123  0BCB                     l1828:
  7124  0BCB  09A2               	comf	___aldiv@quotient,f
  7125  0BCC  09A3               	comf	___aldiv@quotient+1,f
  7126  0BCD  09A4               	comf	___aldiv@quotient+2,f
  7127  0BCE  09A5               	comf	___aldiv@quotient+3,f
  7128  0BCF  0AA2               	incf	___aldiv@quotient,f
  7129  0BD0  1903               	skipnz
  7130  0BD1  0AA3               	incf	___aldiv@quotient+1,f
  7131  0BD2  1903               	skipnz
  7132  0BD3  0AA4               	incf	___aldiv@quotient+2,f
  7133  0BD4  1903               	skipnz
  7134  0BD5  0AA5               	incf	___aldiv@quotient+3,f
  7135  0BD6                     l1830:
  7136  0BD6  0825               	movf	___aldiv@quotient+3,w
  7137  0BD7  00F3               	movwf	?___aldiv+3
  7138  0BD8  0824               	movf	___aldiv@quotient+2,w
  7139  0BD9  00F2               	movwf	?___aldiv+2
  7140  0BDA  0823               	movf	___aldiv@quotient+1,w
  7141  0BDB  00F1               	movwf	?___aldiv+1
  7142  0BDC  0822               	movf	___aldiv@quotient,w
  7143  0BDD  00F0               	movwf	?___aldiv
  7144  0BDE                     l433:
  7145  0BDE  0008               	return
  7146  0BDF                     __end_of___aldiv:
  7147                           
  7148                           	psect	text26
  7149  0844                     __ptext26:	
  7150 ;; *************** function _ADC_Read *****************
  7151 ;; Defined at:
  7152 ;;		line 17 in file "adc.c"
  7153 ;; Parameters:    Size  Location     Type
  7154 ;;  channel         1    wreg     unsigned char 
  7155 ;; Auto vars:     Size  Location     Type
  7156 ;;  channel         1    4[COMMON] unsigned char 
  7157 ;; Return value:  Size  Location     Type
  7158 ;;                  2    0[COMMON] unsigned int 
  7159 ;; Registers used:
  7160 ;;		wreg, status,2, status,0
  7161 ;; Tracked objects:
  7162 ;;		On entry : 0/0
  7163 ;;		On exit  : 0/0
  7164 ;;		Unchanged: 0/0
  7165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7166 ;;      Params:         2       0       0       0       0
  7167 ;;      Locals:         1       0       0       0       0
  7168 ;;      Temps:          2       0       0       0       0
  7169 ;;      Totals:         5       0       0       0       0
  7170 ;;Total ram usage:        5 bytes
  7171 ;; Hardware stack levels used: 1
  7172 ;; This function calls:
  7173 ;;		Nothing
  7174 ;; This function is called by:
  7175 ;;		_realizarCalculo
  7176 ;;		_controlarCooler
  7177 ;;		_realizarCalculo2
  7178 ;; This function uses a non-reentrant model
  7179 ;;
  7180                           
  7181                           
  7182                           ;psect for function _ADC_Read
  7183  0844                     _ADC_Read:
  7184                           
  7185                           ;incstack = 0
  7186                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  7187                           ;ADC_Read@channel stored from wreg
  7188  0844  00F4               	movwf	ADC_Read@channel
  7189  0845                     l2362:
  7190                           
  7191                           ;adc.c: 17: unsigned int ADC_Read(unsigned char channel);adc.c: 18: {;adc.c: 19:    if(c
      +                          hannel > 7)
  7192  0845  3008               	movlw	8
  7193  0846  0274               	subwf	ADC_Read@channel,w
  7194  0847  1C03               	skipc
  7195  0848  284A               	goto	u3141
  7196  0849  284B               	goto	u3140
  7197  084A                     u3141:
  7198  084A  284E               	goto	l2368
  7199  084B                     u3140:
  7200  084B                     l2364:
  7201                           
  7202                           ;adc.c: 20:      return 0;
  7203  084B  01F0               	clrf	?_ADC_Read
  7204  084C  01F1               	clrf	?_ADC_Read+1
  7205  084D  2877               	goto	l219
  7206  084E                     l2368:
  7207                           
  7208                           ;adc.c: 22:    ADCON0 &= 0xC5;
  7209  084E  30C5               	movlw	197
  7210  084F  00F2               	movwf	??_ADC_Read
  7211  0850  0872               	movf	??_ADC_Read,w
  7212  0851  1283               	bcf	3,5	;RP0=0, select bank0
  7213  0852  1303               	bcf	3,6	;RP1=0, select bank0
  7214  0853  059F               	andwf	31,f	;volatile
  7215                           
  7216                           ;adc.c: 23:    ADCON0 |= channel<<3;
  7217  0854  0874               	movf	ADC_Read@channel,w	;volatile
  7218  0855  00F2               	movwf	??_ADC_Read
  7219  0856  3002               	movlw	2
  7220  0857                     u3155:
  7221  0857  1003               	clrc
  7222  0858  0DF2               	rlf	??_ADC_Read,f
  7223  0859  3EFF               	addlw	-1
  7224  085A  1D03               	skipz
  7225  085B  2857               	goto	u3155
  7226  085C  1003               	clrc
  7227  085D  0D72               	rlf	??_ADC_Read,w
  7228  085E  00F3               	movwf	??_ADC_Read+1
  7229  085F  0873               	movf	??_ADC_Read+1,w
  7230  0860  049F               	iorwf	31,f	;volatile
  7231  0861                     l2370:
  7232                           
  7233                           ;adc.c: 24:    _delay((unsigned long)((2)*(4000000/4000.0)));
  7234  0861  3003               	movlw	3
  7235  0862  00F3               	movwf	??_ADC_Read+1
  7236  0863  3097               	movlw	151
  7237  0864  00F2               	movwf	??_ADC_Read
  7238  0865                     u3717:
  7239  0865  0BF2               	decfsz	??_ADC_Read,f
  7240  0866  2865               	goto	u3717
  7241  0867  0BF3               	decfsz	??_ADC_Read+1,f
  7242  0868  2865               	goto	u3717
  7243  0869  286A               	nop2
  7244  086A                     l2372:
  7245                           
  7246                           ;adc.c: 25:    GO_nDONE = 1;
  7247  086A  1283               	bcf	3,5	;RP0=0, select bank0
  7248  086B  1303               	bcf	3,6	;RP1=0, select bank0
  7249  086C  151F               	bsf	31,2	;volatile
  7250  086D                     l220:	
  7251                           ;adc.c: 26:    while(GO_nDONE);
  7252                           
  7253  086D  191F               	btfsc	31,2	;volatile
  7254  086E  2870               	goto	u3161
  7255  086F  2871               	goto	u3160
  7256  0870                     u3161:
  7257  0870  286D               	goto	l220
  7258  0871                     u3160:
  7259  0871                     l2374:
  7260                           
  7261                           ;adc.c: 27:    return ((unsigned int)(ADRESH<<8)+ADRESL);
  7262  0871  081E               	movf	30,w	;volatile
  7263  0872  00F1               	movwf	?_ADC_Read+1
  7264  0873  1683               	bsf	3,5	;RP0=1, select bank1
  7265  0874  1303               	bcf	3,6	;RP1=0, select bank1
  7266  0875  081E               	movf	30,w	;volatile
  7267  0876  00F0               	movwf	?_ADC_Read
  7268  0877                     l219:
  7269  0877  0008               	return
  7270  0878                     __end_of_ADC_Read:
  7271                           
  7272                           	psect	text27
  7273  1717                     __ptext27:	
  7274 ;; *************** function _PWM2_Start *****************
  7275 ;; Defined at:
  7276 ;;		line 59 in file "PWM.c"
  7277 ;; Parameters:    Size  Location     Type
  7278 ;;		None
  7279 ;; Auto vars:     Size  Location     Type
  7280 ;;		None
  7281 ;; Return value:  Size  Location     Type
  7282 ;;                  1    wreg      void 
  7283 ;; Registers used:
  7284 ;;		None
  7285 ;; Tracked objects:
  7286 ;;		On entry : 0/0
  7287 ;;		On exit  : 0/0
  7288 ;;		Unchanged: 0/0
  7289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7290 ;;      Params:         0       0       0       0       0
  7291 ;;      Locals:         0       0       0       0       0
  7292 ;;      Temps:          0       0       0       0       0
  7293 ;;      Totals:         0       0       0       0       0
  7294 ;;Total ram usage:        0 bytes
  7295 ;; Hardware stack levels used: 1
  7296 ;; This function calls:
  7297 ;;		Nothing
  7298 ;; This function is called by:
  7299 ;;		_main
  7300 ;; This function uses a non-reentrant model
  7301 ;;
  7302                           
  7303                           
  7304                           ;psect for function _PWM2_Start
  7305  1717                     _PWM2_Start:
  7306  1717                     l2642:	
  7307                           ;incstack = 0
  7308                           ; Regs used in _PWM2_Start: []
  7309                           
  7310                           
  7311                           ;PWM.c: 61:   CCP2M3 = 1;
  7312  1717  1283               	bcf	3,5	;RP0=0, select bank0
  7313  1718  1303               	bcf	3,6	;RP1=0, select bank0
  7314  1719  159D               	bsf	29,3	;volatile
  7315                           
  7316                           ;PWM.c: 62:   CCP2M2 = 1;
  7317  171A  151D               	bsf	29,2	;volatile
  7318                           
  7319                           ;PWM.c: 67:     T2CKPS0 = 1;
  7320  171B  1412               	bsf	18,0	;volatile
  7321                           
  7322                           ;PWM.c: 68:     T2CKPS1 = 0;
  7323  171C  1092               	bcf	18,1	;volatile
  7324                           
  7325                           ;PWM.c: 73:     TMR2ON = 1;
  7326  171D  1512               	bsf	18,2	;volatile
  7327                           
  7328                           ;PWM.c: 74:     TRISC1 = 0;
  7329  171E  1683               	bsf	3,5	;RP0=1, select bank1
  7330  171F  1303               	bcf	3,6	;RP1=0, select bank1
  7331  1720  1087               	bcf	7,1	;volatile
  7332  1721                     l194:
  7333  1721  0008               	return
  7334  1722                     __end_of_PWM2_Start:
  7335                           
  7336                           	psect	text28
  7337  170E                     __ptext28:	
  7338 ;; *************** function _PWM1_Start *****************
  7339 ;; Defined at:
  7340 ;;		line 41 in file "PWM.c"
  7341 ;; Parameters:    Size  Location     Type
  7342 ;;		None
  7343 ;; Auto vars:     Size  Location     Type
  7344 ;;		None
  7345 ;; Return value:  Size  Location     Type
  7346 ;;                  1    wreg      void 
  7347 ;; Registers used:
  7348 ;;		None
  7349 ;; Tracked objects:
  7350 ;;		On entry : 0/0
  7351 ;;		On exit  : 0/0
  7352 ;;		Unchanged: 0/0
  7353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7354 ;;      Params:         0       0       0       0       0
  7355 ;;      Locals:         0       0       0       0       0
  7356 ;;      Temps:          0       0       0       0       0
  7357 ;;      Totals:         0       0       0       0       0
  7358 ;;Total ram usage:        0 bytes
  7359 ;; Hardware stack levels used: 1
  7360 ;; This function calls:
  7361 ;;		Nothing
  7362 ;; This function is called by:
  7363 ;;		_main
  7364 ;; This function uses a non-reentrant model
  7365 ;;
  7366                           
  7367                           
  7368                           ;psect for function _PWM1_Start
  7369  170E                     _PWM1_Start:
  7370  170E                     l2640:	
  7371                           ;incstack = 0
  7372                           ; Regs used in _PWM1_Start: []
  7373                           
  7374                           
  7375                           ;PWM.c: 43:   CCP1M3 = 1;
  7376  170E  1283               	bcf	3,5	;RP0=0, select bank0
  7377  170F  1303               	bcf	3,6	;RP1=0, select bank0
  7378  1710  1597               	bsf	23,3	;volatile
  7379                           
  7380                           ;PWM.c: 44:   CCP1M2 = 1;
  7381  1711  1517               	bsf	23,2	;volatile
  7382                           
  7383                           ;PWM.c: 55:   TMR2ON = 1;
  7384  1712  1512               	bsf	18,2	;volatile
  7385                           
  7386                           ;PWM.c: 56:   TRISC2 = 0;
  7387  1713  1683               	bsf	3,5	;RP0=1, select bank1
  7388  1714  1303               	bcf	3,6	;RP1=0, select bank1
  7389  1715  1107               	bcf	7,2	;volatile
  7390  1716                     l191:
  7391  1716  0008               	return
  7392  1717                     __end_of_PWM1_Start:
  7393                           
  7394                           	psect	text29
  7395  1705                     __ptext29:	
  7396 ;; *************** function _ADC_Init *****************
  7397 ;; Defined at:
  7398 ;;		line 11 in file "adc.c"
  7399 ;; Parameters:    Size  Location     Type
  7400 ;;		None
  7401 ;; Auto vars:     Size  Location     Type
  7402 ;;		None
  7403 ;; Return value:  Size  Location     Type
  7404 ;;                  1    wreg      void 
  7405 ;; Registers used:
  7406 ;;		wreg
  7407 ;; Tracked objects:
  7408 ;;		On entry : 0/0
  7409 ;;		On exit  : 0/0
  7410 ;;		Unchanged: 0/0
  7411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7412 ;;      Params:         0       0       0       0       0
  7413 ;;      Locals:         0       0       0       0       0
  7414 ;;      Temps:          0       0       0       0       0
  7415 ;;      Totals:         0       0       0       0       0
  7416 ;;Total ram usage:        0 bytes
  7417 ;; Hardware stack levels used: 1
  7418 ;; This function calls:
  7419 ;;		Nothing
  7420 ;; This function is called by:
  7421 ;;		_main
  7422 ;; This function uses a non-reentrant model
  7423 ;;
  7424                           
  7425                           
  7426                           ;psect for function _ADC_Init
  7427  1705                     _ADC_Init:
  7428  1705                     l2638:	
  7429                           ;incstack = 0
  7430                           ; Regs used in _ADC_Init: [wreg]
  7431                           
  7432                           
  7433                           ;adc.c: 13:    ADCON1 = 0x80;
  7434  1705  3080               	movlw	128
  7435  1706  1683               	bsf	3,5	;RP0=1, select bank1
  7436  1707  1303               	bcf	3,6	;RP1=0, select bank1
  7437  1708  009F               	movwf	31	;volatile
  7438                           
  7439                           ;adc.c: 14:    ADCON0 = 0xC1;
  7440  1709  30C1               	movlw	193
  7441  170A  1283               	bcf	3,5	;RP0=0, select bank0
  7442  170B  1303               	bcf	3,6	;RP1=0, select bank0
  7443  170C  009F               	movwf	31	;volatile
  7444  170D                     l215:
  7445  170D  0008               	return
  7446  170E                     __end_of_ADC_Init:
  7447  007E                     btemp	set	126	;btemp
  7448  007E                     wtemp0	set	126
  7449                           
  7450                           	psect	config
  7451                           
  7452                           ;Config register CONFIG @ 0x2007
  7453                           ;	Oscillator Selection bits
  7454                           ;	FOSC = HS, HS oscillator
  7455                           ;	Watchdog Timer Enable bit
  7456                           ;	WDTE = OFF, WDT disabled
  7457                           ;	Power-up Timer Enable bit
  7458                           ;	PWRTE = OFF, PWRT disabled
  7459                           ;	Brown-out Reset Enable bit
  7460                           ;	BOREN = OFF, BOR disabled
  7461                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  7462                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  7463                           ;	Data EEPROM Memory Code Protection bit
  7464                           ;	CPD = OFF, Data EEPROM code protection off
  7465                           ;	Flash Program Memory Write Enable bits
  7466                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  7467                           ;	In-Circuit Debugger Mode bit
  7468                           ;	DEBUG = 0x1, unprogrammed default
  7469                           ;	Flash Program Memory Code Protection bit
  7470                           ;	CP = OFF, Code protection off
  7471  2007                     	org	8199
  7472  2007  3F3A               	dw	16186

Data Sizes:
    Strings     39
    Constant    10
    Data        8
    BSS         72
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80      9      57
    BANK3            96      0      32
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_9(CODE[3]), STR_7(CODE[3]), STR_5(CODE[3]), STR_3(CODE[3]), 
		 -> STR_2(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 32
		 -> string(BANK3[32]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_11(CODE[12]), STR_10(CODE[12]), STR_8(CODE[6]), STR_6(CODE[6]), 
		 -> STR_4(CODE[6]), string(BANK3[32]), STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _realizarCalculo->___fltol
    ___wmul->_ADC_Read
    _PWM1_Duty->_PWM_Init
    _PWM1_Duty->___fltol
    _lcd_init->_lcd_cmd
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcd_str->_lcd_dat
    _lcd_dat->_lcd_wr
    _lcd_cmd->_lcd_wr
    ___awdiv->___awmod
    _PWM2_Duty->_PWM_Init
    _PWM2_Duty->___fltol
    ___xxtofl->___wmul
    ___fltol->___wmul
    ___flmul->___wmul
    ___fldiv->___wmul
    _PWM_Init->___aldiv

Critical Paths under _main in BANK0

    _realizarCalculo->_PWM1_Duty
    _PWM1_Duty->___fltol
    _imprimirValoresLcd->_sprintf
    _controlarCooler->_PWM2_Duty
    _PWM2_Duty->___fltol
    ___xxtofl->___aldiv
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    _PWM_Init->___aldiv

Critical Paths under _main in BANK1

    _main->_controlarCooler
    _main->_realizarCalculo
    _realizarCalculo->_PWM1_Duty
    _PWM1_Duty->___fltol
    _controlarCooler->_PWM2_Duty
    _PWM2_Duty->___fltol

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   30676
                           _ADC_Init
                         _PWM1_Start
                         _PWM2_Start
                    _controlarCooler
                   _controlarValores
               _controleMaximoMinimo
                 _imprimirValoresLcd
                            _lcd_cmd
                           _lcd_init
                            _lcd_str
                    _realizarCalculo
 ---------------------------------------------------------------------------------
 (1) _realizarCalculo                                      2     2      0   16701
                                              7 BANK1      2     2      0
                           _ADC_Read
                          _PWM1_Duty
                            ___awdiv
                            ___fldiv
                            ___flmul
                            ___fltol
                             ___wmul
                           ___xxtofl
               _controleMaximoMinimo
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1748
                                              5 COMMON     6     2      4
                           _ADC_Read (ARG)
 ---------------------------------------------------------------------------------
 (2) _PWM1_Duty                                            6     2      4    7732
                                             76 BANK0      4     0      4
                                              5 BANK1      2     2      0
                           _PWM_Init
                            ___aldiv
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      44
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _imprimirValoresLcd                                   5     5      0    4199
                                             13 BANK0      5     5      0
                            ___awdiv
                            ___awmod
                            _lcd_cmd
                            _lcd_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1647
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _lcd_str                                              4     2      2     970
                                              2 COMMON     4     2      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (2) _lcd_dat                                              1     1      0      44
                                              1 COMMON     1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0      44
                                              1 COMMON     1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (3) _lcd_wr                                               1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1044
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _controlarValores                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _controlarCooler                                      2     2      0    8194
                                              7 BANK1      2     2      0
                           _ADC_Read
                          _PWM2_Duty
               _controleMaximoMinimo
 ---------------------------------------------------------------------------------
 (2) _controleMaximoMinimo                                 2     0      2     524
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM2_Duty                                            6     2      4    7580
                                             76 BANK0      4     0      4
                                              5 BANK1      2     2      0
                           _PWM_Init
                            ___aldiv
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     778
                                              6 BANK0     14    10      4
                            ___aldiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     533
                                             11 COMMON     2     2      0
                                             72 BANK0      4     0      4
                                              0 BANK1      5     5      0
                            ___aldiv (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2721
                                             46 BANK0     26    18      8
                          __Umul8_16
                            ___aldiv (ARG)
                            ___fldiv (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1577
                                             20 BANK0     26    18      8
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _PWM_Init                                             8     4      4     930
                                              9 COMMON     4     4      0
                                              6 BANK0      4     0      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8     756
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             5     3      2      44
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _PWM2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _PWM1_Start
   _PWM2_Start
   _controlarCooler
     _ADC_Read
     _PWM2_Duty
       _PWM_Init
         ___aldiv
       ___aldiv
       ___fldiv
         ___wmul (ARG)
           _ADC_Read (ARG)
         ___xxtofl (ARG)
           ___aldiv (ARG)
           ___wmul (ARG)
       ___flmul
         __Umul8_16
         ___aldiv (ARG)
         ___fldiv (ARG)
         ___wmul (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___aldiv (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
         ___wmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     _controleMaximoMinimo
   _controlarValores
   _controleMaximoMinimo
   _imprimirValoresLcd
     ___awdiv
       ___awmod (ARG)
     ___awmod
     _lcd_cmd
       _lcd_wr
     _lcd_str
       _lcd_dat
         _lcd_wr
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _lcd_cmd
   _lcd_init
     _lcd_cmd
   _lcd_str
   _realizarCalculo
     _ADC_Read
     _PWM1_Duty
       _PWM_Init
       ___aldiv
       ___fldiv
       ___flmul
       ___fltol
       ___xxtofl
     ___awdiv
     ___fldiv
     ___flmul
     ___fltol
     ___wmul
     ___xxtofl
     _controleMaximoMinimo

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      20       9       33.3%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      9      39       7       71.2%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     50      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      B7      12        0.0%
ABS                  0      0      B7       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Jun 19 17:56:39 2021

                 ___fldiv@aexp 004D                   ___fldiv@bexp 004C                              pc 0002  
                 ___fldiv@sign 0045                             l99 0E4C                   ___awdiv@sign 0021  
                           _kd 00B2                             _ki 00D3                             _kp 00D5  
                           fsr 0004            ___wmul@multiplicand 0077            __Umul8_16@word_mpld 0076  
                          l110 0EC8                            l112 0ECC                            l104 0E95  
                          l131 0FFF                            l220 086D                            l117 1759  
                          l215 170D                            l232 1731                            l128 029D  
                          l137 17FF                            l219 0877                            l235 1741  
                          l180 08E4                            l244 17D0                            l229 16F4  
                          l238 08AD                            l191 1716                            l423 0B56  
                          l511 0A24                            l184 0D4A                            l360 177E  
                          l433 0BDE                            l194 1721                            l354 0101  
                          l188 0C94                            l524 09BB                            l630 0962  
                          l358 1766                            l551 0B2B                            l544 0B41  
                          l640 091E                            l554 0B41                            l731 046E  
                          l723 03EC                            l707 02FA                            l804 0DD0  
                          l709 047A                            l805 0DDC                            l729 045E  
                          l753 0747                            l747 07DB                            l766 1793  
                          l759 07CF                            l791 0D6F                            l768 17A5  
                          l793 0E06                            l797 0DB4                            _RB0 0030  
                          _RB1 0031                            _RB2 0032                            _RB3 0033  
                          _PR2 0092                            _PID 00A0   __end_of_controleMaximoMinimo 175A  
                          fsr0 0004                            indf 0000                   ___awmod@sign 0076  
     __size_of_controlarCooler 002F                   _proporcional 00A6                   ___flmul@aexp 0060  
                 ___flmul@bexp 0061                   ___flmul@sign 005B                   ___flmul@temp 0066  
                 ___flmul@prod 0062                   ___fltol@exp1 007C                           l2000 033B  
                         l2010 035A                           l2002 0343                           l2020 038C  
                         l2012 036C                           l2004 034B                           l2100 049F  
                         l2030 03AD                           l2022 038D                           l2014 0370  
                         l2006 0353                           l2110 04B8                           l2102 04A1  
                         l2040 03C6                           l2032 03AF                           l2024 039B  
                         l2016 0371                           l2008 0355                           l2200 0763  
                         l2120 04CD                           l2112 04B9                           l2104 04A9  
                         l2050 03E9                           l2034 03B8                           l2042 03CC  
                         l2018 037A                           l2026 039F                           l2210 07A9  
                         l2202 077C                           l2130 04E8                           l2122 04D5  
                         l2114 04BE                           l2106 04AE                           l2060 0408  
                         l2044 03D0                           l2036 03BC                           l2028 03A5  
                         l2220 07C8                           l2212 07B3                           l2204 0782  
                         l2140 056A                           l2132 04F8                           l2124 04DA  
                         l2116 04C3                           l2108 04B4                           l2300 001D  
                         l2070 0451                           l2062 0421                           l2054 03F1  
                         l2046 03D1                           l2038 03BD                           l2222 07D3  
                         l2214 07B5                           l2206 078F                           l2150 05D8  
                         l2142 0586                           l2134 0505                           l2126 04DF  
                         l2118 04CB                           l2230 0D57                           l2302 0022  
                         l2080 046A                           l2072 0455                           l2056 03F6  
                         l2064 0427                           l2048 03D5                           l2216 07C3  
                         l2208 079A                           l2160 0668                           l2152 05E8  
                         l2144 05A2                           l2136 0522                           l2240 0D85  
                         l2232 0D67                           l2400 0C86                           l2320 0062  
                         l2312 0035                           l2304 0028                           l2074 045D  
                         l2066 0434                           l2058 0404                           l2218 07C7  
                         l2170 06FC                           l2162 0678                           l2154 0605  
                         l2146 05AB                           l2138 053E                           l2090 0488  
                         l2250 0DBB                           l2242 0D92                           l2234 0D77  
                         l2226 0D4E                           l2330 006D                           l2322 0066  
                         l2314 0052                           l2306 002F                           l2410 1774  
                         l2402 175A                           l2076 0464                           l2068 0442  
                         l2180 0721                           l2172 070A                           l2164 06A5  
                         l2156 061E                           l2148 05BB                           l2092 048C  
                         l2260 0DF4                           l2252 0DC6                           l2244 0D99  
                         l2228 0D53                           l2500 0E0F                           l2420 09C3  
                         l2340 00A0                           l2324 006B                           l2316 005A  
                         l2308 0034                           l2412 177A                           l2404 175C  
                         l2078 0468                           l2190 0744                           l2174 0713  
                         l2182 0727                           l2166 06CB                           l2158 063B  
                         l2094 048D                           l2086 047B                           l2262 0DF9  
                         l2254 0DCA                           l2246 0D9D                           l2238 0D80  
                         l2270 1742                           l2510 0E2C                           l2502 0E14  
                         l2430 09D7                           l2422 09C8                           l2350 00E2  
                         l2342 00A4                           l2334 0089                           l2318 005E  
                         l2406 1760                           l1800 0B5A                           l2184 072B  
                         l2176 0717                           l2168 06F3                           l2096 0492  
                         l2088 0482                           l2264 0DFD                           l2256 0DD4  
                         l2248 0DAB                           l2272 1746                           l2520 0E50  
                         l2512 0E32                           l2504 0E19                           l2440 09ED  
                         l2432 09D9                           l2424 09CA                           l2416 09BC  
                         l2344 00A9                           l2336 0093                           l2352 00EB  
                         l2600 021B                           l2408 176D                           l2370 0861  
                         l2362 0845                           l1810 0B7C                           l1802 0B65  
                         l2194 074C                           l2186 072C                           l2178 0718  
                         l2098 0497                           l2266 0DFE                           l2258 0DDE  
                         l2274 1748                           l2530 0E6E                           l2522 0E58  
                         l2514 0E39                           l2506 0E1F                           l2450 0A10  
                         l2442 09F1                           l2434 09DF                           l2426 09CE  
                         l2418 09BF                           l2290 1730                           l2282 1723  
                         l2346 00D7                           l2338 0099                           l2354 00FD  
                         l2610 0261                           l2602 0221                           l2372 086A  
                         l2364 084B                           l1820 0BB6                           l1812 0B89  
                         l1804 0B69                           l2196 0751                           l2188 0730  
                         l2276 1755                           l2540 0E8F                           l2532 0E75  
                         l2524 0E5D                           l2516 0E3F                           l2508 0E25  
                         l2444 0A02                           l2436 09E2                           l2452 0A16  
                         l2428 09D3                           l2460 0963                           l2284 1726  
                         l2292 17A6                           l1900 0927                           l2348 00DE  
                         l2612 0267                           l2604 022A                           l2380 0CA2  
                         l2620 0F21                           l2374 0871                           l1830 0BD6  
                         l1822 0BB7                           l1814 0B8D                           l1806 0B71  
                         l2198 075F                           l2390 0BDF                           l2278 1759  
                         l2550 0EA5                           l2542 0E99                           l2534 0E7B  
                         l2526 0E62                           l2518 0E46                           l2454 0A1B  
                         l2446 0A08                           l2438 09E9                           l2470 0973  
                         l2462 0964                           l2286 172C                           l2294 17A8  
                         l1910 094A                           l1902 092A                           l2614 0270  
                         l2606 0251                           l2382 0CAD                           l2630 0FEC  
                         l2622 0F73                           l2640 170E                           l2368 084E  
                         l1824 0BC0                           l1816 0B96                           l1808 0B79  
                         l1840 178D                           l2392 0BEC                           l2632 17D1  
                         l2560 0EC4                           l2552 0EAD                           l2536 0E82  
                         l2528 0E68                           l2456 0A20                           l2448 0A09  
                         l2480 098C                           l2472 0978                           l2464 0968  
                         l2288 172F                           l2296 17B9                           l1912 0950  
                         l1904 0931                           l2616 0297                           l2608 0257  
                         l2384 0D31                           l2624 0FC9                           l2642 1717  
                         l1818 0BA8                           l1826 0BC6                           l1842 179C  
                         l1834 1780                           l2394 0BF7                           l2634 17DD  
                         l2554 0EB2                           l2538 0E88                           l2482 0990  
                         l2474 097E                           l2490 09AD                           l2466 096D  
                         l1850 1733                           l2298 17BD                           l1914 0951  
                         l1906 0935                           l1930 08F9                           l1922 08E5  
                         l2570 011F                           l2562 0102                           l2386 0D32  
                         l2378 0C95                           l2626 0FCD                           l2618 0ECD  
                         l1828 0BCB                           l1844 17A1                           l1836 1782  
                         l1860 0AA7                           l2396 0C7B                           l2636 17EC  
                         l2556 0EB7                           l2548 0EA1                           l2492 09B2  
                         l2484 099A                           l2476 0981                           l2468 096F  
                         l1852 1736                           l1916 0958                           l1908 0939  
                         l1932 08FD                           l1924 08EB                           l1940 091A  
                         l2716 0047                           l2580 0149                           l2572 0128  
                         l2564 010A                           l2644 0878                           l2388 0D3C  
                         l2628 0FDD                           l2660 0A2B                           l2638 1705  
                         l1950 02AF                           l1838 1789                           l1870 0AE8  
                         l1862 0AB6                           l2398 0C7C                           l2558 0EBD  
                         l2494 09B7                           l2486 09A0                           l2478 0988  
                         l1854 173C                           l1918 095E                           l1934 0907  
                         l1926 08EE                           l2590 01D5                           l2582 0184  
                         l2574 012E                           l2566 0110                           l2646 087D  
                         l2670 0A38                           l2662 0A2C                           l1848 08AE  
                         l1960 02C3                           l1952 02B0                           l1944 029E  
                         l1872 0AF0                           l2488 09A7                           l1792 16F0  
                         l1856 173F                           l1936 090D                           l1928 08F5  
                         l2592 01DB                           l2584 018D                           l2576 0137  
                         l2568 0119                           l2680 0A57                           l2672 0A3D  
                         l2664 0A2D                           l1794 0B42                           l1970 02DC  
                         l1954 02B5                           l1962 02C5                           l1946 02A5  
                         l1890 0B1A                           l1882 0AFE                           l1874 0AF2  
                         l1866 0AC0                           l2498 0E07                           l1858 1740  
                         l1938 0914                           l2594 01E4                           l2586 01C5  
                         l2578 013D                           l2690 0A94                           l2682 0A60  
                         l2674 0A42                           l2666 0A2E                           l2658 0A25  
                         l1796 0B45                           l1980 02F0                           l1972 02DD  
                         l1964 02CD                           l1956 02BA                           l1948 02AB  
                         l1892 0B30                           l1876 0AF6                           l1884 0B13  
                         l1868 0AE5                           l2596 020B                           l2588 01CB  
                         l2692 0A99                           l2684 0A65                           l2676 0A48  
                         l2668 0A33                           l1798 0B49                           l1974 02E2  
                         l1982 02F2                           l1966 02D2                           l1958 02C2  
                         l1894 0B35                           l2598 0211                           l2694 0A9E  
                         l2686 0A76                           l2678 0A51                           l1984 0302  
                         l1992 031B                           l1976 02E7                           l1968 02D8  
                         l1896 091F                           l2688 0A85                           l1994 0320  
                         l1986 030E                           l1978 02EF                           l1898 0921  
                         l1988 0312                           l1998 0329                           STR_1 0838  
                         STR_2 083E                           STR_3 083E                           STR_4 0832  
                         STR_5 083E                           STR_6 0832                           STR_7 083E  
                         STR_8 0832                           STR_9 083E                           u2000 08C7  
                         u2010 0AB6                           u2011 0AB5                           u2100 0B35  
                         u2020 0ADE                           u2005 08C2                           u2101 0B34  
                         u2030 0AF6                           u2110 0927                           u2031 0AF5  
                         u2111 0926                           u2040 0AFD                           u3000 0DD4  
                         u2200 08FD                           u2041 0AFC                           u2025 0AD9  
                         u3001 0DD3                           u2201 08FC                           u3010 0DE9  
                         u2130 0939                           u2210 0907                           u2131 0938  
                         u2211 0906                           u2300 0302                           u2060 0B12  
                         u3020 0DF9                           u3100 0093                           u2301 0301  
                         u2061 0B11                           u3021 0DF8                           u2125 092B  
                         u3101 0092                           u2310 0320                           u2070 0B19  
                         u3030 0DFD                           u2150 094A                           u2230 091A  
                         u3110 0099                           u2311 031F                           u2071 0B18  
                         u2055 0AFF                           u3031 0DFC                           u3015 0DE4  
                         u2151 0949                           u2231 0919                           u2215 0903  
                         u3111 0098                           u2320 035A                           u2240 02AF  
                         u3040 1746                           u3120 00EB                           u2321 0359  
                         u2241 02AE                           u3041 1745                           u2145 093A  
                         u2225 090E                           u3121 00EA                           u2410 03BC  
                         u2250 02B5                           u2090 0B30                           u3210 0BF7  
                         u3050 1755                           u2170 095E                           u3130 00FD  
                         u2411 03BB                           u2251 02B4                           u2091 0B2F  
                         u3211 0BF6                           u3051 1754                           u2171 095D  
                         u2155 0946                           u3131 00FC                           u3140 084B  
                         u2500 0434                           u2260 02BA                           u3220 0C83  
                         u3300 09CE                           u3060 17D0                           u2180 08EB  
                         u3141 084A                           u2501 0433                           u2405 03B1  
                         u2261 02B9                           u2085 0B1E                           u3221 0C7F  
                         u3301 09CD                           u3061 17CF                           u2165 0952  
                         u2181 08EA                           u3205 0D41                           u2510 0451  
                         u2430 03D0                           u2350 0370                           u2270 02DC  
                         u3310 09DF                           u3070 0028                           u2511 0450  
                         u2431 03CF                           u2351 036F                           u2335 035C  
                         u2271 02DB                           u3055 1751                           u3311 09DE  
                         u3071 0027                           u3160 0871                           u2520 0468  
                         u2440 03D5                           u2280 02E2                           u2600 04DF  
                         u3400 0973                           u3080 0062                           u3161 0870  
                         u2521 0467                           u2505 0430                           u2441 03D4  
                         u2425 03BF                           u2345 0365                           u2281 02E1  
                         u2601 04DE                           u3401 0972                           u3081 0061  
                         u2450 03E9                           u2370 038C                           u2290 02E7  
                         u2530 048C                           u3234 0C86                           u3330 09F1  
                         u3410 097E                           u3090 0088                           u3170 0CAD  
                         u3250 1760                           u3155 0857                           u2515 044D  
                         u2451 03E8                           u2371 038B                           u2291 02E6  
                         u2611 0530                           u2531 048B                           u3331 09F0  
                         u3411 097D                           u2195 08EF                           u3091 0087  
                         u3171 0CAC                           u3251 175F                           u1900 0B8D  
                         u2460 03F0                           u2380 03A5                           u2612 0537  
                         u2540 0492                           u3500 0E1F                           u3180 0D39  
                         u1901 0B8C                           u2461 03EF                           u2381 03A4  
                         u2365 0373                           u2701 065A                           u2621 054C  
                         u2613 053E                           u2541 0491                           u3245 0C8B  
                         u3501 0E1E                           u3325 09E3                           u3181 0D35  
                         u2470 03F6                           u2390 03AD                           u2702 0661  
                         u2622 0553                           u2550 0497                           u3510 0E2C  
                         u3350 0A02                           u3430 0990                           u2471 03F5  
                         u2391 03AC                           u2375 0388                           u2711 0687  
                         u2703 0668                           u2631 0578                           u2623 055A  
                         u2551 0496                           u3511 0E2B                           u3351 0A01  
                         u3431 098F                           u3095 0084                           u1920 0BA8  
                         u2480 0408                           u2800 072B                           u2720 06B1  
                         u2712 068E                           u2632 057F                           u2560 04B8  
                         u3600 0EB2                           u3520 0E39                           u3440 099A  
                         u3280 177A                           u1921 0BA7                           u2481 0407  
                         u2801 072A                           u2713 0695                           u2641 0594  
                         u2633 0586                           u2561 04B7                           u3601 0EB1  
                         u3521 0E38                           u3345 09F2                           u3441 0999  
                         u3425 0982                           u3281 1779                           u3265 1767  
                         u2490 0417                           u2810 0730                           u2642 059B  
                         u2570 04BE                           u3610 0EB7                           u3530 0E46  
                         u3370 0A16                           u3290 09C3                           u3194 0D3C  
                         u1915 0B8F                           u2811 072F                           u2731 06BD  
                         u2643 05A2                           u2571 04BD                           u3611 0EB6  
                         u3531 0E45                           u3371 0A15                           u3355 09FE  
                         u3291 09C2                           u3275 176E                           u1940 0BC6  
                         u1860 0B49                           u2820 0744                           u2740 06D9  
                         u2732 06C4                           u2580 04C3                           u2900 0D53  
                         u3620 0EC4                           u3540 0E5D                           u3380 0A1B  
                         u3460 09AD                           u3700 0261                           u1941 0BC5  
                         u1925 0BA4                           u1861 0B48                           u2821 0743  
                         u2733 06CB                           u2725 06AC                           u2661 05CA  
                         u2581 04C2                           u2901 0D52                           u3621 0EC3  
                         u3541 0E5C                           u3381 0A1A                           u3365 0A0A  
                         u3461 09AC                           u3445 0996                           u3701 0260  
                         u1950 0BCB                           u1870 0B5A                           u2830 074B  
                         u2662 05D1                           u2590 04DA                           u2910 0D57  
                         u3550 0E62                           u3470 09B2                           u3390 0968  
                         u3630 010A                           u1951 0BCA                           u1935 0BB8  
                         u1871 0B59                           u2495 0412                           u2831 074A  
                         u2751 06E5                           u2671 05F7                           u2663 05D8  
                         u2655 05A4                           u2591 04D9                           u2911 0D56  
                         u3551 0E61                           u3471 09B1                           u3455 09A1  
                         u3391 0967                           u3631 0109                           u1880 0B79  
                         u1960 178D                           u2840 0751                           u2752 06EC  
                         u2672 05FE                           u2920 0D77                           u3560 0E68  
                         u3480 0E14                           u3640 0119                           u1881 0B78  
                         u1961 178C                           u2841 0750                           u2753 06F3  
                         u2745 06D4                           u2673 0605                           u2921 0D76  
                         u3561 0E67                           u3481 0E13                           u3705 025D  
                         u3641 0118                           u2850 0763                           u3570 0E75  
                         u3490 0E19                           u3650 0128                           u2851 0762  
                         u2691 062D                           u3571 0E74                           u3491 0E18  
                         u3651 0127                           u1980 17A1                           u2860 0772  
                         u2780 0717                           u2692 0634                           u2940 0D98  
                         u3580 0E82                           u3660 0137                           u3717 0865  
                         u1981 17A0                           u2781 0716                           u2765 06F5  
                         u2693 063B                           u2685 0607                           u2941 0D97  
                         u3581 0E81                           u3661 0136                           u1990 08BE  
                         u2870 078F                           u3590 0E8F                           u3670 0149  
                         u1895 0B7E                           u1975 1794                           u2871 078E  
                         u2775 070C                           u2935 0D8A                           u3591 0E8E  
                         u3671 0148                           u2880 07A9                           u2960 0DBA  
                         u3680 01D5                           u2881 07A8                           u2865 076D  
                         u2961 0DB9                           u3681 01D4                           u2890 07C7  
                         u3690 021B                           u1995 08B9                           u2891 07C6  
                         u2875 078B                           u2795 071A                           u2955 0DAC  
                         u3691 021A                           u3675 0145                           u2980 0DCA  
                         u2885 07A5                           u2981 0DC9                           u3685 01D1  
                         u2990 0DD0                           u2991 0DCF                           u2975 0DBF  
                         u3695 0217                           _main 0A25                           _erro 00B6  
                         _menu 00BA                           _polo 00D1                           btemp 007E  
             __end_of_ADC_Init 170E               __end_of_ADC_Read 0878                           start 0000  
              ___fldiv@new_exp 0046                  ___fltol@sign1 007B                __end_of___aldiv 0BDF  
                        ?_main 0070                          _CCP1X 00BD                __end_of___fldiv 047B  
                        _CCP1Y 00BC                          _CCP2X 00ED                          _CCP2Y 00EC  
              __end_of___awdiv 0A25                          STR_10 0826                          STR_11 081A  
              __end_of___awmod 09BC                __end_of___flmul 07DC                __end_of___fltol 0B42  
              ___awdiv@divisor 0077                __end_of___lwdiv 0963                __end_of___lwmod 091F  
              ___awdiv@counter 0020                          _PORTD 0008                          _TRISA 0085  
                        _TRISB 0086                          _TRISC 0087                          _TRISD 0088  
                        _TRISE 0089       __end_of_controlarValores 0ECD                __end_of_lcd_dat 1742  
              __end_of_lcd_cmd 1732                __end_of_lcd_str 17D1             __size_of_PWM1_Duty 00B6  
                  ?_PWM1_Start 0070             __size_of_PWM2_Duty 00B6                    ?_PWM2_Start 0070  
              __end_of_dpowers 081A                          _tempo 00B0                          pclath 000A  
             __end_of_PWM_Init 08E5                          status 0003                          wtemp0 007E  
              __end_of_sprintf 0102               ?_realizarCalculo 0070                __initialization 07DC  
                 __end_of_main 0AA7                         ??_main 007E             _setPointReferencia 00B8  
                       _ADCON0 001F                         _ADCON1 009F                         _CCP1M2 00BA  
                       _CCP1M3 00BB                         _CCP2M2 00EA                         _CCP2M3 00EB  
                       _ADRESH 001E                         _ADRESL 009E                         _CCPR1L 0015  
                       _CCPR2L 001B               ___awdiv@dividend 0079              ??_controlarCooler 007D  
                       _TMR2ON 0092                         _TRISC1 0439                         _TRISC2 043A  
             __end_of___xxtofl 0E07           _controleMaximoMinimo 1742               __end_of_lcd_init 08AE  
            __end_of_PWM1_Duty 0D4B              __end_of_PWM2_Duty 0C95                      ??___aldiv 0078  
   __end_of_imprimirValoresLcd 029E                         ___wmul 175A                      ??___fldiv 003C  
                    ??___awdiv 007B            __size_of_PWM1_Start 0009                      ??___awmod 0074  
                    ??___flmul 0056                      ??___fltol 00C8            __size_of_PWM2_Start 000B  
                    ??___lwdiv 0074                      ??___lwmod 007C                         _lcd_wr 16EF  
              ADC_Read@channel 0074               ___awdiv@quotient 0022                ___awmod@divisor 0070  
              ___awmod@counter 0075                      ??_lcd_dat 0071                      ??_lcd_cmd 0071  
                       _string 0190                      ??_lcd_str 0074             __size_of__Umul8_16 0027  
                 PWM_Init@freq 0026                      ?_ADC_Init 0070                      ?_ADC_Read 0070  
                    ??_sprintf 0023                   ___xxtofl@arg 0030                   ___xxtofl@exp 002F  
                 ___xxtofl@val 0026        __end_of__initialization 07FC                     ___fltol@f1 0068  
        ?_controleMaximoMinimo 0070                 __pcstackCOMMON 0070                   __pidataBANK1 16FD  
                    ?_PWM_Init 0026                     ??_ADC_Init 0070                     ??_ADC_Read 0072  
                 _kdReferencia 00AA                     __pbssBANK1 00A0                     __pbssBANK3 0190  
            __end_of__Umul8_16 17A6                     __pmaintext 0A25                        ?___wmul 0075  
                      ?_lcd_wr 0070                     _derivativo 00A2                     ??_PWM_Init 0079  
                      _T2CKPS0 0090                        _T2CKPS1 0091                      ?___xxtofl 0026  
                 ??_PWM1_Start 0070              ?_controlarValores 0070                   ??_PWM2_Start 0070  
                    ?_lcd_init 0070             ??_controlarValores 0070                     __stringtab 0800  
       ??_controleMaximoMinimo 0072                   _kiReferencia 00AC                        ___aldiv 0B42  
                      ___fldiv 029E                        ___awdiv 09BC                        ___awmod 0963  
                      ___flmul 047B                        ___fltol 0AA7                __size_of___wmul 0025  
                      ___lwdiv 091F                        ___lwmod 08E5             __end_of_PWM1_Start 1717  
           __end_of_PWM2_Start 1722                __size_of_lcd_wr 0006                        __ptext1 0ECD  
                      __ptext2 175A                        __ptext3 0C95                        __ptext4 0878  
                      __ptext5 0102                        __ptext6 001A                        __ptext7 08E5  
                      __ptext8 091F                        __ptext9 17A6                        _lcd_dat 1732  
                      _lcd_cmd 1722                        _lcd_str 17A6                        _dpowers 0810  
              _controlarCooler 17D1                     ??___xxtofl 002A               ___awmod@dividend 0072  
             ___aldiv@dividend 0074                        _sprintf 001A                        clrloop0 16F6  
                   ??_lcd_init 0072           end_of_initialization 07FC      imprimirValoresLcd@centena 0030  
                _PIDReferencia 00A8               ___aldiv@quotient 0022       __size_of_realizarCalculo 0133  
                    _PWM1_Duty 0C95                      _PWM2_Duty 0BDF                      _PORTEbits 0009  
                ___xxtofl@sign 002E      controleMaximoMinimo@valor 0070             _imprimirValoresLcd 0102  
                   lcd_dat@val 0071                     lcd_cmd@val 0071                    ___fldiv@grs 0048  
                  ___fldiv@rem 0041              __size_of_ADC_Init 0009              __size_of_ADC_Read 0034  
                 _kpReferencia 00AE            ?_imprimirValoresLcd 0070                    ___flmul@grs 005C  
                   lcd_str@str 0072        __end_of_controlarCooler 1800                 __end_of___wmul 177F  
         ??_imprimirValoresLcd 002D                     ?_PWM1_Duty 006C                     ?_PWM2_Duty 006C  
               __end_of_lcd_wr 16F5              __size_of_PWM_Init 0037            start_initialization 07DC  
                 _erroAnterior 00B4          controlarCooler@cooler 00CF                       ??___wmul 0079  
                   init_fetch0 0007                      __Umul8_16 177F                       ??_lcd_wr 0070  
                  __pdataBANK1 00D1                      ___fldiv@a 0034                      ___fldiv@b 0038  
                    ___flmul@a 0052                      ___flmul@b 004E                      ___latbits 0002  
                __pcstackBANK0 0020                  __pcstackBANK1 00C8              ??_realizarCalculo 00CF  
            __size_of___xxtofl 00BC              __size_of_lcd_init 0036                    sprintf@flag 0027  
                  sprintf@prec 0028               ___lwdiv@dividend 0072      __size_of_controlarValores 00C6  
        _temperaturaReferencia 00BC                       ?___aldiv 0070                       ?___fldiv 0034  
                     ?___awdiv 0077                       ?___awmod 0070                       ?___flmul 004E  
                     ?___fltol 0068                     ?__Umul8_16 0070                       ?___lwdiv 0070  
                     ?___lwmod 0078               ?_controlarCooler 0070                    ??_PWM1_Duty 00CD  
                  ??_PWM2_Duty 00CD                      __pstrings 0800                       ?_lcd_dat 0070  
                     ?_lcd_cmd 0070                       ?_lcd_str 0072                       _ADC_Init 1705  
                     _ADC_Read 0844               ___lwdiv@quotient 0075                       ?_sprintf 0020  
              ___aldiv@divisor 0070                ___aldiv@counter 0020                 ___wmul@product 0079  
                    clear_ram0 16F5  __size_of_controleMaximoMinimo 0018                  PWM1_Duty@freq 006E  
                PWM1_Duty@duty 006C                       _GO_nDONE 00FA                  PWM2_Duty@freq 006E  
                PWM2_Duty@duty 006C        controlarValores@S1Atual 00C6        controlarValores@S2Atual 00C4  
      controlarValores@S3Atual 00C2        controlarValores@S4Atual 00C0                    __stringbase 080F  
                     _PWM_Init 08AE              ___wmul@multiplier 0075                      lcd_wr@val 0070  
   controlarValores@S1Anterior 00C7     controlarValores@S2Anterior 00C5     controlarValores@S3Anterior 00C3  
   controlarValores@S4Anterior 00C1                    ??__Umul8_16 0072               __size_of___aldiv 009D  
             __size_of___fldiv 01DD               __size_of___awdiv 0069               __size_of___awmod 0059  
             __size_of___flmul 0361               __size_of___fltol 009B               __size_of___lwdiv 0044  
             __size_of___lwmod 003A             __end_of__stringtab 0810               __size_of_lcd_dat 0010  
             __size_of_lcd_cmd 0010               __size_of_lcd_str 002B                     sprintf@val 0029  
                     ___xxtofl 0D4B                ___lwdiv@divisor 0070                ___lwdiv@counter 0077  
                     __ptext10 1732                       __ptext11 1722                       __ptext20 0AA7  
                     __ptext12 16EF                       __ptext21 047B                       __ptext13 0963  
                     __ptext22 177F                       __ptext14 09BC                       __ptext23 029E  
                     __ptext15 0E07                       __ptext24 08AE                       __ptext16 17D1  
                     __ptext25 0B42                       __ptext17 1742                       __ptext26 0844  
                     __ptext18 0BDF                       __ptext27 1717                       __ptext19 0D4B  
                     __ptext28 170E                       __ptext29 1705                       _lcd_init 0878  
             __size_of_sprintf 00E8                  __size_of_main 0082                       _integral 00A4  
                     _setPoint 00D7               _controlarValores 0E07                _realizarCalculo 0ECD  
                     lcd_str@i 0075    __size_of_imprimirValoresLcd 019C                       init_ram0 000B  
                    sprintf@ap 0026                      sprintf@sp 002B               ___lwmod@dividend 007A  
                    stringcode 080A       imprimirValoresLcd@milhar 002E         __Umul8_16@multiplicand 0070  
                  _temperatura 00BE                       sprintf@c 002C                       sprintf@f 0020  
              ___lwmod@divisor 0078                ___lwmod@counter 007D                       stringdir 080A  
                     stringtab 0800                   ___aldiv@sign 0021                     _PWM1_Start 170E  
                   _PWM2_Start 1717           __Umul8_16@multiplier 0078        __end_of_realizarCalculo 1000  
            __Umul8_16@product 0074  
