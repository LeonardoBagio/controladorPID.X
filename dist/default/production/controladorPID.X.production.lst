

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Jul 02 19:22:29 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    45                           	dabs	1,0x7E,2
    46  0000                     
    47                           ; Version 2.20
    48                           ; Generated 12/02/2020 GMT
    49                           ; 
    50                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F877A Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0008                     	;# 
    90  0009                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000D                     	;# 
    95  000E                     	;# 
    96  000E                     	;# 
    97  000F                     	;# 
    98  0010                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0013                     	;# 
   102  0014                     	;# 
   103  0015                     	;# 
   104  0015                     	;# 
   105  0016                     	;# 
   106  0017                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001B                     	;# 
   111  001B                     	;# 
   112  001C                     	;# 
   113  001D                     	;# 
   114  001E                     	;# 
   115  001F                     	;# 
   116  0081                     	;# 
   117  0085                     	;# 
   118  0086                     	;# 
   119  0087                     	;# 
   120  0088                     	;# 
   121  0089                     	;# 
   122  008C                     	;# 
   123  008D                     	;# 
   124  008E                     	;# 
   125  0091                     	;# 
   126  0092                     	;# 
   127  0093                     	;# 
   128  0094                     	;# 
   129  0098                     	;# 
   130  0099                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0008                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000D                     	;# 
   155  000E                     	;# 
   156  000E                     	;# 
   157  000F                     	;# 
   158  0010                     	;# 
   159  0011                     	;# 
   160  0012                     	;# 
   161  0013                     	;# 
   162  0014                     	;# 
   163  0015                     	;# 
   164  0015                     	;# 
   165  0016                     	;# 
   166  0017                     	;# 
   167  0018                     	;# 
   168  0019                     	;# 
   169  001A                     	;# 
   170  001B                     	;# 
   171  001B                     	;# 
   172  001C                     	;# 
   173  001D                     	;# 
   174  001E                     	;# 
   175  001F                     	;# 
   176  0081                     	;# 
   177  0085                     	;# 
   178  0086                     	;# 
   179  0087                     	;# 
   180  0088                     	;# 
   181  0089                     	;# 
   182  008C                     	;# 
   183  008D                     	;# 
   184  008E                     	;# 
   185  0091                     	;# 
   186  0092                     	;# 
   187  0093                     	;# 
   188  0094                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  018C                     	;# 
   200  018D                     	;# 
   201  0000                     	;# 
   202  0001                     	;# 
   203  0002                     	;# 
   204  0003                     	;# 
   205  0004                     	;# 
   206  0005                     	;# 
   207  0006                     	;# 
   208  0007                     	;# 
   209  0008                     	;# 
   210  0009                     	;# 
   211  000A                     	;# 
   212  000B                     	;# 
   213  000C                     	;# 
   214  000D                     	;# 
   215  000E                     	;# 
   216  000E                     	;# 
   217  000F                     	;# 
   218  0010                     	;# 
   219  0011                     	;# 
   220  0012                     	;# 
   221  0013                     	;# 
   222  0014                     	;# 
   223  0015                     	;# 
   224  0015                     	;# 
   225  0016                     	;# 
   226  0017                     	;# 
   227  0018                     	;# 
   228  0019                     	;# 
   229  001A                     	;# 
   230  001B                     	;# 
   231  001B                     	;# 
   232  001C                     	;# 
   233  001D                     	;# 
   234  001E                     	;# 
   235  001F                     	;# 
   236  0081                     	;# 
   237  0085                     	;# 
   238  0086                     	;# 
   239  0087                     	;# 
   240  0088                     	;# 
   241  0089                     	;# 
   242  008C                     	;# 
   243  008D                     	;# 
   244  008E                     	;# 
   245  0091                     	;# 
   246  0092                     	;# 
   247  0093                     	;# 
   248  0094                     	;# 
   249  0098                     	;# 
   250  0099                     	;# 
   251  009C                     	;# 
   252  009D                     	;# 
   253  009E                     	;# 
   254  009F                     	;# 
   255  010C                     	;# 
   256  010D                     	;# 
   257  010E                     	;# 
   258  010F                     	;# 
   259  018C                     	;# 
   260  018D                     	;# 
   261  0000                     	;# 
   262  0001                     	;# 
   263  0002                     	;# 
   264  0003                     	;# 
   265  0004                     	;# 
   266  0005                     	;# 
   267  0006                     	;# 
   268  0007                     	;# 
   269  0008                     	;# 
   270  0009                     	;# 
   271  000A                     	;# 
   272  000B                     	;# 
   273  000C                     	;# 
   274  000D                     	;# 
   275  000E                     	;# 
   276  000E                     	;# 
   277  000F                     	;# 
   278  0010                     	;# 
   279  0011                     	;# 
   280  0012                     	;# 
   281  0013                     	;# 
   282  0014                     	;# 
   283  0015                     	;# 
   284  0015                     	;# 
   285  0016                     	;# 
   286  0017                     	;# 
   287  0018                     	;# 
   288  0019                     	;# 
   289  001A                     	;# 
   290  001B                     	;# 
   291  001B                     	;# 
   292  001C                     	;# 
   293  001D                     	;# 
   294  001E                     	;# 
   295  001F                     	;# 
   296  0081                     	;# 
   297  0085                     	;# 
   298  0086                     	;# 
   299  0087                     	;# 
   300  0088                     	;# 
   301  0089                     	;# 
   302  008C                     	;# 
   303  008D                     	;# 
   304  008E                     	;# 
   305  0091                     	;# 
   306  0092                     	;# 
   307  0093                     	;# 
   308  0094                     	;# 
   309  0098                     	;# 
   310  0099                     	;# 
   311  009C                     	;# 
   312  009D                     	;# 
   313  009E                     	;# 
   314  009F                     	;# 
   315  010C                     	;# 
   316  010D                     	;# 
   317  010E                     	;# 
   318  010F                     	;# 
   319  018C                     	;# 
   320  018D                     	;# 
   321  0000                     	;# 
   322  0001                     	;# 
   323  0002                     	;# 
   324  0003                     	;# 
   325  0004                     	;# 
   326  0005                     	;# 
   327  0006                     	;# 
   328  0007                     	;# 
   329  0008                     	;# 
   330  0009                     	;# 
   331  000A                     	;# 
   332  000B                     	;# 
   333  000C                     	;# 
   334  000D                     	;# 
   335  000E                     	;# 
   336  000E                     	;# 
   337  000F                     	;# 
   338  0010                     	;# 
   339  0011                     	;# 
   340  0012                     	;# 
   341  0013                     	;# 
   342  0014                     	;# 
   343  0015                     	;# 
   344  0015                     	;# 
   345  0016                     	;# 
   346  0017                     	;# 
   347  0018                     	;# 
   348  0019                     	;# 
   349  001A                     	;# 
   350  001B                     	;# 
   351  001B                     	;# 
   352  001C                     	;# 
   353  001D                     	;# 
   354  001E                     	;# 
   355  001F                     	;# 
   356  0081                     	;# 
   357  0085                     	;# 
   358  0086                     	;# 
   359  0087                     	;# 
   360  0088                     	;# 
   361  0089                     	;# 
   362  008C                     	;# 
   363  008D                     	;# 
   364  008E                     	;# 
   365  0091                     	;# 
   366  0092                     	;# 
   367  0093                     	;# 
   368  0094                     	;# 
   369  0098                     	;# 
   370  0099                     	;# 
   371  009C                     	;# 
   372  009D                     	;# 
   373  009E                     	;# 
   374  009F                     	;# 
   375  010C                     	;# 
   376  010D                     	;# 
   377  010E                     	;# 
   378  010F                     	;# 
   379  018C                     	;# 
   380  018D                     	;# 
   381                           
   382                           	psect	idataBANK1
   383  16C8                     __pidataBANK1:
   384                           
   385                           ;initializer for _ki
   386  16C8  3403               	retlw	3
   387  16C9  3400               	retlw	0
   388                           
   389                           ;initializer for _kp
   390  16CA  341E               	retlw	30
   391  16CB  3400               	retlw	0
   392                           
   393                           ;initializer for _setPoint
   394  16CC  347C               	retlw	124
   395  16CD  3415               	retlw	21
   396                           
   397                           	psect	strings
   398  0800                     __pstrings:
   399  0800                     stringtab:
   400  0800                     __stringtab:
   401                           
   402                           ;	String table - string pointers are 1 byte each
   403  0800  1BFF               	btfsc	btemp+1,7
   404  0801  280A               	ljmp	stringcode
   405  0802  1383               	bcf	3,7
   406  0803  187F               	btfsc	btemp+1,0
   407  0804  1783               	bsf	3,7
   408  0805  0800               	movf	0,w
   409  0806  0A84               	incf	4,f
   410  0807  1903               	skipnz
   411  0808  0AFF               	incf	btemp+1,f
   412  0809  0008               	return
   413  080A                     stringcode:
   414  080A                     stringdir:
   415  080A  3008               	movlw	high stringdir
   416  080B  008A               	movwf	10
   417  080C  0804               	movf	4,w
   418  080D  0A84               	incf	4,f
   419  080E  0782               	addwf	2,f
   420  080F                     __stringbase:
   421  080F  3400               	retlw	0
   422  0810                     __end_of__stringtab:
   423  0810                     _dpowers:
   424  0810  3401               	retlw	1
   425  0811  3400               	retlw	0
   426  0812  340A               	retlw	10
   427  0813  3400               	retlw	0
   428  0814  3464               	retlw	100
   429  0815  3400               	retlw	0
   430  0816  34E8               	retlw	232
   431  0817  3403               	retlw	3
   432  0818  3410               	retlw	16
   433  0819  3427               	retlw	39
   434  081A                     __end_of_dpowers:
   435  0009                     _PORTEbits	set	9
   436  0008                     _PORTD	set	8
   437  001E                     _ADRESH	set	30
   438  001F                     _ADCON0	set	31
   439  001B                     _CCPR2L	set	27
   440  0015                     _CCPR1L	set	21
   441  000B                     _INTCONbits	set	11
   442  0001                     _TMR0	set	1
   443  000B                     _INTCON	set	11
   444  00FA                     _GO_nDONE	set	250
   445  0091                     _T2CKPS1	set	145
   446  0090                     _T2CKPS0	set	144
   447  00EA                     _CCP2M2	set	234
   448  00EB                     _CCP2M3	set	235
   449  0092                     _TMR2ON	set	146
   450  00BA                     _CCP1M2	set	186
   451  00BB                     _CCP1M3	set	187
   452  00EC                     _CCP2Y	set	236
   453  00ED                     _CCP2X	set	237
   454  00BC                     _CCP1Y	set	188
   455  00BD                     _CCP1X	set	189
   456  0033                     _RB3	set	51
   457  0032                     _RB2	set	50
   458  0031                     _RB1	set	49
   459  0030                     _RB0	set	48
   460  009E                     _ADRESL	set	158
   461  009F                     _ADCON1	set	159
   462  0092                     _PR2	set	146
   463  0081                     _OPTION_REG	set	129
   464  0089                     _TRISE	set	137
   465  0088                     _TRISD	set	136
   466  0087                     _TRISC	set	135
   467  0086                     _TRISB	set	134
   468  0085                     _TRISA	set	133
   469  0439                     _TRISC1	set	1081
   470  043A                     _TRISC2	set	1082
   471  081A                     STR_11:
   472  081A  344B               	retlw	75	;'K'
   473  081B  3450               	retlw	80	;'P'
   474  081C  343A               	retlw	58	;':'
   475  081D  3420               	retlw	32	;' '
   476  081E  3420               	retlw	32	;' '
   477  081F  3420               	retlw	32	;' '
   478  0820  3420               	retlw	32	;' '
   479  0821  3420               	retlw	32	;' '
   480  0822  344B               	retlw	75	;'K'
   481  0823  3444               	retlw	68	;'D'
   482  0824  343A               	retlw	58	;':'
   483  0825  3400               	retlw	0
   484  0826                     STR_10:
   485  0826  3454               	retlw	84	;'T'
   486  0827  3450               	retlw	80	;'P'
   487  0828  343A               	retlw	58	;':'
   488  0829  3420               	retlw	32	;' '
   489  082A  3420               	retlw	32	;' '
   490  082B  3443               	retlw	67	;'C'
   491  082C  3420               	retlw	32	;' '
   492  082D  3420               	retlw	32	;' '
   493  082E  344B               	retlw	75	;'K'
   494  082F  3449               	retlw	73	;'I'
   495  0830  343A               	retlw	58	;':'
   496  0831  3400               	retlw	0
   497  0832                     STR_4:
   498  0832  3420               	retlw	32	;' '
   499  0833  3420               	retlw	32	;' '
   500  0834  3420               	retlw	32	;' '
   501  0835  3420               	retlw	32	;' '
   502  0836  3420               	retlw	32	;' '
   503  0837  3400               	retlw	0
   504  0838                     STR_1:
   505  0838  3420               	retlw	32	;' '
   506  0839  3420               	retlw	32	;' '
   507  083A  3443               	retlw	67	;'C'
   508  083B  3420               	retlw	32	;' '
   509  083C  3420               	retlw	32	;' '
   510  083D  3400               	retlw	0
   511  083E                     STR_2:
   512  083E  3425               	retlw	37	;'%'
   513  083F  3464               	retlw	100	;'d'
   514  0840  3400               	retlw	0
   515  0832                     
   516                           	psect	cinit
   517  07C4                     start_initialization:	
   518                           ; #config settings
   519                           
   520  07C4                     __initialization:
   521                           
   522                           ; Initialize objects allocated to BANK1
   523  07C4  1683               	bsf	3,5	;RP0=1, select bank1
   524  07C5  1303               	bcf	3,6	;RP1=0, select bank1
   525  07C6  160A  118A  26C8  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   526  07CB  00D2               	movwf	__pdataBANK1& (0+127)
   527  07CC  160A  118A  26C9  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   528  07D1  00D3               	movwf	(__pdataBANK1+1)& (0+127)
   529  07D2  160A  118A  26CA  120A  118A  	fcall	__pidataBANK1+2	;fetch initializer
   530  07D7  00D4               	movwf	(__pdataBANK1+2)& (0+127)
   531  07D8  160A  118A  26CB  120A  118A  	fcall	__pidataBANK1+3	;fetch initializer
   532  07DD  00D5               	movwf	(__pdataBANK1+3)& (0+127)
   533  07DE  160A  118A  26CC  120A  118A  	fcall	__pidataBANK1+4	;fetch initializer
   534  07E3  00D6               	movwf	(__pdataBANK1+4)& (0+127)
   535  07E4  160A  118A  26CD  120A  118A  	fcall	__pidataBANK1+5	;fetch initializer
   536  07E9  00D7               	movwf	(__pdataBANK1+5)& (0+127)
   537                           
   538                           ; Clear objects allocated to BANK3
   539  07EA  1783               	bsf	3,7	;select IRP bank2
   540  07EB  3090               	movlw	low __pbssBANK3
   541  07EC  0084               	movwf	4
   542  07ED  30B0               	movlw	low (__pbssBANK3+32)
   543  07EE  160A  118A  26CE  120A  118A  	fcall	clear_ram0
   544                           
   545                           ; Clear objects allocated to BANK1
   546  07F3  1383               	bcf	3,7	;select IRP bank0
   547  07F4  30A0               	movlw	low __pbssBANK1
   548  07F5  0084               	movwf	4
   549  07F6  30C6               	movlw	low (__pbssBANK1+38)
   550  07F7  160A  118A  26CE  120A  118A  	fcall	clear_ram0
   551  07FC                     end_of_initialization:	
   552                           ;End of C runtime variable initialization code
   553                           
   554  07FC                     __end_of__initialization:
   555  07FC  0183               	clrf	3
   556  07FD  120A  158A  29CC   	ljmp	_main	;jump to C main() function
   557                           
   558                           	psect	bssBANK1
   559  00A0                     __pbssBANK1:
   560  00A0                     _estouro:
   561  00A0                     	ds	2
   562  00A2                     _PID:
   563  00A2                     	ds	2
   564  00A4                     _derivativo:
   565  00A4                     	ds	2
   566  00A6                     _integral:
   567  00A6                     	ds	2
   568  00A8                     _proporcional:
   569  00A8                     	ds	2
   570  00AA                     _kdReferencia:
   571  00AA                     	ds	2
   572  00AC                     _kiReferencia:
   573  00AC                     	ds	2
   574  00AE                     _kpReferencia:
   575  00AE                     	ds	2
   576  00B0                     _kd:
   577  00B0                     	ds	2
   578  00B2                     _erro:
   579  00B2                     	ds	2
   580  00B4                     _setPointReferencia:
   581  00B4                     	ds	2
   582  00B6                     _setPointCalculo:
   583  00B6                     	ds	2
   584  00B8                     _menu:
   585  00B8                     	ds	2
   586  00BA                     _temperaturaReferencia:
   587  00BA                     	ds	2
   588  00BC                     _temperatura:
   589  00BC                     	ds	2
   590  00BE                     controlarValores@S4Atual:
   591  00BE                     	ds	1
   592  00BF                     controlarValores@S4Anterior:
   593  00BF                     	ds	1
   594  00C0                     controlarValores@S3Atual:
   595  00C0                     	ds	1
   596  00C1                     controlarValores@S3Anterior:
   597  00C1                     	ds	1
   598  00C2                     controlarValores@S2Atual:
   599  00C2                     	ds	1
   600  00C3                     controlarValores@S2Anterior:
   601  00C3                     	ds	1
   602  00C4                     controlarValores@S1Atual:
   603  00C4                     	ds	1
   604  00C5                     controlarValores@S1Anterior:
   605  00C5                     	ds	1
   606                           
   607                           	psect	dataBANK1
   608  00D2                     __pdataBANK1:
   609  00D2                     _ki:
   610  00D2                     	ds	2
   611  00D4                     _kp:
   612  00D4                     	ds	2
   613  00D6                     _setPoint:
   614  00D6                     	ds	2
   615                           
   616                           	psect	bssBANK3
   617  0190                     __pbssBANK3:
   618  0190                     _string:
   619  0190                     	ds	32
   620                           
   621                           	psect	clrtext
   622  16CE                     clear_ram0:	
   623                           ;	Called with FSR containing the base address, and
   624                           ;	W with the last address+1
   625                           
   626  16CE  0064               	clrwdt	;clear the watchdog before getting into this loop
   627  16CF                     clrloop0:
   628  16CF  0180               	clrf	0	;clear RAM location pointed to by FSR
   629  16D0  0A84               	incf	4,f	;increment pointer
   630  16D1  0604               	xorwf	4,w	;XOR with final address
   631  16D2  1903               	btfsc	3,2	;have we reached the end yet?
   632  16D3  3400               	retlw	0	;all done for this memory range, return
   633  16D4  0604               	xorwf	4,w	;XOR again to restore value
   634  16D5  2ECF               	goto	clrloop0	;do the next byte
   635                           
   636                           	psect	cstackBANK1
   637  00C6                     __pcstackBANK1:
   638  00C6                     ??___fltol:
   639                           
   640                           ; 1 bytes @ 0x0
   641  00C6                     	ds	5
   642  00CB                     ??_PWM1_Duty:
   643  00CB                     ??_PWM2_Duty:	
   644                           ; 1 bytes @ 0x5
   645                           
   646                           
   647                           ; 1 bytes @ 0x5
   648  00CB                     	ds	2
   649  00CD                     ??_realizarCalculo:
   650  00CD                     controlarCooler@cooler:	
   651                           ; 1 bytes @ 0x7
   652                           
   653                           
   654                           ; 2 bytes @ 0x7
   655  00CD                     	ds	2
   656  00CF                     ??_main:
   657                           
   658                           ; 1 bytes @ 0x9
   659  00CF                     	ds	3
   660                           
   661                           	psect	cstackCOMMON
   662  0070                     __pcstackCOMMON:
   663  0070                     ?_lcd_cmd:
   664  0070                     ?_ADC_Init:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     ??_ADC_Init:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0070                     ?_PWM1_Start:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0070                     ??_PWM1_Start:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ?_PWM2_Start:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ??_PWM2_Start:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ?_lcd_init:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ?_controlarValores:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ?_imprimirValoresLcd:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     ?_realizarCalculo:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0070                     ?_controlarCooler:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0070                     ?_main:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0070                     ?_lcd_wr:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0070                     ??_lcd_wr:	
   704                           ; 1 bytes @ 0x0
   705                           
   706  0070                     ?_lcd_dat:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0070                     ?_controleMaximoMinimo:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0070                     ?_ADC_Read:	
   713                           ; 2 bytes @ 0x0
   714                           
   715  0070                     ?__Umul8_16:	
   716                           ; 2 bytes @ 0x0
   717                           
   718  0070                     ?___awmod:	
   719                           ; 2 bytes @ 0x0
   720                           
   721  0070                     ?___lwdiv:	
   722                           ; 2 bytes @ 0x0
   723                           
   724  0070                     ?___aldiv:	
   725                           ; 2 bytes @ 0x0
   726                           
   727  0070                     lcd_wr@val:	
   728                           ; 4 bytes @ 0x0
   729                           
   730  0070                     __Umul8_16@multiplicand:	
   731                           ; 1 bytes @ 0x0
   732                           
   733  0070                     controleMaximoMinimo@valor:	
   734                           ; 1 bytes @ 0x0
   735                           
   736  0070                     ___awmod@divisor:	
   737                           ; 2 bytes @ 0x0
   738                           
   739  0070                     ___lwdiv@divisor:	
   740                           ; 2 bytes @ 0x0
   741                           
   742  0070                     ___aldiv@divisor:	
   743                           ; 2 bytes @ 0x0
   744                           
   745                           
   746                           ; 4 bytes @ 0x0
   747  0070                     	ds	1
   748  0071                     ??_lcd_cmd:
   749  0071                     ??_lcd_dat:	
   750                           ; 1 bytes @ 0x1
   751                           
   752  0071                     lcd_cmd@val:	
   753                           ; 1 bytes @ 0x1
   754                           
   755  0071                     lcd_dat@val:	
   756                           ; 1 bytes @ 0x1
   757                           
   758                           
   759                           ; 1 bytes @ 0x1
   760  0071                     	ds	1
   761  0072                     ??_controleMaximoMinimo:
   762  0072                     ?_lcd_str:	
   763                           ; 1 bytes @ 0x2
   764                           
   765  0072                     ??_ADC_Read:	
   766                           ; 1 bytes @ 0x2
   767                           
   768  0072                     ??_lcd_init:	
   769                           ; 1 bytes @ 0x2
   770                           
   771  0072                     ??__Umul8_16:	
   772                           ; 1 bytes @ 0x2
   773                           
   774  0072                     ??_controlarValores:	
   775                           ; 1 bytes @ 0x2
   776                           
   777  0072                     lcd_str@str:	
   778                           ; 1 bytes @ 0x2
   779                           
   780  0072                     ___awmod@dividend:	
   781                           ; 2 bytes @ 0x2
   782                           
   783  0072                     ___lwdiv@dividend:	
   784                           ; 2 bytes @ 0x2
   785                           
   786                           
   787                           ; 2 bytes @ 0x2
   788  0072                     	ds	2
   789  0074                     ??_lcd_str:
   790  0074                     ??___awmod:	
   791                           ; 1 bytes @ 0x4
   792                           
   793  0074                     ??___lwdiv:	
   794                           ; 1 bytes @ 0x4
   795                           
   796  0074                     ADC_Read@channel:	
   797                           ; 1 bytes @ 0x4
   798                           
   799  0074                     __Umul8_16@product:	
   800                           ; 1 bytes @ 0x4
   801                           
   802  0074                     ___aldiv@dividend:	
   803                           ; 2 bytes @ 0x4
   804                           
   805                           
   806                           ; 4 bytes @ 0x4
   807  0074                     	ds	1
   808  0075                     ?___wmul:
   809  0075                     lcd_str@i:	
   810                           ; 2 bytes @ 0x5
   811                           
   812  0075                     ___awmod@counter:	
   813                           ; 1 bytes @ 0x5
   814                           
   815  0075                     ___wmul@multiplier:	
   816                           ; 1 bytes @ 0x5
   817                           
   818  0075                     ___lwdiv@quotient:	
   819                           ; 2 bytes @ 0x5
   820                           
   821                           
   822                           ; 2 bytes @ 0x5
   823  0075                     	ds	1
   824  0076                     ___awmod@sign:
   825  0076                     __Umul8_16@word_mpld:	
   826                           ; 1 bytes @ 0x6
   827                           
   828                           
   829                           ; 2 bytes @ 0x6
   830  0076                     	ds	1
   831  0077                     ?___awdiv:
   832  0077                     ___lwdiv@counter:	
   833                           ; 2 bytes @ 0x7
   834                           
   835  0077                     ___wmul@multiplicand:	
   836                           ; 1 bytes @ 0x7
   837                           
   838  0077                     ___awdiv@divisor:	
   839                           ; 2 bytes @ 0x7
   840                           
   841                           
   842                           ; 2 bytes @ 0x7
   843  0077                     	ds	1
   844  0078                     ??___aldiv:
   845  0078                     ?___lwmod:	
   846                           ; 1 bytes @ 0x8
   847                           
   848  0078                     __Umul8_16@multiplier:	
   849                           ; 2 bytes @ 0x8
   850                           
   851  0078                     ___lwmod@divisor:	
   852                           ; 1 bytes @ 0x8
   853                           
   854                           
   855                           ; 2 bytes @ 0x8
   856  0078                     	ds	1
   857  0079                     ??_PWM_Init:
   858  0079                     ??___wmul:	
   859                           ; 1 bytes @ 0x9
   860                           
   861  0079                     ___wmul@product:	
   862                           ; 1 bytes @ 0x9
   863                           
   864  0079                     ___awdiv@dividend:	
   865                           ; 2 bytes @ 0x9
   866                           
   867                           
   868                           ; 2 bytes @ 0x9
   869  0079                     	ds	1
   870  007A                     ___lwmod@dividend:
   871                           
   872                           ; 2 bytes @ 0xA
   873  007A                     	ds	1
   874  007B                     ??___awdiv:
   875  007B                     ___fltol@sign1:	
   876                           ; 1 bytes @ 0xB
   877                           
   878                           
   879                           ; 1 bytes @ 0xB
   880  007B                     	ds	1
   881  007C                     ??___lwmod:
   882  007C                     ___fltol@exp1:	
   883                           ; 1 bytes @ 0xC
   884                           
   885                           
   886                           ; 1 bytes @ 0xC
   887  007C                     	ds	1
   888  007D                     ??_controlarCooler:
   889  007D                     ___lwmod@counter:	
   890                           ; 1 bytes @ 0xD
   891                           
   892                           
   893                           ; 1 bytes @ 0xD
   894  007D                     	ds	1
   895                           
   896                           	psect	cstackBANK0
   897  0020                     __pcstackBANK0:
   898  0020                     ?_sprintf:
   899  0020                     sprintf@f:	
   900                           ; 2 bytes @ 0x0
   901                           
   902  0020                     ___aldiv@counter:	
   903                           ; 1 bytes @ 0x0
   904                           
   905  0020                     ___awdiv@counter:	
   906                           ; 1 bytes @ 0x0
   907                           
   908                           
   909                           ; 1 bytes @ 0x0
   910  0020                     	ds	1
   911  0021                     ___aldiv@sign:
   912  0021                     ___awdiv@sign:	
   913                           ; 1 bytes @ 0x1
   914                           
   915                           
   916                           ; 1 bytes @ 0x1
   917  0021                     	ds	1
   918  0022                     ___awdiv@quotient:
   919  0022                     ___aldiv@quotient:	
   920                           ; 2 bytes @ 0x2
   921                           
   922                           
   923                           ; 4 bytes @ 0x2
   924  0022                     	ds	1
   925  0023                     ??_sprintf:
   926                           
   927                           ; 1 bytes @ 0x3
   928  0023                     	ds	3
   929  0026                     ?_PWM_Init:
   930  0026                     ?___xxtofl:	
   931                           ; 1 bytes @ 0x6
   932                           
   933  0026                     sprintf@ap:	
   934                           ; 4 bytes @ 0x6
   935                           
   936  0026                     PWM_Init@freq:	
   937                           ; 1 bytes @ 0x6
   938                           
   939  0026                     ___xxtofl@val:	
   940                           ; 4 bytes @ 0x6
   941                           
   942                           
   943                           ; 4 bytes @ 0x6
   944  0026                     	ds	1
   945  0027                     sprintf@flag:
   946                           
   947                           ; 1 bytes @ 0x7
   948  0027                     	ds	1
   949  0028                     sprintf@prec:
   950                           
   951                           ; 1 bytes @ 0x8
   952  0028                     	ds	1
   953  0029                     sprintf@val:
   954                           
   955                           ; 2 bytes @ 0x9
   956  0029                     	ds	1
   957  002A                     ??___xxtofl:
   958                           
   959                           ; 1 bytes @ 0xA
   960  002A                     	ds	1
   961  002B                     sprintf@sp:
   962                           
   963                           ; 1 bytes @ 0xB
   964  002B                     	ds	1
   965  002C                     sprintf@c:
   966                           
   967                           ; 1 bytes @ 0xC
   968  002C                     	ds	1
   969  002D                     ??_imprimirValoresLcd:
   970                           
   971                           ; 1 bytes @ 0xD
   972  002D                     	ds	1
   973  002E                     ___xxtofl@sign:
   974  002E                     imprimirValoresLcd@milhar:	
   975                           ; 1 bytes @ 0xE
   976                           
   977                           
   978                           ; 2 bytes @ 0xE
   979  002E                     	ds	1
   980  002F                     ___xxtofl@exp:
   981                           
   982                           ; 1 bytes @ 0xF
   983  002F                     	ds	1
   984  0030                     imprimirValoresLcd@centena:
   985  0030                     ___xxtofl@arg:	
   986                           ; 2 bytes @ 0x10
   987                           
   988                           
   989                           ; 4 bytes @ 0x10
   990  0030                     	ds	4
   991  0034                     ?___fldiv:
   992  0034                     ___fldiv@a:	
   993                           ; 4 bytes @ 0x14
   994                           
   995                           
   996                           ; 4 bytes @ 0x14
   997  0034                     	ds	4
   998  0038                     ___fldiv@b:
   999                           
  1000                           ; 4 bytes @ 0x18
  1001  0038                     	ds	4
  1002  003C                     ??___fldiv:
  1003                           
  1004                           ; 1 bytes @ 0x1C
  1005  003C                     	ds	5
  1006  0041                     ___fldiv@rem:
  1007                           
  1008                           ; 4 bytes @ 0x21
  1009  0041                     	ds	4
  1010  0045                     ___fldiv@sign:
  1011                           
  1012                           ; 1 bytes @ 0x25
  1013  0045                     	ds	1
  1014  0046                     ___fldiv@new_exp:
  1015                           
  1016                           ; 2 bytes @ 0x26
  1017  0046                     	ds	2
  1018  0048                     ___fldiv@grs:
  1019                           
  1020                           ; 4 bytes @ 0x28
  1021  0048                     	ds	4
  1022  004C                     ___fldiv@bexp:
  1023                           
  1024                           ; 1 bytes @ 0x2C
  1025  004C                     	ds	1
  1026  004D                     ___fldiv@aexp:
  1027                           
  1028                           ; 1 bytes @ 0x2D
  1029  004D                     	ds	1
  1030  004E                     ?___flmul:
  1031  004E                     ___flmul@b:	
  1032                           ; 4 bytes @ 0x2E
  1033                           
  1034                           
  1035                           ; 4 bytes @ 0x2E
  1036  004E                     	ds	4
  1037  0052                     ___flmul@a:
  1038                           
  1039                           ; 4 bytes @ 0x32
  1040  0052                     	ds	4
  1041  0056                     ??___flmul:
  1042                           
  1043                           ; 1 bytes @ 0x36
  1044  0056                     	ds	5
  1045  005B                     ___flmul@sign:
  1046                           
  1047                           ; 1 bytes @ 0x3B
  1048  005B                     	ds	1
  1049  005C                     ___flmul@grs:
  1050                           
  1051                           ; 4 bytes @ 0x3C
  1052  005C                     	ds	4
  1053  0060                     ___flmul@aexp:
  1054                           
  1055                           ; 1 bytes @ 0x40
  1056  0060                     	ds	1
  1057  0061                     ___flmul@bexp:
  1058                           
  1059                           ; 1 bytes @ 0x41
  1060  0061                     	ds	1
  1061  0062                     ___flmul@prod:
  1062                           
  1063                           ; 4 bytes @ 0x42
  1064  0062                     	ds	4
  1065  0066                     ___flmul@temp:
  1066                           
  1067                           ; 2 bytes @ 0x46
  1068  0066                     	ds	2
  1069  0068                     ?___fltol:
  1070  0068                     ___fltol@f1:	
  1071                           ; 4 bytes @ 0x48
  1072                           
  1073                           
  1074                           ; 4 bytes @ 0x48
  1075  0068                     	ds	4
  1076  006C                     ?_PWM1_Duty:
  1077  006C                     ?_PWM2_Duty:	
  1078                           ; 1 bytes @ 0x4C
  1079                           
  1080  006C                     PWM1_Duty@duty:	
  1081                           ; 1 bytes @ 0x4C
  1082                           
  1083  006C                     PWM2_Duty@duty:	
  1084                           ; 2 bytes @ 0x4C
  1085                           
  1086                           
  1087                           ; 2 bytes @ 0x4C
  1088  006C                     	ds	2
  1089  006E                     PWM1_Duty@freq:
  1090  006E                     PWM2_Duty@freq:	
  1091                           ; 2 bytes @ 0x4E
  1092                           
  1093                           
  1094                           ; 2 bytes @ 0x4E
  1095  006E                     	ds	2
  1096                           
  1097                           	psect	maintext
  1098  09CC                     __pmaintext:	
  1099 ;;
  1100 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1101 ;;
  1102 ;; *************** function _main *****************
  1103 ;; Defined at:
  1104 ;;		line 209 in file "main.c"
  1105 ;; Parameters:    Size  Location     Type
  1106 ;;		None
  1107 ;; Auto vars:     Size  Location     Type
  1108 ;;		None
  1109 ;; Return value:  Size  Location     Type
  1110 ;;                  1    wreg      void 
  1111 ;; Registers used:
  1112 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1113 ;; Tracked objects:
  1114 ;;		On entry : B00/0
  1115 ;;		On exit  : 0/0
  1116 ;;		Unchanged: 0/0
  1117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1118 ;;      Params:         0       0       0       0       0
  1119 ;;      Locals:         0       0       0       0       0
  1120 ;;      Temps:          0       0       3       0       0
  1121 ;;      Totals:         0       0       3       0       0
  1122 ;;Total ram usage:        3 bytes
  1123 ;; Hardware stack levels required when called: 4
  1124 ;; This function calls:
  1125 ;;		_ADC_Init
  1126 ;;		_PWM1_Start
  1127 ;;		_PWM2_Start
  1128 ;;		_controlarCooler
  1129 ;;		_controlarValores
  1130 ;;		_imprimirValoresLcd
  1131 ;;		_lcd_cmd
  1132 ;;		_lcd_init
  1133 ;;		_lcd_str
  1134 ;;		_realizarCalculo
  1135 ;; This function is called by:
  1136 ;;		Startup code after reset
  1137 ;; This function uses a non-reentrant model
  1138 ;;
  1139                           
  1140                           
  1141                           ;psect for function _main
  1142  09CC                     _main:
  1143  09CC                     l2660:	
  1144                           ;incstack = 0
  1145                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1146                           
  1147                           
  1148                           ;main.c: 210:     TRISA = 0xFF;
  1149  09CC  30FF               	movlw	255
  1150  09CD  1683               	bsf	3,5	;RP0=1, select bank1
  1151  09CE  1303               	bcf	3,6	;RP1=0, select bank1
  1152  09CF  0085               	movwf	5	;volatile
  1153                           
  1154                           ;main.c: 211:     TRISB = 0x0F;
  1155  09D0  300F               	movlw	15
  1156  09D1  0086               	movwf	6	;volatile
  1157  09D2                     l2662:
  1158                           
  1159                           ;main.c: 212:     TRISC = 0x00;
  1160  09D2  0187               	clrf	7	;volatile
  1161  09D3                     l2664:
  1162                           
  1163                           ;main.c: 213:     TRISD = 0x00;
  1164  09D3  0188               	clrf	8	;volatile
  1165  09D4                     l2666:
  1166                           
  1167                           ;main.c: 214:     TRISE = 0x00;
  1168  09D4  0189               	clrf	9	;volatile
  1169  09D5                     l2668:
  1170                           
  1171                           ;main.c: 216:     OPTION_REG = 0x07;
  1172  09D5  3007               	movlw	7
  1173  09D6  0081               	movwf	1	;volatile
  1174  09D7                     l2670:
  1175                           
  1176                           ;main.c: 217:     INTCON = 0xA0;
  1177  09D7  30A0               	movlw	160
  1178  09D8  008B               	movwf	11	;volatile
  1179  09D9                     l2672:
  1180                           
  1181                           ;main.c: 218:     TMR0 = 9;
  1182  09D9  3009               	movlw	9
  1183  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  1184  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  1185  09DC  0081               	movwf	1	;volatile
  1186  09DD                     l2674:
  1187                           
  1188                           ;main.c: 220:     ADC_Init();
  1189  09DD  160A  118A  26D6  120A  158A  	fcall	_ADC_Init
  1190  09E2                     l2676:
  1191                           
  1192                           ;main.c: 221:     PWM1_Start();
  1193  09E2  160A  118A  26DF  120A  158A  	fcall	_PWM1_Start
  1194  09E7                     l2678:
  1195                           
  1196                           ;main.c: 222:     PWM2_Start();
  1197  09E7  160A  118A  26E8  120A  158A  	fcall	_PWM2_Start
  1198  09EC                     l2680:
  1199                           
  1200                           ;main.c: 223:     lcd_init();
  1201  09EC  160A  118A  27CA  120A  158A  	fcall	_lcd_init
  1202  09F1                     l2682:
  1203                           
  1204                           ;main.c: 224:     lcd_cmd(0x80);
  1205  09F1  3080               	movlw	128
  1206  09F2  160A  118A  26F3  120A  158A  	fcall	_lcd_cmd
  1207  09F7                     l2684:
  1208                           
  1209                           ;main.c: 225:     lcd_str("TP:  C  KI:");
  1210  09F7  3017               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1211  09F8  00F2               	movwf	lcd_str@str
  1212  09F9  3080               	movlw	128
  1213  09FA  00F3               	movwf	lcd_str@str+1
  1214  09FB  120A  118A  2003  120A  158A  	fcall	_lcd_str
  1215  0A00                     l2686:
  1216                           
  1217                           ;main.c: 226:     lcd_cmd(0xC0);
  1218  0A00  30C0               	movlw	192
  1219  0A01  160A  118A  26F3  120A  158A  	fcall	_lcd_cmd
  1220  0A06                     l2688:
  1221                           
  1222                           ;main.c: 227:     lcd_str("KP:     KD:");
  1223  0A06  300B               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1224  0A07  00F2               	movwf	lcd_str@str
  1225  0A08  3080               	movlw	128
  1226  0A09  00F3               	movwf	lcd_str@str+1
  1227  0A0A  120A  118A  2003  120A  158A  	fcall	_lcd_str
  1228  0A0F                     l2690:
  1229                           
  1230                           ;main.c: 230:         controlarValores();
  1231  0A0F  120A  158A  25CC  120A  158A  	fcall	_controlarValores
  1232  0A14                     l2692:
  1233                           
  1234                           ;main.c: 231:         estouro += INTCONbits.TMR0IF;
  1235  0A14  0C0B               	rrf	11,w	;volatile
  1236  0A15  1683               	bsf	3,5	;RP0=1, select bank1
  1237  0A16  1303               	bcf	3,6	;RP1=0, select bank1
  1238  0A17  00CF               	movwf	??_main^(0+128)
  1239  0A18  0C4F               	rrf	??_main^(0+128),w
  1240  0A19  3901               	andlw	1
  1241  0A1A  00D0               	movwf	(??_main+1)^(0+128)
  1242  0A1B  01D1               	clrf	((??_main+1)^(0+128)+1)
  1243  0A1C  0850               	movf	(??_main+1)^(0+128),w
  1244  0A1D  07A0               	addwf	_estouro^(0+128),f
  1245  0A1E  1803               	skipnc
  1246  0A1F  0AA1               	incf	(_estouro+1)^(0+128),f
  1247  0A20  0851               	movf	(??_main+2)^(0+128),w
  1248  0A21  07A1               	addwf	(_estouro+1)^(0+128),f
  1249  0A22                     l2694:
  1250                           
  1251                           ;main.c: 233:         if (estouro > 124){
  1252  0A22  3000               	movlw	0
  1253  0A23  0221               	subwf	(_estouro+1)^(0+128),w
  1254  0A24  307D               	movlw	125
  1255  0A25  1903               	skipnz
  1256  0A26  0220               	subwf	_estouro^(0+128),w
  1257  0A27  1C03               	skipc
  1258  0A28  2A2A               	goto	u3761
  1259  0A29  2A2B               	goto	u3760
  1260  0A2A                     u3761:
  1261  0A2A  2A32               	goto	l2700
  1262  0A2B                     u3760:
  1263  0A2B                     l2696:
  1264                           
  1265                           ;main.c: 234:             estouro = 0;
  1266  0A2B  01A0               	clrf	_estouro^(0+128)
  1267  0A2C  01A1               	clrf	(_estouro+1)^(0+128)
  1268  0A2D                     l2698:
  1269                           
  1270                           ;main.c: 235:             realizarCalculo();
  1271  0A2D  120A  158A  26CD  120A  158A  	fcall	_realizarCalculo
  1272  0A32                     l2700:
  1273                           
  1274                           ;main.c: 238:         controlarCooler();
  1275  0A32  160A  118A  2767  120A  158A  	fcall	_controlarCooler
  1276  0A37                     l2702:
  1277                           
  1278                           ;main.c: 239:         imprimirValoresLcd();
  1279  0A37  120A  118A  20EA  120A  158A  	fcall	_imprimirValoresLcd
  1280  0A3C  2A0F               	goto	l2690
  1281  0A3D  120A  118A  2800   	ljmp	start
  1282  0A40                     __end_of_main:
  1283                           
  1284                           	psect	text1
  1285  0ECD                     __ptext1:	
  1286 ;; *************** function _realizarCalculo *****************
  1287 ;; Defined at:
  1288 ;;		line 189 in file "main.c"
  1289 ;; Parameters:    Size  Location     Type
  1290 ;;		None
  1291 ;; Auto vars:     Size  Location     Type
  1292 ;;		None
  1293 ;; Return value:  Size  Location     Type
  1294 ;;                  1    wreg      void 
  1295 ;; Registers used:
  1296 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1297 ;; Tracked objects:
  1298 ;;		On entry : 0/0
  1299 ;;		On exit  : 0/0
  1300 ;;		Unchanged: 0/0
  1301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1302 ;;      Params:         0       0       0       0       0
  1303 ;;      Locals:         0       0       0       0       0
  1304 ;;      Temps:          0       0       2       0       0
  1305 ;;      Totals:         0       0       2       0       0
  1306 ;;Total ram usage:        2 bytes
  1307 ;; Hardware stack levels used: 1
  1308 ;; Hardware stack levels required when called: 3
  1309 ;; This function calls:
  1310 ;;		_ADC_Read
  1311 ;;		_PWM1_Duty
  1312 ;;		___awdiv
  1313 ;;		___fldiv
  1314 ;;		___flmul
  1315 ;;		___fltol
  1316 ;;		___wmul
  1317 ;;		___xxtofl
  1318 ;;		_controleMaximoMinimo
  1319 ;; This function is called by:
  1320 ;;		_main
  1321 ;; This function uses a non-reentrant model
  1322 ;;
  1323                           
  1324                           
  1325                           ;psect for function _realizarCalculo
  1326  0ECD                     _realizarCalculo:
  1327  0ECD                     l2630:	
  1328                           ;incstack = 0
  1329                           ; Regs used in _realizarCalculo: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1330                           
  1331                           
  1332                           ;main.c: 190:     temperatura = (ADC_Read(0)*10/8 - 150);
  1333  0ECD  3000               	movlw	0
  1334  0ECE  160A  118A  2796  120A  158A  	fcall	_ADC_Read
  1335  0ED3  0871               	movf	?_ADC_Read+1,w
  1336  0ED4  00F6               	movwf	___wmul@multiplier+1
  1337  0ED5  0870               	movf	?_ADC_Read,w
  1338  0ED6  00F5               	movwf	___wmul@multiplier
  1339  0ED7  300A               	movlw	10
  1340  0ED8  00F7               	movwf	___wmul@multiplicand
  1341  0ED9  3000               	movlw	0
  1342  0EDA  00F8               	movwf	___wmul@multiplicand+1
  1343  0EDB  160A  118A  271B  120A  158A  	fcall	___wmul
  1344  0EE0  0875               	movf	?___wmul,w
  1345  0EE1  1683               	bsf	3,5	;RP0=1, select bank1
  1346  0EE2  1303               	bcf	3,6	;RP1=0, select bank1
  1347  0EE3  00CD               	movwf	??_realizarCalculo^(0+128)
  1348  0EE4  0876               	movf	?___wmul+1,w
  1349  0EE5  00CE               	movwf	(??_realizarCalculo^(0+128)+1)
  1350  0EE6  1003               	clrc
  1351  0EE7  0CCE               	rrf	(??_realizarCalculo^(0+128)+1),f
  1352  0EE8  0CCD               	rrf	??_realizarCalculo^(0+128),f
  1353  0EE9  1003               	clrc
  1354  0EEA  0CCE               	rrf	(??_realizarCalculo^(0+128)+1),f
  1355  0EEB  0CCD               	rrf	??_realizarCalculo^(0+128),f
  1356  0EEC  1003               	clrc
  1357  0EED  0CCE               	rrf	(??_realizarCalculo^(0+128)+1),f
  1358  0EEE  0CCD               	rrf	??_realizarCalculo^(0+128),f
  1359  0EEF  084D               	movf	??_realizarCalculo^(0+128),w
  1360  0EF0  3E6A               	addlw	106
  1361  0EF1  00BC               	movwf	_temperatura^(0+128)
  1362  0EF2  084E               	movf	(??_realizarCalculo+1)^(0+128),w
  1363  0EF3  1803               	skipnc
  1364  0EF4  3E01               	addlw	1
  1365  0EF5  3EFF               	addlw	255
  1366  0EF6  00BD               	movwf	(_temperatura+1)^(0+128)
  1367                           
  1368                           ;main.c: 191:     erro = (setPointCalculo/10) - temperatura;
  1369  0EF7  300A               	movlw	10
  1370  0EF8  00F7               	movwf	___awdiv@divisor
  1371  0EF9  3000               	movlw	0
  1372  0EFA  00F8               	movwf	___awdiv@divisor+1
  1373  0EFB  0837               	movf	(_setPointCalculo+1)^(0+128),w
  1374  0EFC  00FA               	movwf	___awdiv@dividend+1
  1375  0EFD  0836               	movf	_setPointCalculo^(0+128),w
  1376  0EFE  00F9               	movwf	___awdiv@dividend
  1377  0EFF  120A  158A  2163  120A  158A  	fcall	___awdiv
  1378  0F04  1683               	bsf	3,5	;RP0=1, select bank1
  1379  0F05  1303               	bcf	3,6	;RP1=0, select bank1
  1380  0F06  083C               	movf	_temperatura^(0+128),w
  1381  0F07  0277               	subwf	?___awdiv,w
  1382  0F08  00B2               	movwf	_erro^(0+128)
  1383  0F09  083D               	movf	(_temperatura+1)^(0+128),w
  1384  0F0A  1C03               	skipc
  1385  0F0B  0A3D               	incf	(_temperatura+1)^(0+128),w
  1386  0F0C  0278               	subwf	?___awdiv+1,w
  1387  0F0D  00B3               	movwf	(_erro+1)^(0+128)
  1388                           
  1389                           ;main.c: 192:     proporcional = kp * erro;
  1390  0F0E  0855               	movf	(_kp+1)^(0+128),w
  1391  0F0F  00F6               	movwf	___wmul@multiplier+1
  1392  0F10  0854               	movf	_kp^(0+128),w
  1393  0F11  00F5               	movwf	___wmul@multiplier
  1394  0F12  0833               	movf	(_erro+1)^(0+128),w
  1395  0F13  00F8               	movwf	___wmul@multiplicand+1
  1396  0F14  0832               	movf	_erro^(0+128),w
  1397  0F15  00F7               	movwf	___wmul@multiplicand
  1398  0F16  160A  118A  271B  120A  158A  	fcall	___wmul
  1399  0F1B  0876               	movf	?___wmul+1,w
  1400  0F1C  1683               	bsf	3,5	;RP0=1, select bank1
  1401  0F1D  1303               	bcf	3,6	;RP1=0, select bank1
  1402  0F1E  00A9               	movwf	(_proporcional+1)^(0+128)
  1403  0F1F  0875               	movf	?___wmul,w
  1404  0F20  00A8               	movwf	_proporcional^(0+128)
  1405  0F21                     l2632:
  1406                           
  1407                           ;main.c: 193:     integral += (erro * ki) * 100E-3;
  1408  0F21  0853               	movf	(_ki+1)^(0+128),w
  1409  0F22  00F8               	movwf	___wmul@multiplicand+1
  1410  0F23  0852               	movf	_ki^(0+128),w
  1411  0F24  00F7               	movwf	___wmul@multiplicand
  1412  0F25  0833               	movf	(_erro+1)^(0+128),w
  1413  0F26  00F6               	movwf	___wmul@multiplier+1
  1414  0F27  0832               	movf	_erro^(0+128),w
  1415  0F28  00F5               	movwf	___wmul@multiplier
  1416  0F29  160A  118A  271B  120A  158A  	fcall	___wmul
  1417  0F2E  0875               	movf	?___wmul,w
  1418  0F2F  1283               	bcf	3,5	;RP0=0, select bank0
  1419  0F30  1303               	bcf	3,6	;RP1=0, select bank0
  1420  0F31  00A6               	movwf	___xxtofl@val
  1421  0F32  0876               	movf	?___wmul+1,w
  1422  0F33  00A7               	movwf	___xxtofl@val+1
  1423  0F34  3000               	movlw	0
  1424  0F35  1BA7               	btfsc	___xxtofl@val+1,7
  1425  0F36  30FF               	movlw	255
  1426  0F37  00A8               	movwf	___xxtofl@val+2
  1427  0F38  00A9               	movwf	___xxtofl@val+3
  1428  0F39  3001               	movlw	1
  1429  0F3A  120A  118A  202E  120A  158A  	fcall	___xxtofl
  1430  0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  1431  0F40  1303               	bcf	3,6	;RP1=0, select bank0
  1432  0F41  0829               	movf	?___xxtofl+3,w
  1433  0F42  00D5               	movwf	___flmul@a+3
  1434  0F43  0828               	movf	?___xxtofl+2,w
  1435  0F44  00D4               	movwf	___flmul@a+2
  1436  0F45  0827               	movf	?___xxtofl+1,w
  1437  0F46  00D3               	movwf	___flmul@a+1
  1438  0F47  0826               	movf	?___xxtofl,w
  1439  0F48  00D2               	movwf	___flmul@a
  1440  0F49  303D               	movlw	61
  1441  0F4A  00D1               	movwf	___flmul@b+3
  1442  0F4B  30CC               	movlw	204
  1443  0F4C  00D0               	movwf	___flmul@b+2
  1444  0F4D  30CC               	movlw	204
  1445  0F4E  00CF               	movwf	___flmul@b+1
  1446  0F4F  30CD               	movlw	205
  1447  0F50  00CE               	movwf	___flmul@b
  1448  0F51  120A  118A  2463  120A  158A  	fcall	___flmul
  1449  0F56  1283               	bcf	3,5	;RP0=0, select bank0
  1450  0F57  1303               	bcf	3,6	;RP1=0, select bank0
  1451  0F58  0851               	movf	?___flmul+3,w
  1452  0F59  00EB               	movwf	___fltol@f1+3
  1453  0F5A  0850               	movf	?___flmul+2,w
  1454  0F5B  00EA               	movwf	___fltol@f1+2
  1455  0F5C  084F               	movf	?___flmul+1,w
  1456  0F5D  00E9               	movwf	___fltol@f1+1
  1457  0F5E  084E               	movf	?___flmul,w
  1458  0F5F  00E8               	movwf	___fltol@f1
  1459  0F60  120A  158A  2240  120A  158A  	fcall	___fltol
  1460  0F65  1283               	bcf	3,5	;RP0=0, select bank0
  1461  0F66  1303               	bcf	3,6	;RP1=0, select bank0
  1462  0F67  0868               	movf	?___fltol,w
  1463  0F68  1683               	bsf	3,5	;RP0=1, select bank1
  1464  0F69  1303               	bcf	3,6	;RP1=0, select bank1
  1465  0F6A  07A6               	addwf	_integral^(0+128),f
  1466  0F6B  1803               	skipnc
  1467  0F6C  0AA7               	incf	(_integral+1)^(0+128),f
  1468  0F6D  1283               	bcf	3,5	;RP0=0, select bank0
  1469  0F6E  1303               	bcf	3,6	;RP1=0, select bank0
  1470  0F6F  0869               	movf	?___fltol+1,w
  1471  0F70  1683               	bsf	3,5	;RP0=1, select bank1
  1472  0F71  1303               	bcf	3,6	;RP1=0, select bank1
  1473  0F72  07A7               	addwf	(_integral+1)^(0+128),f
  1474  0F73                     l2634:
  1475                           
  1476                           ;main.c: 194:     derivativo += ((temperaturaReferencia - temperatura) * kd) / 100E-3;
  1477  0F73  0831               	movf	(_kd+1)^(0+128),w
  1478  0F74  00F8               	movwf	___wmul@multiplicand+1
  1479  0F75  0830               	movf	_kd^(0+128),w
  1480  0F76  00F7               	movwf	___wmul@multiplicand
  1481  0F77  083C               	movf	_temperatura^(0+128),w
  1482  0F78  023A               	subwf	_temperaturaReferencia^(0+128),w
  1483  0F79  00F5               	movwf	___wmul@multiplier
  1484  0F7A  083D               	movf	(_temperatura+1)^(0+128),w
  1485  0F7B  1C03               	skipc
  1486  0F7C  0A3D               	incf	(_temperatura+1)^(0+128),w
  1487  0F7D  023B               	subwf	(_temperaturaReferencia+1)^(0+128),w
  1488  0F7E  00F6               	movwf	___wmul@multiplier+1
  1489  0F7F  160A  118A  271B  120A  158A  	fcall	___wmul
  1490  0F84  0875               	movf	?___wmul,w
  1491  0F85  1283               	bcf	3,5	;RP0=0, select bank0
  1492  0F86  1303               	bcf	3,6	;RP1=0, select bank0
  1493  0F87  00A6               	movwf	___xxtofl@val
  1494  0F88  0876               	movf	?___wmul+1,w
  1495  0F89  00A7               	movwf	___xxtofl@val+1
  1496  0F8A  3000               	movlw	0
  1497  0F8B  1BA7               	btfsc	___xxtofl@val+1,7
  1498  0F8C  30FF               	movlw	255
  1499  0F8D  00A8               	movwf	___xxtofl@val+2
  1500  0F8E  00A9               	movwf	___xxtofl@val+3
  1501  0F8F  3001               	movlw	1
  1502  0F90  120A  118A  202E  120A  158A  	fcall	___xxtofl
  1503  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  1504  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  1505  0F97  0829               	movf	?___xxtofl+3,w
  1506  0F98  00BB               	movwf	___fldiv@b+3
  1507  0F99  0828               	movf	?___xxtofl+2,w
  1508  0F9A  00BA               	movwf	___fldiv@b+2
  1509  0F9B  0827               	movf	?___xxtofl+1,w
  1510  0F9C  00B9               	movwf	___fldiv@b+1
  1511  0F9D  0826               	movf	?___xxtofl,w
  1512  0F9E  00B8               	movwf	___fldiv@b
  1513  0F9F  303D               	movlw	61
  1514  0FA0  00B7               	movwf	___fldiv@a+3
  1515  0FA1  30CC               	movlw	204
  1516  0FA2  00B6               	movwf	___fldiv@a+2
  1517  0FA3  30CC               	movlw	204
  1518  0FA4  00B5               	movwf	___fldiv@a+1
  1519  0FA5  30CD               	movlw	205
  1520  0FA6  00B4               	movwf	___fldiv@a
  1521  0FA7  120A  118A  2286  120A  158A  	fcall	___fldiv
  1522  0FAC  1283               	bcf	3,5	;RP0=0, select bank0
  1523  0FAD  1303               	bcf	3,6	;RP1=0, select bank0
  1524  0FAE  0837               	movf	?___fldiv+3,w
  1525  0FAF  00EB               	movwf	___fltol@f1+3
  1526  0FB0  0836               	movf	?___fldiv+2,w
  1527  0FB1  00EA               	movwf	___fltol@f1+2
  1528  0FB2  0835               	movf	?___fldiv+1,w
  1529  0FB3  00E9               	movwf	___fltol@f1+1
  1530  0FB4  0834               	movf	?___fldiv,w
  1531  0FB5  00E8               	movwf	___fltol@f1
  1532  0FB6  120A  158A  2240  120A  158A  	fcall	___fltol
  1533  0FBB  1283               	bcf	3,5	;RP0=0, select bank0
  1534  0FBC  1303               	bcf	3,6	;RP1=0, select bank0
  1535  0FBD  0868               	movf	?___fltol,w
  1536  0FBE  1683               	bsf	3,5	;RP0=1, select bank1
  1537  0FBF  1303               	bcf	3,6	;RP1=0, select bank1
  1538  0FC0  07A4               	addwf	_derivativo^(0+128),f
  1539  0FC1  1803               	skipnc
  1540  0FC2  0AA5               	incf	(_derivativo+1)^(0+128),f
  1541  0FC3  1283               	bcf	3,5	;RP0=0, select bank0
  1542  0FC4  1303               	bcf	3,6	;RP1=0, select bank0
  1543  0FC5  0869               	movf	?___fltol+1,w
  1544  0FC6  1683               	bsf	3,5	;RP0=1, select bank1
  1545  0FC7  1303               	bcf	3,6	;RP1=0, select bank1
  1546  0FC8  07A5               	addwf	(_derivativo+1)^(0+128),f
  1547  0FC9                     l2636:
  1548                           
  1549                           ;main.c: 195:     temperaturaReferencia = temperatura;
  1550  0FC9  083D               	movf	(_temperatura+1)^(0+128),w
  1551  0FCA  00BB               	movwf	(_temperaturaReferencia+1)^(0+128)
  1552  0FCB  083C               	movf	_temperatura^(0+128),w
  1553  0FCC  00BA               	movwf	_temperaturaReferencia^(0+128)
  1554  0FCD                     l2638:
  1555                           
  1556                           ;main.c: 197:     PID = (proporcional + integral + derivativo);
  1557  0FCD  0826               	movf	_integral^(0+128),w
  1558  0FCE  0728               	addwf	_proporcional^(0+128),w
  1559  0FCF  00CD               	movwf	??_realizarCalculo^(0+128)
  1560  0FD0  0827               	movf	(_integral+1)^(0+128),w
  1561  0FD1  1803               	skipnc
  1562  0FD2  0A27               	incf	(_integral+1)^(0+128),w
  1563  0FD3  0729               	addwf	(_proporcional+1)^(0+128),w
  1564  0FD4  00CE               	movwf	(??_realizarCalculo+1)^(0+128)
  1565  0FD5  0824               	movf	_derivativo^(0+128),w
  1566  0FD6  074D               	addwf	??_realizarCalculo^(0+128),w
  1567  0FD7  00A2               	movwf	_PID^(0+128)
  1568  0FD8  0825               	movf	(_derivativo+1)^(0+128),w
  1569  0FD9  1803               	skipnc
  1570  0FDA  0A25               	incf	(_derivativo+1)^(0+128),w
  1571  0FDB  074E               	addwf	(??_realizarCalculo+1)^(0+128),w
  1572  0FDC  00A3               	movwf	(_PID+1)^(0+128)
  1573  0FDD                     l2640:
  1574                           
  1575                           ;main.c: 198:     PID = controleMaximoMinimo(PID);
  1576  0FDD  0823               	movf	(_PID+1)^(0+128),w
  1577  0FDE  00F1               	movwf	controleMaximoMinimo@valor+1
  1578  0FDF  0822               	movf	_PID^(0+128),w
  1579  0FE0  00F0               	movwf	controleMaximoMinimo@valor
  1580  0FE1  160A  118A  2703  120A  158A  	fcall	_controleMaximoMinimo
  1581  0FE6  0871               	movf	?_controleMaximoMinimo+1,w
  1582  0FE7  1683               	bsf	3,5	;RP0=1, select bank1
  1583  0FE8  1303               	bcf	3,6	;RP1=0, select bank1
  1584  0FE9  00A3               	movwf	(_PID+1)^(0+128)
  1585  0FEA  0870               	movf	?_controleMaximoMinimo,w
  1586  0FEB  00A2               	movwf	_PID^(0+128)
  1587  0FEC                     l2642:
  1588                           
  1589                           ;main.c: 200:     PWM1_Duty(PID, 4000);
  1590  0FEC  0823               	movf	(_PID+1)^(0+128),w
  1591  0FED  1283               	bcf	3,5	;RP0=0, select bank0
  1592  0FEE  1303               	bcf	3,6	;RP1=0, select bank0
  1593  0FEF  00ED               	movwf	PWM1_Duty@duty+1
  1594  0FF0  1683               	bsf	3,5	;RP0=1, select bank1
  1595  0FF1  1303               	bcf	3,6	;RP1=0, select bank1
  1596  0FF2  0822               	movf	_PID^(0+128),w
  1597  0FF3  1283               	bcf	3,5	;RP0=0, select bank0
  1598  0FF4  1303               	bcf	3,6	;RP1=0, select bank0
  1599  0FF5  00EC               	movwf	PWM1_Duty@duty
  1600  0FF6  30A0               	movlw	160
  1601  0FF7  00EE               	movwf	PWM1_Duty@freq
  1602  0FF8  300F               	movlw	15
  1603  0FF9  00EF               	movwf	PWM1_Duty@freq+1
  1604  0FFA  120A  158A  242E  120A  158A  	fcall	_PWM1_Duty
  1605  0FFF                     l137:
  1606  0FFF  0008               	return
  1607  1000                     __end_of_realizarCalculo:
  1608                           
  1609                           	psect	text2
  1610  171B                     __ptext2:	
  1611 ;; *************** function ___wmul *****************
  1612 ;; Defined at:
  1613 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  1614 ;; Parameters:    Size  Location     Type
  1615 ;;  multiplier      2    5[COMMON] unsigned int 
  1616 ;;  multiplicand    2    7[COMMON] unsigned int 
  1617 ;; Auto vars:     Size  Location     Type
  1618 ;;  product         2    9[COMMON] unsigned int 
  1619 ;; Return value:  Size  Location     Type
  1620 ;;                  2    5[COMMON] unsigned int 
  1621 ;; Registers used:
  1622 ;;		wreg, status,2, status,0
  1623 ;; Tracked objects:
  1624 ;;		On entry : 0/0
  1625 ;;		On exit  : 0/0
  1626 ;;		Unchanged: 0/0
  1627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1628 ;;      Params:         4       0       0       0       0
  1629 ;;      Locals:         2       0       0       0       0
  1630 ;;      Temps:          0       0       0       0       0
  1631 ;;      Totals:         6       0       0       0       0
  1632 ;;Total ram usage:        6 bytes
  1633 ;; Hardware stack levels used: 1
  1634 ;; This function calls:
  1635 ;;		Nothing
  1636 ;; This function is called by:
  1637 ;;		_realizarCalculo
  1638 ;; This function uses a non-reentrant model
  1639 ;;
  1640                           
  1641                           
  1642                           ;psect for function ___wmul
  1643  171B                     ___wmul:
  1644  171B                     l2408:	
  1645                           ;incstack = 0
  1646                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1647                           
  1648  171B  01F9               	clrf	___wmul@product
  1649  171C  01FA               	clrf	___wmul@product+1
  1650  171D                     l2410:
  1651  171D  1C75               	btfss	___wmul@multiplier,0
  1652  171E  2F20               	goto	u3281
  1653  171F  2F21               	goto	u3280
  1654  1720                     u3281:
  1655  1720  2F27               	goto	l362
  1656  1721                     u3280:
  1657  1721                     l2412:
  1658  1721  0877               	movf	___wmul@multiplicand,w
  1659  1722  07F9               	addwf	___wmul@product,f
  1660  1723  1803               	skipnc
  1661  1724  0AFA               	incf	___wmul@product+1,f
  1662  1725  0878               	movf	___wmul@multiplicand+1,w
  1663  1726  07FA               	addwf	___wmul@product+1,f
  1664  1727                     l362:
  1665  1727  3001               	movlw	1
  1666  1728                     u3295:
  1667  1728  1003               	clrc
  1668  1729  0DF7               	rlf	___wmul@multiplicand,f
  1669  172A  0DF8               	rlf	___wmul@multiplicand+1,f
  1670  172B  3EFF               	addlw	-1
  1671  172C  1D03               	skipz
  1672  172D  2F28               	goto	u3295
  1673  172E                     l2414:
  1674  172E  3001               	movlw	1
  1675  172F                     u3305:
  1676  172F  1003               	clrc
  1677  1730  0CF6               	rrf	___wmul@multiplier+1,f
  1678  1731  0CF5               	rrf	___wmul@multiplier,f
  1679  1732  3EFF               	addlw	-1
  1680  1733  1D03               	skipz
  1681  1734  2F2F               	goto	u3305
  1682  1735                     l2416:
  1683  1735  0875               	movf	___wmul@multiplier,w
  1684  1736  0476               	iorwf	___wmul@multiplier+1,w
  1685  1737  1D03               	btfss	3,2
  1686  1738  2F3A               	goto	u3311
  1687  1739  2F3B               	goto	u3310
  1688  173A                     u3311:
  1689  173A  2F1D               	goto	l2410
  1690  173B                     u3310:
  1691  173B                     l2418:
  1692  173B  087A               	movf	___wmul@product+1,w
  1693  173C  00F6               	movwf	?___wmul+1
  1694  173D  0879               	movf	___wmul@product,w
  1695  173E  00F5               	movwf	?___wmul
  1696  173F                     l364:
  1697  173F  0008               	return
  1698  1740                     __end_of___wmul:
  1699                           
  1700                           	psect	text3
  1701  0C2E                     __ptext3:	
  1702 ;; *************** function _PWM1_Duty *****************
  1703 ;; Defined at:
  1704 ;;		line 17 in file "PWM.c"
  1705 ;; Parameters:    Size  Location     Type
  1706 ;;  duty            2   76[BANK0 ] unsigned int 
  1707 ;;  freq            2   78[BANK0 ] unsigned int 
  1708 ;; Auto vars:     Size  Location     Type
  1709 ;;		None
  1710 ;; Return value:  Size  Location     Type
  1711 ;;                  1    wreg      void 
  1712 ;; Registers used:
  1713 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1714 ;; Tracked objects:
  1715 ;;		On entry : 0/0
  1716 ;;		On exit  : 0/0
  1717 ;;		Unchanged: 0/0
  1718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1719 ;;      Params:         0       4       0       0       0
  1720 ;;      Locals:         0       0       0       0       0
  1721 ;;      Temps:          0       0       2       0       0
  1722 ;;      Totals:         0       4       2       0       0
  1723 ;;Total ram usage:        6 bytes
  1724 ;; Hardware stack levels used: 1
  1725 ;; Hardware stack levels required when called: 2
  1726 ;; This function calls:
  1727 ;;		_PWM_Init
  1728 ;;		___aldiv
  1729 ;;		___fldiv
  1730 ;;		___flmul
  1731 ;;		___fltol
  1732 ;;		___xxtofl
  1733 ;; This function is called by:
  1734 ;;		_realizarCalculo
  1735 ;; This function uses a non-reentrant model
  1736 ;;
  1737                           
  1738                           
  1739                           ;psect for function _PWM1_Duty
  1740  0C2E                     _PWM1_Duty:
  1741  0C2E                     l2384:	
  1742                           ;incstack = 0
  1743                           ; Regs used in _PWM1_Duty: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1744                           
  1745                           
  1746                           ;PWM.c: 17: void PWM1_Duty(unsigned int duty, unsigned int freq);PWM.c: 18: {;PWM.c: 19:
      +                             PWM_Init(freq);
  1747  0C2E  1283               	bcf	3,5	;RP0=0, select bank0
  1748  0C2F  1303               	bcf	3,6	;RP1=0, select bank0
  1749  0C30  086E               	movf	PWM1_Duty@freq,w
  1750  0C31  00A6               	movwf	PWM_Init@freq
  1751  0C32  086F               	movf	PWM1_Duty@freq+1,w
  1752  0C33  00A7               	movwf	PWM_Init@freq+1
  1753  0C34  01A8               	clrf	PWM_Init@freq+2
  1754  0C35  01A9               	clrf	PWM_Init@freq+3
  1755  0C36  120A  158A  2055  120A  158A  	fcall	_PWM_Init
  1756  0C3B                     l2386:
  1757                           
  1758                           ;PWM.c: 20:   if(duty<1024)
  1759  0C3B  3004               	movlw	4
  1760  0C3C  1283               	bcf	3,5	;RP0=0, select bank0
  1761  0C3D  1303               	bcf	3,6	;RP1=0, select bank0
  1762  0C3E  026D               	subwf	PWM1_Duty@duty+1,w
  1763  0C3F  3000               	movlw	0
  1764  0C40  1903               	skipnz
  1765  0C41  026C               	subwf	PWM1_Duty@duty,w
  1766  0C42  1803               	skipnc
  1767  0C43  2C45               	goto	u3201
  1768  0C44  2C46               	goto	u3200
  1769  0C45                     u3201:
  1770  0C45  2CE3               	goto	l188
  1771  0C46                     u3200:
  1772  0C46                     l2388:
  1773                           
  1774                           ;PWM.c: 21:   {;PWM.c: 22:     duty = ((float)duty/1023.0)*(4000000/(freq*4));
  1775  0C46  086C               	movf	PWM1_Duty@duty,w
  1776  0C47  00A6               	movwf	___xxtofl@val
  1777  0C48  086D               	movf	PWM1_Duty@duty+1,w
  1778  0C49  00A7               	movwf	___xxtofl@val+1
  1779  0C4A  01A8               	clrf	___xxtofl@val+2
  1780  0C4B  01A9               	clrf	___xxtofl@val+3
  1781  0C4C  3000               	movlw	0
  1782  0C4D  120A  118A  202E  120A  158A  	fcall	___xxtofl
  1783  0C52  1283               	bcf	3,5	;RP0=0, select bank0
  1784  0C53  1303               	bcf	3,6	;RP1=0, select bank0
  1785  0C54  0829               	movf	?___xxtofl+3,w
  1786  0C55  00BB               	movwf	___fldiv@b+3
  1787  0C56  0828               	movf	?___xxtofl+2,w
  1788  0C57  00BA               	movwf	___fldiv@b+2
  1789  0C58  0827               	movf	?___xxtofl+1,w
  1790  0C59  00B9               	movwf	___fldiv@b+1
  1791  0C5A  0826               	movf	?___xxtofl,w
  1792  0C5B  00B8               	movwf	___fldiv@b
  1793  0C5C  3044               	movlw	68
  1794  0C5D  00B7               	movwf	___fldiv@a+3
  1795  0C5E  307F               	movlw	127
  1796  0C5F  00B6               	movwf	___fldiv@a+2
  1797  0C60  30C0               	movlw	192
  1798  0C61  00B5               	movwf	___fldiv@a+1
  1799  0C62  3000               	movlw	0
  1800  0C63  00B4               	movwf	___fldiv@a
  1801  0C64  120A  118A  2286  120A  158A  	fcall	___fldiv
  1802  0C69  1283               	bcf	3,5	;RP0=0, select bank0
  1803  0C6A  1303               	bcf	3,6	;RP1=0, select bank0
  1804  0C6B  0837               	movf	?___fldiv+3,w
  1805  0C6C  00D5               	movwf	___flmul@a+3
  1806  0C6D  0836               	movf	?___fldiv+2,w
  1807  0C6E  00D4               	movwf	___flmul@a+2
  1808  0C6F  0835               	movf	?___fldiv+1,w
  1809  0C70  00D3               	movwf	___flmul@a+1
  1810  0C71  0834               	movf	?___fldiv,w
  1811  0C72  00D2               	movwf	___flmul@a
  1812  0C73  3000               	movlw	0
  1813  0C74  00F7               	movwf	___aldiv@dividend+3
  1814  0C75  303D               	movlw	61
  1815  0C76  00F6               	movwf	___aldiv@dividend+2
  1816  0C77  3009               	movlw	9
  1817  0C78  00F5               	movwf	___aldiv@dividend+1
  1818  0C79  3000               	movlw	0
  1819  0C7A  00F4               	movwf	___aldiv@dividend
  1820  0C7B  086F               	movf	PWM1_Duty@freq+1,w
  1821  0C7C  1683               	bsf	3,5	;RP0=1, select bank1
  1822  0C7D  1303               	bcf	3,6	;RP1=0, select bank1
  1823  0C7E  00CC               	movwf	(??_PWM1_Duty^(0+128)+1)
  1824  0C7F  1283               	bcf	3,5	;RP0=0, select bank0
  1825  0C80  1303               	bcf	3,6	;RP1=0, select bank0
  1826  0C81  086E               	movf	PWM1_Duty@freq,w
  1827  0C82  1683               	bsf	3,5	;RP0=1, select bank1
  1828  0C83  1303               	bcf	3,6	;RP1=0, select bank1
  1829  0C84  00CB               	movwf	??_PWM1_Duty^(0+128)
  1830  0C85  1003               	clrc
  1831  0C86  0DCB               	rlf	??_PWM1_Duty^(0+128),f
  1832  0C87  0DCC               	rlf	(??_PWM1_Duty^(0+128)+1),f
  1833  0C88  1003               	clrc
  1834  0C89  0DCB               	rlf	??_PWM1_Duty^(0+128),f
  1835  0C8A  0DCC               	rlf	(??_PWM1_Duty^(0+128)+1),f
  1836  0C8B  084B               	movf	??_PWM1_Duty^(0+128),w
  1837  0C8C  00F0               	movwf	___aldiv@divisor
  1838  0C8D  084C               	movf	(??_PWM1_Duty+1)^(0+128),w
  1839  0C8E  00F1               	movwf	___aldiv@divisor+1
  1840  0C8F  01F2               	clrf	___aldiv@divisor+2
  1841  0C90  01F3               	clrf	___aldiv@divisor+3
  1842  0C91  120A  158A  22DB  120A  158A  	fcall	___aldiv
  1843  0C96  0873               	movf	?___aldiv+3,w
  1844  0C97  1283               	bcf	3,5	;RP0=0, select bank0
  1845  0C98  1303               	bcf	3,6	;RP1=0, select bank0
  1846  0C99  00A9               	movwf	___xxtofl@val+3
  1847  0C9A  0872               	movf	?___aldiv+2,w
  1848  0C9B  00A8               	movwf	___xxtofl@val+2
  1849  0C9C  0871               	movf	?___aldiv+1,w
  1850  0C9D  00A7               	movwf	___xxtofl@val+1
  1851  0C9E  0870               	movf	?___aldiv,w
  1852  0C9F  00A6               	movwf	___xxtofl@val
  1853  0CA0  3001               	movlw	1
  1854  0CA1  120A  118A  202E  120A  158A  	fcall	___xxtofl
  1855  0CA6  1283               	bcf	3,5	;RP0=0, select bank0
  1856  0CA7  1303               	bcf	3,6	;RP1=0, select bank0
  1857  0CA8  0829               	movf	?___xxtofl+3,w
  1858  0CA9  00D1               	movwf	___flmul@b+3
  1859  0CAA  0828               	movf	?___xxtofl+2,w
  1860  0CAB  00D0               	movwf	___flmul@b+2
  1861  0CAC  0827               	movf	?___xxtofl+1,w
  1862  0CAD  00CF               	movwf	___flmul@b+1
  1863  0CAE  0826               	movf	?___xxtofl,w
  1864  0CAF  00CE               	movwf	___flmul@b
  1865  0CB0  120A  118A  2463  120A  158A  	fcall	___flmul
  1866  0CB5  1283               	bcf	3,5	;RP0=0, select bank0
  1867  0CB6  1303               	bcf	3,6	;RP1=0, select bank0
  1868  0CB7  0851               	movf	?___flmul+3,w
  1869  0CB8  00EB               	movwf	___fltol@f1+3
  1870  0CB9  0850               	movf	?___flmul+2,w
  1871  0CBA  00EA               	movwf	___fltol@f1+2
  1872  0CBB  084F               	movf	?___flmul+1,w
  1873  0CBC  00E9               	movwf	___fltol@f1+1
  1874  0CBD  084E               	movf	?___flmul,w
  1875  0CBE  00E8               	movwf	___fltol@f1
  1876  0CBF  120A  158A  2240  120A  158A  	fcall	___fltol
  1877  0CC4  1283               	bcf	3,5	;RP0=0, select bank0
  1878  0CC5  1303               	bcf	3,6	;RP1=0, select bank0
  1879  0CC6  0869               	movf	?___fltol+1,w
  1880  0CC7  00ED               	movwf	PWM1_Duty@duty+1
  1881  0CC8  0868               	movf	?___fltol,w
  1882  0CC9  00EC               	movwf	PWM1_Duty@duty
  1883  0CCA                     l2390:
  1884                           
  1885                           ;PWM.c: 23:     CCP1X = duty & 0b00000010;
  1886  0CCA  1297               	bcf	23,5	;volatile
  1887  0CCB                     l2392:
  1888                           
  1889                           ;PWM.c: 24:     CCP1Y = duty & 0b00000001;
  1890  0CCB  186C               	btfsc	PWM1_Duty@duty,0
  1891  0CCC  2CCE               	goto	u3211
  1892  0CCD  2CD2               	goto	u3210
  1893  0CCE                     u3211:
  1894  0CCE  1283               	bcf	3,5	;RP0=0, select bank0
  1895  0CCF  1303               	bcf	3,6	;RP1=0, select bank0
  1896  0CD0  1617               	bsf	23,4	;volatile
  1897  0CD1  2CD5               	goto	u3224
  1898  0CD2                     u3210:
  1899  0CD2  1283               	bcf	3,5	;RP0=0, select bank0
  1900  0CD3  1303               	bcf	3,6	;RP1=0, select bank0
  1901  0CD4  1217               	bcf	23,4	;volatile
  1902  0CD5                     u3224:
  1903  0CD5                     l2394:
  1904                           
  1905                           ;PWM.c: 25:     CCPR1L = (unsigned char)duty>>2;
  1906  0CD5  086C               	movf	PWM1_Duty@duty,w
  1907  0CD6  1683               	bsf	3,5	;RP0=1, select bank1
  1908  0CD7  1303               	bcf	3,6	;RP1=0, select bank1
  1909  0CD8  00CB               	movwf	??_PWM1_Duty^(0+128)
  1910  0CD9  3002               	movlw	2
  1911  0CDA                     u3235:
  1912  0CDA  1003               	clrc
  1913  0CDB  0CCB               	rrf	??_PWM1_Duty^(0+128),f
  1914  0CDC  3EFF               	addlw	-1
  1915  0CDD  1D03               	skipz
  1916  0CDE  2CDA               	goto	u3235
  1917  0CDF  084B               	movf	??_PWM1_Duty^(0+128),w
  1918  0CE0  1283               	bcf	3,5	;RP0=0, select bank0
  1919  0CE1  1303               	bcf	3,6	;RP1=0, select bank0
  1920  0CE2  0095               	movwf	21	;volatile
  1921  0CE3                     l188:
  1922  0CE3  0008               	return
  1923  0CE4                     __end_of_PWM1_Duty:
  1924                           
  1925                           	psect	text4
  1926  17CA                     __ptext4:	
  1927 ;; *************** function _lcd_init *****************
  1928 ;; Defined at:
  1929 ;;		line 57 in file "lcd.c"
  1930 ;; Parameters:    Size  Location     Type
  1931 ;;		None
  1932 ;; Auto vars:     Size  Location     Type
  1933 ;;		None
  1934 ;; Return value:  Size  Location     Type
  1935 ;;                  1    wreg      void 
  1936 ;; Registers used:
  1937 ;;		wreg, status,2, status,0, pclath, cstack
  1938 ;; Tracked objects:
  1939 ;;		On entry : 0/0
  1940 ;;		On exit  : 0/0
  1941 ;;		Unchanged: 0/0
  1942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1943 ;;      Params:         0       0       0       0       0
  1944 ;;      Locals:         0       0       0       0       0
  1945 ;;      Temps:          0       0       0       0       0
  1946 ;;      Totals:         0       0       0       0       0
  1947 ;;Total ram usage:        0 bytes
  1948 ;; Hardware stack levels used: 1
  1949 ;; Hardware stack levels required when called: 2
  1950 ;; This function calls:
  1951 ;;		_lcd_cmd
  1952 ;; This function is called by:
  1953 ;;		_main
  1954 ;; This function uses a non-reentrant model
  1955 ;;
  1956                           
  1957                           
  1958                           ;psect for function _lcd_init
  1959  17CA                     _lcd_init:
  1960  17CA                     l2656:	
  1961                           ;incstack = 0
  1962                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1963                           
  1964                           
  1965                           ;lcd.c: 59:  PORTEbits.RE1=0;
  1966  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  1967  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  1968  17CC  1089               	bcf	9,1	;volatile
  1969                           
  1970                           ;lcd.c: 60:  PORTEbits.RE0=0;
  1971  17CD  1009               	bcf	9,0	;volatile
  1972                           
  1973                           ;lcd.c: 62:  PORTEbits.RE1=1;
  1974  17CE  1489               	bsf	9,1	;volatile
  1975  17CF                     l2658:
  1976                           
  1977                           ;lcd.c: 64:  lcd_cmd(0x38);
  1978  17CF  3038               	movlw	56
  1979  17D0  160A  118A  26F3  160A  118A  	fcall	_lcd_cmd
  1980                           
  1981                           ;lcd.c: 66:  lcd_cmd(0x38);
  1982  17D5  3038               	movlw	56
  1983  17D6  160A  118A  26F3  160A  118A  	fcall	_lcd_cmd
  1984                           
  1985                           ;lcd.c: 68:  lcd_cmd(0x38);
  1986  17DB  3038               	movlw	56
  1987  17DC  160A  118A  26F3  160A  118A  	fcall	_lcd_cmd
  1988                           
  1989                           ;lcd.c: 69:  lcd_cmd(0x08);
  1990  17E1  3008               	movlw	8
  1991  17E2  160A  118A  26F3  160A  118A  	fcall	_lcd_cmd
  1992                           
  1993                           ;lcd.c: 70:  lcd_cmd(0x0F);
  1994  17E7  300F               	movlw	15
  1995  17E8  160A  118A  26F3  160A  118A  	fcall	_lcd_cmd
  1996                           
  1997                           ;lcd.c: 71:  lcd_cmd(0x01);
  1998  17ED  3001               	movlw	1
  1999  17EE  160A  118A  26F3  160A  118A  	fcall	_lcd_cmd
  2000                           
  2001                           ;lcd.c: 72:  lcd_cmd(0x38);
  2002  17F3  3038               	movlw	56
  2003  17F4  160A  118A  26F3  160A  118A  	fcall	_lcd_cmd
  2004                           
  2005                           ;lcd.c: 73:     lcd_cmd(0x80);
  2006  17F9  3080               	movlw	128
  2007  17FA  160A  118A  26F3  160A  118A  	fcall	_lcd_cmd
  2008  17FF                     l242:
  2009  17FF  0008               	return
  2010  1800                     __end_of_lcd_init:
  2011                           
  2012                           	psect	text5
  2013  00EA                     __ptext5:	
  2014 ;; *************** function _imprimirValoresLcd *****************
  2015 ;; Defined at:
  2016 ;;		line 129 in file "main.c"
  2017 ;; Parameters:    Size  Location     Type
  2018 ;;		None
  2019 ;; Auto vars:     Size  Location     Type
  2020 ;;  centena         2   16[BANK0 ] int 
  2021 ;;  milhar          2   14[BANK0 ] int 
  2022 ;; Return value:  Size  Location     Type
  2023 ;;                  1    wreg      void 
  2024 ;; Registers used:
  2025 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2026 ;; Tracked objects:
  2027 ;;		On entry : 0/0
  2028 ;;		On exit  : 0/0
  2029 ;;		Unchanged: 0/0
  2030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2031 ;;      Params:         0       0       0       0       0
  2032 ;;      Locals:         0       4       0       0       0
  2033 ;;      Temps:          0       1       0       0       0
  2034 ;;      Totals:         0       5       0       0       0
  2035 ;;Total ram usage:        5 bytes
  2036 ;; Hardware stack levels used: 1
  2037 ;; Hardware stack levels required when called: 3
  2038 ;; This function calls:
  2039 ;;		___awdiv
  2040 ;;		___awmod
  2041 ;;		_lcd_cmd
  2042 ;;		_lcd_str
  2043 ;;		_sprintf
  2044 ;; This function is called by:
  2045 ;;		_main
  2046 ;; This function uses a non-reentrant model
  2047 ;;
  2048                           
  2049                           
  2050                           ;psect for function _imprimirValoresLcd
  2051  00EA                     _imprimirValoresLcd:
  2052  00EA                     l2574:	
  2053                           ;incstack = 0
  2054                           ; Regs used in _imprimirValoresLcd: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2055                           
  2056                           
  2057                           ;main.c: 130:     if (menu == 1){
  2058  00EA  1683               	bsf	3,5	;RP0=1, select bank1
  2059  00EB  1303               	bcf	3,6	;RP1=0, select bank1
  2060  00EC  0338               	decf	_menu^(0+128),w
  2061  00ED  0439               	iorwf	(_menu+1)^(0+128),w
  2062  00EE  1D03               	btfss	3,2
  2063  00EF  28F1               	goto	u3681
  2064  00F0  28F2               	goto	u3680
  2065  00F1                     u3681:
  2066  00F1  28F8               	goto	l2578
  2067  00F2                     u3680:
  2068  00F2                     l2576:
  2069                           
  2070                           ;main.c: 131:         lcd_cmd(0x87);
  2071  00F2  3087               	movlw	135
  2072  00F3  160A  118A  26F3  120A  118A  	fcall	_lcd_cmd
  2073  00F8                     l2578:
  2074                           
  2075                           ;main.c: 134:     if (menu == 2){
  2076  00F8  3002               	movlw	2
  2077  00F9  1683               	bsf	3,5	;RP0=1, select bank1
  2078  00FA  1303               	bcf	3,6	;RP1=0, select bank1
  2079  00FB  0638               	xorwf	_menu^(0+128),w
  2080  00FC  0439               	iorwf	(_menu+1)^(0+128),w
  2081  00FD  1D03               	btfss	3,2
  2082  00FE  2900               	goto	u3691
  2083  00FF  2901               	goto	u3690
  2084  0100                     u3691:
  2085  0100  2907               	goto	l2582
  2086  0101                     u3690:
  2087  0101                     l2580:
  2088                           
  2089                           ;main.c: 135:         lcd_cmd(0xC7);
  2090  0101  30C7               	movlw	199
  2091  0102  160A  118A  26F3  120A  118A  	fcall	_lcd_cmd
  2092  0107                     l2582:
  2093                           
  2094                           ;main.c: 138:     if (menu == 3){
  2095  0107  3003               	movlw	3
  2096  0108  1683               	bsf	3,5	;RP0=1, select bank1
  2097  0109  1303               	bcf	3,6	;RP1=0, select bank1
  2098  010A  0638               	xorwf	_menu^(0+128),w
  2099  010B  0439               	iorwf	(_menu+1)^(0+128),w
  2100  010C  1D03               	btfss	3,2
  2101  010D  290F               	goto	u3701
  2102  010E  2910               	goto	u3700
  2103  010F                     u3701:
  2104  010F  2916               	goto	l2586
  2105  0110                     u3700:
  2106  0110                     l2584:
  2107                           
  2108                           ;main.c: 139:         lcd_cmd(0x89 +6);
  2109  0110  308F               	movlw	143
  2110  0111  160A  118A  26F3  120A  118A  	fcall	_lcd_cmd
  2111  0116                     l2586:
  2112                           
  2113                           ;main.c: 142:     if (menu == 4){
  2114  0116  3004               	movlw	4
  2115  0117  1683               	bsf	3,5	;RP0=1, select bank1
  2116  0118  1303               	bcf	3,6	;RP1=0, select bank1
  2117  0119  0638               	xorwf	_menu^(0+128),w
  2118  011A  0439               	iorwf	(_menu+1)^(0+128),w
  2119  011B  1D03               	btfss	3,2
  2120  011C  291E               	goto	u3711
  2121  011D  291F               	goto	u3710
  2122  011E                     u3711:
  2123  011E  2925               	goto	l2590
  2124  011F                     u3710:
  2125  011F                     l2588:
  2126                           
  2127                           ;main.c: 143:         lcd_cmd(0xC9 +6);
  2128  011F  30CF               	movlw	207
  2129  0120  160A  118A  26F3  120A  118A  	fcall	_lcd_cmd
  2130  0125                     l2590:
  2131                           
  2132                           ;main.c: 146:     if (setPoint != setPointReferencia){
  2133  0125  1683               	bsf	3,5	;RP0=1, select bank1
  2134  0126  1303               	bcf	3,6	;RP1=0, select bank1
  2135  0127  0835               	movf	(_setPointReferencia+1)^(0+128),w
  2136  0128  0657               	xorwf	(_setPoint+1)^(0+128),w
  2137  0129  1D03               	skipz
  2138  012A  292D               	goto	u3725
  2139  012B  0834               	movf	_setPointReferencia^(0+128),w
  2140  012C  0656               	xorwf	_setPoint^(0+128),w
  2141  012D                     u3725:
  2142  012D  1903               	skipnz
  2143  012E  2930               	goto	u3721
  2144  012F  2931               	goto	u3720
  2145  0130                     u3721:
  2146  0130  29B3               	goto	l2600
  2147  0131                     u3720:
  2148  0131                     l2592:
  2149                           
  2150                           ;main.c: 147:          int milhar = setPoint/1000;
  2151  0131  30E8               	movlw	232
  2152  0132  00F7               	movwf	___awdiv@divisor
  2153  0133  3003               	movlw	3
  2154  0134  00F8               	movwf	___awdiv@divisor+1
  2155  0135  0857               	movf	(_setPoint+1)^(0+128),w
  2156  0136  00FA               	movwf	___awdiv@dividend+1
  2157  0137  0856               	movf	_setPoint^(0+128),w
  2158  0138  00F9               	movwf	___awdiv@dividend
  2159  0139  120A  158A  2163  120A  118A  	fcall	___awdiv
  2160  013E  0878               	movf	?___awdiv+1,w
  2161  013F  1283               	bcf	3,5	;RP0=0, select bank0
  2162  0140  1303               	bcf	3,6	;RP1=0, select bank0
  2163  0141  00AF               	movwf	imprimirValoresLcd@milhar+1
  2164  0142  0877               	movf	?___awdiv,w
  2165  0143  00AE               	movwf	imprimirValoresLcd@milhar
  2166                           
  2167                           ;main.c: 148:          int centena = (setPoint%1000)/100;
  2168  0144  3064               	movlw	100
  2169  0145  00F7               	movwf	___awdiv@divisor
  2170  0146  3000               	movlw	0
  2171  0147  00F8               	movwf	___awdiv@divisor+1
  2172  0148  1683               	bsf	3,5	;RP0=1, select bank1
  2173  0149  1303               	bcf	3,6	;RP1=0, select bank1
  2174  014A  0857               	movf	(_setPoint+1)^(0+128),w
  2175  014B  00F3               	movwf	___awmod@dividend+1
  2176  014C  0856               	movf	_setPoint^(0+128),w
  2177  014D  00F2               	movwf	___awmod@dividend
  2178  014E  30E8               	movlw	232
  2179  014F  00F0               	movwf	___awmod@divisor
  2180  0150  3003               	movlw	3
  2181  0151  00F1               	movwf	___awmod@divisor+1
  2182  0152  120A  158A  210A  120A  118A  	fcall	___awmod
  2183  0157  0871               	movf	?___awmod+1,w
  2184  0158  00FA               	movwf	___awdiv@dividend+1
  2185  0159  0870               	movf	?___awmod,w
  2186  015A  00F9               	movwf	___awdiv@dividend
  2187  015B  120A  158A  2163  120A  118A  	fcall	___awdiv
  2188  0160  0878               	movf	?___awdiv+1,w
  2189  0161  1283               	bcf	3,5	;RP0=0, select bank0
  2190  0162  1303               	bcf	3,6	;RP1=0, select bank0
  2191  0163  00B1               	movwf	imprimirValoresLcd@centena+1
  2192  0164  0877               	movf	?___awdiv,w
  2193  0165  00B0               	movwf	imprimirValoresLcd@centena
  2194                           
  2195                           ;main.c: 150:          lcd_cmd(0x83);
  2196  0166  3083               	movlw	131
  2197  0167  160A  118A  26F3  120A  118A  	fcall	_lcd_cmd
  2198  016C                     l2594:
  2199                           
  2200                           ;main.c: 151:          lcd_str("  C  ");
  2201  016C  3029               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2202  016D  00F2               	movwf	lcd_str@str
  2203  016E  3080               	movlw	128
  2204  016F  00F3               	movwf	lcd_str@str+1
  2205  0170  120A  118A  2003  120A  118A  	fcall	_lcd_str
  2206  0175                     l2596:
  2207                           
  2208                           ;main.c: 152:          lcd_cmd(0x83);
  2209  0175  3083               	movlw	131
  2210  0176  160A  118A  26F3  120A  118A  	fcall	_lcd_cmd
  2211                           
  2212                           ;main.c: 153:          sprintf(string, "%d", milhar);
  2213  017B  302F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2214  017C  1283               	bcf	3,5	;RP0=0, select bank0
  2215  017D  1303               	bcf	3,6	;RP1=0, select bank0
  2216  017E  00AD               	movwf	??_imprimirValoresLcd
  2217  017F  082D               	movf	??_imprimirValoresLcd,w
  2218  0180  00A0               	movwf	sprintf@f
  2219  0181  082F               	movf	imprimirValoresLcd@milhar+1,w
  2220  0182  00A2               	movwf	?_sprintf+2
  2221  0183  082E               	movf	imprimirValoresLcd@milhar,w
  2222  0184  00A1               	movwf	?_sprintf+1
  2223  0185  3090               	movlw	(low (_string| (0+256)))& (0+255)
  2224  0186  120A  158A  24E4  120A  118A  	fcall	_sprintf
  2225                           
  2226                           ;main.c: 154:          lcd_str(string);
  2227  018B  3090               	movlw	(low (_string| (0+256)))& (0+255)
  2228  018C  00F2               	movwf	lcd_str@str
  2229  018D  3001               	movlw	1
  2230  018E  00F3               	movwf	lcd_str@str+1
  2231  018F  120A  118A  2003  120A  118A  	fcall	_lcd_str
  2232                           
  2233                           ;main.c: 155:          sprintf(string, "%d", centena);
  2234  0194  302F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2235  0195  1283               	bcf	3,5	;RP0=0, select bank0
  2236  0196  1303               	bcf	3,6	;RP1=0, select bank0
  2237  0197  00AD               	movwf	??_imprimirValoresLcd
  2238  0198  082D               	movf	??_imprimirValoresLcd,w
  2239  0199  00A0               	movwf	sprintf@f
  2240  019A  0831               	movf	imprimirValoresLcd@centena+1,w
  2241  019B  00A2               	movwf	?_sprintf+2
  2242  019C  0830               	movf	imprimirValoresLcd@centena,w
  2243  019D  00A1               	movwf	?_sprintf+1
  2244  019E  3090               	movlw	(low (_string| (0+256)))& (0+255)
  2245  019F  120A  158A  24E4  120A  118A  	fcall	_sprintf
  2246                           
  2247                           ;main.c: 156:          lcd_str(string);
  2248  01A4  3090               	movlw	(low (_string| (0+256)))& (0+255)
  2249  01A5  00F2               	movwf	lcd_str@str
  2250  01A6  3001               	movlw	1
  2251  01A7  00F3               	movwf	lcd_str@str+1
  2252  01A8  120A  118A  2003  120A  118A  	fcall	_lcd_str
  2253  01AD                     l2598:
  2254                           
  2255                           ;main.c: 158:          setPointReferencia = setPoint;
  2256  01AD  1683               	bsf	3,5	;RP0=1, select bank1
  2257  01AE  1303               	bcf	3,6	;RP1=0, select bank1
  2258  01AF  0857               	movf	(_setPoint+1)^(0+128),w
  2259  01B0  00B5               	movwf	(_setPointReferencia+1)^(0+128)
  2260  01B1  0856               	movf	_setPoint^(0+128),w
  2261  01B2  00B4               	movwf	_setPointReferencia^(0+128)
  2262  01B3                     l2600:
  2263                           
  2264                           ;main.c: 161:     if (kp != kpReferencia){
  2265  01B3  082F               	movf	(_kpReferencia+1)^(0+128),w
  2266  01B4  0655               	xorwf	(_kp+1)^(0+128),w
  2267  01B5  1D03               	skipz
  2268  01B6  29B9               	goto	u3735
  2269  01B7  082E               	movf	_kpReferencia^(0+128),w
  2270  01B8  0654               	xorwf	_kp^(0+128),w
  2271  01B9                     u3735:
  2272  01B9  1903               	skipnz
  2273  01BA  29BC               	goto	u3731
  2274  01BB  29BD               	goto	u3730
  2275  01BC                     u3731:
  2276  01BC  29F9               	goto	l2610
  2277  01BD                     u3730:
  2278  01BD                     l2602:
  2279                           
  2280                           ;main.c: 162:         lcd_cmd(0xC3);
  2281  01BD  30C3               	movlw	195
  2282  01BE  160A  118A  26F3  120A  118A  	fcall	_lcd_cmd
  2283  01C3                     l2604:
  2284                           
  2285                           ;main.c: 163:         lcd_str("     ");
  2286  01C3  3023               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2287  01C4  00F2               	movwf	lcd_str@str
  2288  01C5  3080               	movlw	128
  2289  01C6  00F3               	movwf	lcd_str@str+1
  2290  01C7  120A  118A  2003  120A  118A  	fcall	_lcd_str
  2291  01CC                     l2606:
  2292                           
  2293                           ;main.c: 164:         lcd_cmd(0xC3);
  2294  01CC  30C3               	movlw	195
  2295  01CD  160A  118A  26F3  120A  118A  	fcall	_lcd_cmd
  2296                           
  2297                           ;main.c: 165:         sprintf(string, "%d", kp);
  2298  01D2  302F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2299  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  2300  01D4  1303               	bcf	3,6	;RP1=0, select bank0
  2301  01D5  00AD               	movwf	??_imprimirValoresLcd
  2302  01D6  082D               	movf	??_imprimirValoresLcd,w
  2303  01D7  00A0               	movwf	sprintf@f
  2304  01D8  1683               	bsf	3,5	;RP0=1, select bank1
  2305  01D9  1303               	bcf	3,6	;RP1=0, select bank1
  2306  01DA  0855               	movf	(_kp+1)^(0+128),w
  2307  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  2308  01DC  1303               	bcf	3,6	;RP1=0, select bank0
  2309  01DD  00A2               	movwf	?_sprintf+2
  2310  01DE  1683               	bsf	3,5	;RP0=1, select bank1
  2311  01DF  1303               	bcf	3,6	;RP1=0, select bank1
  2312  01E0  0854               	movf	_kp^(0+128),w
  2313  01E1  1283               	bcf	3,5	;RP0=0, select bank0
  2314  01E2  1303               	bcf	3,6	;RP1=0, select bank0
  2315  01E3  00A1               	movwf	?_sprintf+1
  2316  01E4  3090               	movlw	(low (_string| (0+256)))& (0+255)
  2317  01E5  120A  158A  24E4  120A  118A  	fcall	_sprintf
  2318                           
  2319                           ;main.c: 166:         lcd_str(string);
  2320  01EA  3090               	movlw	(low (_string| (0+256)))& (0+255)
  2321  01EB  00F2               	movwf	lcd_str@str
  2322  01EC  3001               	movlw	1
  2323  01ED  00F3               	movwf	lcd_str@str+1
  2324  01EE  120A  118A  2003  120A  118A  	fcall	_lcd_str
  2325  01F3                     l2608:
  2326                           
  2327                           ;main.c: 167:         kpReferencia = kp;
  2328  01F3  1683               	bsf	3,5	;RP0=1, select bank1
  2329  01F4  1303               	bcf	3,6	;RP1=0, select bank1
  2330  01F5  0855               	movf	(_kp+1)^(0+128),w
  2331  01F6  00AF               	movwf	(_kpReferencia+1)^(0+128)
  2332  01F7  0854               	movf	_kp^(0+128),w
  2333  01F8  00AE               	movwf	_kpReferencia^(0+128)
  2334  01F9                     l2610:
  2335                           
  2336                           ;main.c: 170:     if (ki != kiReferencia){
  2337  01F9  082D               	movf	(_kiReferencia+1)^(0+128),w
  2338  01FA  0653               	xorwf	(_ki+1)^(0+128),w
  2339  01FB  1D03               	skipz
  2340  01FC  29FF               	goto	u3745
  2341  01FD  082C               	movf	_kiReferencia^(0+128),w
  2342  01FE  0652               	xorwf	_ki^(0+128),w
  2343  01FF                     u3745:
  2344  01FF  1903               	skipnz
  2345  0200  2A02               	goto	u3741
  2346  0201  2A03               	goto	u3740
  2347  0202                     u3741:
  2348  0202  2A3F               	goto	l2620
  2349  0203                     u3740:
  2350  0203                     l2612:
  2351                           
  2352                           ;main.c: 171:         lcd_cmd(0x89 +2);
  2353  0203  308B               	movlw	139
  2354  0204  160A  118A  26F3  120A  118A  	fcall	_lcd_cmd
  2355  0209                     l2614:
  2356                           
  2357                           ;main.c: 172:         lcd_str("     ");
  2358  0209  3023               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2359  020A  00F2               	movwf	lcd_str@str
  2360  020B  3080               	movlw	128
  2361  020C  00F3               	movwf	lcd_str@str+1
  2362  020D  120A  118A  2003  120A  118A  	fcall	_lcd_str
  2363  0212                     l2616:
  2364                           
  2365                           ;main.c: 173:         lcd_cmd(0x89 +2);
  2366  0212  308B               	movlw	139
  2367  0213  160A  118A  26F3  120A  118A  	fcall	_lcd_cmd
  2368                           
  2369                           ;main.c: 174:         sprintf(string, "%d", ki);
  2370  0218  302F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2371  0219  1283               	bcf	3,5	;RP0=0, select bank0
  2372  021A  1303               	bcf	3,6	;RP1=0, select bank0
  2373  021B  00AD               	movwf	??_imprimirValoresLcd
  2374  021C  082D               	movf	??_imprimirValoresLcd,w
  2375  021D  00A0               	movwf	sprintf@f
  2376  021E  1683               	bsf	3,5	;RP0=1, select bank1
  2377  021F  1303               	bcf	3,6	;RP1=0, select bank1
  2378  0220  0853               	movf	(_ki+1)^(0+128),w
  2379  0221  1283               	bcf	3,5	;RP0=0, select bank0
  2380  0222  1303               	bcf	3,6	;RP1=0, select bank0
  2381  0223  00A2               	movwf	?_sprintf+2
  2382  0224  1683               	bsf	3,5	;RP0=1, select bank1
  2383  0225  1303               	bcf	3,6	;RP1=0, select bank1
  2384  0226  0852               	movf	_ki^(0+128),w
  2385  0227  1283               	bcf	3,5	;RP0=0, select bank0
  2386  0228  1303               	bcf	3,6	;RP1=0, select bank0
  2387  0229  00A1               	movwf	?_sprintf+1
  2388  022A  3090               	movlw	(low (_string| (0+256)))& (0+255)
  2389  022B  120A  158A  24E4  120A  118A  	fcall	_sprintf
  2390                           
  2391                           ;main.c: 175:         lcd_str(string);
  2392  0230  3090               	movlw	(low (_string| (0+256)))& (0+255)
  2393  0231  00F2               	movwf	lcd_str@str
  2394  0232  3001               	movlw	1
  2395  0233  00F3               	movwf	lcd_str@str+1
  2396  0234  120A  118A  2003  120A  118A  	fcall	_lcd_str
  2397  0239                     l2618:
  2398                           
  2399                           ;main.c: 176:         kiReferencia = ki;
  2400  0239  1683               	bsf	3,5	;RP0=1, select bank1
  2401  023A  1303               	bcf	3,6	;RP1=0, select bank1
  2402  023B  0853               	movf	(_ki+1)^(0+128),w
  2403  023C  00AD               	movwf	(_kiReferencia+1)^(0+128)
  2404  023D  0852               	movf	_ki^(0+128),w
  2405  023E  00AC               	movwf	_kiReferencia^(0+128)
  2406  023F                     l2620:
  2407                           
  2408                           ;main.c: 179:     if (kd != kdReferencia){
  2409  023F  082B               	movf	(_kdReferencia+1)^(0+128),w
  2410  0240  0631               	xorwf	(_kd+1)^(0+128),w
  2411  0241  1D03               	skipz
  2412  0242  2A45               	goto	u3755
  2413  0243  082A               	movf	_kdReferencia^(0+128),w
  2414  0244  0630               	xorwf	_kd^(0+128),w
  2415  0245                     u3755:
  2416  0245  1903               	skipnz
  2417  0246  2A48               	goto	u3751
  2418  0247  2A49               	goto	u3750
  2419  0248                     u3751:
  2420  0248  2A85               	goto	l134
  2421  0249                     u3750:
  2422  0249                     l2622:
  2423                           
  2424                           ;main.c: 180:         lcd_cmd(0xC9 +2);
  2425  0249  30CB               	movlw	203
  2426  024A  160A  118A  26F3  120A  118A  	fcall	_lcd_cmd
  2427  024F                     l2624:
  2428                           
  2429                           ;main.c: 181:         lcd_str("     ");
  2430  024F  3023               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2431  0250  00F2               	movwf	lcd_str@str
  2432  0251  3080               	movlw	128
  2433  0252  00F3               	movwf	lcd_str@str+1
  2434  0253  120A  118A  2003  120A  118A  	fcall	_lcd_str
  2435  0258                     l2626:
  2436                           
  2437                           ;main.c: 182:         lcd_cmd(0xC9 +2);
  2438  0258  30CB               	movlw	203
  2439  0259  160A  118A  26F3  120A  118A  	fcall	_lcd_cmd
  2440                           
  2441                           ;main.c: 183:         sprintf(string, "%d", kd);
  2442  025E  302F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2443  025F  1283               	bcf	3,5	;RP0=0, select bank0
  2444  0260  1303               	bcf	3,6	;RP1=0, select bank0
  2445  0261  00AD               	movwf	??_imprimirValoresLcd
  2446  0262  082D               	movf	??_imprimirValoresLcd,w
  2447  0263  00A0               	movwf	sprintf@f
  2448  0264  1683               	bsf	3,5	;RP0=1, select bank1
  2449  0265  1303               	bcf	3,6	;RP1=0, select bank1
  2450  0266  0831               	movf	(_kd+1)^(0+128),w
  2451  0267  1283               	bcf	3,5	;RP0=0, select bank0
  2452  0268  1303               	bcf	3,6	;RP1=0, select bank0
  2453  0269  00A2               	movwf	?_sprintf+2
  2454  026A  1683               	bsf	3,5	;RP0=1, select bank1
  2455  026B  1303               	bcf	3,6	;RP1=0, select bank1
  2456  026C  0830               	movf	_kd^(0+128),w
  2457  026D  1283               	bcf	3,5	;RP0=0, select bank0
  2458  026E  1303               	bcf	3,6	;RP1=0, select bank0
  2459  026F  00A1               	movwf	?_sprintf+1
  2460  0270  3090               	movlw	(low (_string| (0+256)))& (0+255)
  2461  0271  120A  158A  24E4  120A  118A  	fcall	_sprintf
  2462                           
  2463                           ;main.c: 184:         lcd_str(string);
  2464  0276  3090               	movlw	(low (_string| (0+256)))& (0+255)
  2465  0277  00F2               	movwf	lcd_str@str
  2466  0278  3001               	movlw	1
  2467  0279  00F3               	movwf	lcd_str@str+1
  2468  027A  120A  118A  2003  120A  118A  	fcall	_lcd_str
  2469  027F                     l2628:
  2470                           
  2471                           ;main.c: 185:         kdReferencia = kd;
  2472  027F  1683               	bsf	3,5	;RP0=1, select bank1
  2473  0280  1303               	bcf	3,6	;RP1=0, select bank1
  2474  0281  0831               	movf	(_kd+1)^(0+128),w
  2475  0282  00AB               	movwf	(_kdReferencia+1)^(0+128)
  2476  0283  0830               	movf	_kd^(0+128),w
  2477  0284  00AA               	movwf	_kdReferencia^(0+128)
  2478  0285                     l134:
  2479  0285  0008               	return
  2480  0286                     __end_of_imprimirValoresLcd:
  2481                           
  2482                           	psect	text6
  2483  0CE4                     __ptext6:	
  2484 ;; *************** function _sprintf *****************
  2485 ;; Defined at:
  2486 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  2487 ;; Parameters:    Size  Location     Type
  2488 ;;  sp              1    wreg     PTR unsigned char 
  2489 ;;		 -> string(32), 
  2490 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  2491 ;;		 -> STR_9(3), STR_7(3), STR_5(3), STR_3(3), 
  2492 ;;		 -> STR_2(3), 
  2493 ;; Auto vars:     Size  Location     Type
  2494 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  2495 ;;		 -> string(32), 
  2496 ;;  tmpval          4    0        struct .
  2497 ;;  val             2    9[BANK0 ] unsigned int 
  2498 ;;  cp              2    0        PTR const unsigned char 
  2499 ;;  len             2    0        unsigned int 
  2500 ;;  c               1   12[BANK0 ] unsigned char 
  2501 ;;  prec            1    8[BANK0 ] char 
  2502 ;;  flag            1    7[BANK0 ] unsigned char 
  2503 ;;  ap              1    6[BANK0 ] PTR void [1]
  2504 ;;		 -> ?_sprintf(2), 
  2505 ;; Return value:  Size  Location     Type
  2506 ;;                  2    0[BANK0 ] int 
  2507 ;; Registers used:
  2508 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2509 ;; Tracked objects:
  2510 ;;		On entry : 0/0
  2511 ;;		On exit  : 0/0
  2512 ;;		Unchanged: 0/0
  2513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2514 ;;      Params:         0       3       0       0       0
  2515 ;;      Locals:         0       7       0       0       0
  2516 ;;      Temps:          0       3       0       0       0
  2517 ;;      Totals:         0      13       0       0       0
  2518 ;;Total ram usage:       13 bytes
  2519 ;; Hardware stack levels used: 1
  2520 ;; Hardware stack levels required when called: 1
  2521 ;; This function calls:
  2522 ;;		___lwdiv
  2523 ;;		___lwmod
  2524 ;; This function is called by:
  2525 ;;		_imprimirValoresLcd
  2526 ;; This function uses a non-reentrant model
  2527 ;;
  2528                           
  2529                           
  2530                           ;psect for function _sprintf
  2531  0CE4                     _sprintf:
  2532                           
  2533                           ;incstack = 0
  2534                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2535                           ;sprintf@sp stored from wreg
  2536  0CE4  1283               	bcf	3,5	;RP0=0, select bank0
  2537  0CE5  1303               	bcf	3,6	;RP1=0, select bank0
  2538  0CE6  00AB               	movwf	sprintf@sp
  2539  0CE7                     l2306:
  2540                           
  2541                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  2542  0CE7  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2543  0CE8  00A3               	movwf	??_sprintf
  2544  0CE9  0823               	movf	??_sprintf,w
  2545  0CEA  00A6               	movwf	sprintf@ap
  2546                           
  2547                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2548  0CEB  2DB5               	goto	l2358
  2549  0CEC                     l2308:
  2550                           
  2551                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2552  0CEC  3025               	movlw	37
  2553  0CED  062C               	xorwf	sprintf@c,w
  2554  0CEE  1903               	btfsc	3,2
  2555  0CEF  2CF1               	goto	u3101
  2556  0CF0  2CF2               	goto	u3100
  2557  0CF1                     u3101:
  2558  0CF1  2CFE               	goto	l2314
  2559  0CF2                     u3100:
  2560  0CF2                     l2310:
  2561                           
  2562                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2563  0CF2  082C               	movf	sprintf@c,w
  2564  0CF3  00A3               	movwf	??_sprintf
  2565  0CF4  082B               	movf	sprintf@sp,w
  2566  0CF5  0084               	movwf	4
  2567  0CF6  0823               	movf	??_sprintf,w
  2568  0CF7  1783               	bsf	3,7	;select IRP bank2
  2569  0CF8  0080               	movwf	0
  2570  0CF9                     l2312:
  2571  0CF9  3001               	movlw	1
  2572  0CFA  00A3               	movwf	??_sprintf
  2573  0CFB  0823               	movf	??_sprintf,w
  2574  0CFC  07AB               	addwf	sprintf@sp,f
  2575                           
  2576                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 559:    continue;
  2577  0CFD  2DB5               	goto	l2358
  2578  0CFE                     l2314:
  2579                           
  2580                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2581  0CFE  01A7               	clrf	sprintf@flag
  2582  0CFF                     l2318:	
  2583                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  2584                           
  2585  0CFF  3001               	movlw	1
  2586  0D00  07A0               	addwf	sprintf@f,f
  2587  0D01  30FF               	movlw	-1
  2588  0D02  0720               	addwf	sprintf@f,w
  2589  0D03  0084               	movwf	4
  2590  0D04  120A  158A  200A  120A  158A  	fcall	stringdir
  2591  0D09  00AC               	movwf	sprintf@c
  2592  0D0A  00A3               	movwf	??_sprintf
  2593  0D0B  01A4               	clrf	??_sprintf+1
  2594                           
  2595                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2596                           ; Switch size 1, requested type "simple"
  2597                           ; Number of cases is 1, Range of values is 0 to 0
  2598                           ; switch strategies available:
  2599                           ; Name         Instructions Cycles
  2600                           ; simple_byte            4     3 (average)
  2601                           ; direct_byte           11     8 (fixed)
  2602                           ; jumptable            260     6 (fixed)
  2603                           ;	Chosen strategy is simple_byte
  2604  0D0C  0824               	movf	??_sprintf+1,w
  2605  0D0D  3A00               	xorlw	0	; case 0
  2606  0D0E  1903               	skipnz
  2607  0D0F  2D11               	goto	l2724
  2608  0D10  2DB5               	goto	l2358
  2609  0D11                     l2724:
  2610                           
  2611                           ; Switch size 1, requested type "simple"
  2612                           ; Number of cases is 3, Range of values is 0 to 105
  2613                           ; switch strategies available:
  2614                           ; Name         Instructions Cycles
  2615                           ; simple_byte           10     6 (average)
  2616                           ; jumptable            260     6 (fixed)
  2617                           ;	Chosen strategy is simple_byte
  2618  0D11  0823               	movf	??_sprintf,w
  2619  0D12  3A00               	xorlw	0	; case 0
  2620  0D13  1903               	skipnz
  2621  0D14  2DC7               	goto	l2360
  2622  0D15  3A64               	xorlw	100	; case 100
  2623  0D16  1903               	skipnz
  2624  0D17  2D1C               	goto	l2320
  2625  0D18  3A0D               	xorlw	13	; case 105
  2626  0D19  1903               	skipnz
  2627  0D1A  2D1C               	goto	l2320
  2628  0D1B  2DB5               	goto	l2358
  2629  0D1C                     l2320:
  2630                           
  2631                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2632  0D1C  0826               	movf	sprintf@ap,w
  2633  0D1D  0084               	movwf	4
  2634  0D1E  1383               	bcf	3,7	;select IRP bank0
  2635  0D1F  0800               	movf	0,w
  2636  0D20  00A9               	movwf	sprintf@val
  2637  0D21  0A84               	incf	4,f
  2638  0D22  0800               	movf	0,w
  2639  0D23  00AA               	movwf	sprintf@val+1
  2640  0D24                     l2322:
  2641  0D24  3002               	movlw	2
  2642  0D25  00A3               	movwf	??_sprintf
  2643  0D26  0823               	movf	??_sprintf,w
  2644  0D27  07A6               	addwf	sprintf@ap,f
  2645  0D28                     l2324:
  2646                           
  2647                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2648  0D28  1FAA               	btfss	sprintf@val+1,7
  2649  0D29  2D2B               	goto	u3111
  2650  0D2A  2D2C               	goto	u3110
  2651  0D2B                     u3111:
  2652  0D2B  2D35               	goto	l2330
  2653  0D2C                     u3110:
  2654  0D2C                     l2326:
  2655                           
  2656                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2657  0D2C  3003               	movlw	3
  2658  0D2D  00A3               	movwf	??_sprintf
  2659  0D2E  0823               	movf	??_sprintf,w
  2660  0D2F  04A7               	iorwf	sprintf@flag,f
  2661  0D30                     l2328:
  2662                           
  2663                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2664  0D30  09A9               	comf	sprintf@val,f
  2665  0D31  09AA               	comf	sprintf@val+1,f
  2666  0D32  0AA9               	incf	sprintf@val,f
  2667  0D33  1903               	skipnz
  2668  0D34  0AAA               	incf	sprintf@val+1,f
  2669  0D35                     l2330:
  2670                           
  2671                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2672  0D35  01AC               	clrf	sprintf@c
  2673  0D36  0AAC               	incf	sprintf@c,f
  2674  0D37                     l2336:
  2675                           
  2676                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2677  0D37  082C               	movf	sprintf@c,w
  2678  0D38  00A3               	movwf	??_sprintf
  2679  0D39  0723               	addwf	??_sprintf,w
  2680  0D3A  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2681  0D3B  0084               	movwf	4
  2682  0D3C  120A  158A  200A  120A  158A  	fcall	stringdir
  2683  0D41  00A4               	movwf	??_sprintf+1
  2684  0D42  120A  158A  200A  120A  158A  	fcall	stringdir
  2685  0D47  00A5               	movwf	??_sprintf+2
  2686  0D48  0825               	movf	??_sprintf+2,w
  2687  0D49  022A               	subwf	sprintf@val+1,w
  2688  0D4A  1D03               	skipz
  2689  0D4B  2D4E               	goto	u3125
  2690  0D4C  0824               	movf	??_sprintf+1,w
  2691  0D4D  0229               	subwf	sprintf@val,w
  2692  0D4E                     u3125:
  2693  0D4E  1803               	skipnc
  2694  0D4F  2D51               	goto	u3121
  2695  0D50  2D52               	goto	u3120
  2696  0D51                     u3121:
  2697  0D51  2D53               	goto	l2340
  2698  0D52                     u3120:
  2699  0D52  2D5D               	goto	l2342
  2700  0D53                     l2340:
  2701  0D53  3001               	movlw	1
  2702  0D54  00A3               	movwf	??_sprintf
  2703  0D55  0823               	movf	??_sprintf,w
  2704  0D56  07AC               	addwf	sprintf@c,f
  2705  0D57  3005               	movlw	5
  2706  0D58  062C               	xorwf	sprintf@c,w
  2707  0D59  1D03               	btfss	3,2
  2708  0D5A  2D5C               	goto	u3131
  2709  0D5B  2D5D               	goto	u3130
  2710  0D5C                     u3131:
  2711  0D5C  2D37               	goto	l2336
  2712  0D5D                     u3130:
  2713  0D5D                     l2342:
  2714                           
  2715                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2716  0D5D  0827               	movf	sprintf@flag,w
  2717  0D5E  3903               	andlw	3
  2718  0D5F  1903               	btfsc	3,2
  2719  0D60  2D62               	goto	u3141
  2720  0D61  2D63               	goto	u3140
  2721  0D62                     u3141:
  2722  0D62  2D6E               	goto	l2348
  2723  0D63                     u3140:
  2724  0D63                     l2344:
  2725                           
  2726                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2727  0D63  302D               	movlw	45
  2728  0D64  00A3               	movwf	??_sprintf
  2729  0D65  082B               	movf	sprintf@sp,w
  2730  0D66  0084               	movwf	4
  2731  0D67  0823               	movf	??_sprintf,w
  2732  0D68  1783               	bsf	3,7	;select IRP bank2
  2733  0D69  0080               	movwf	0
  2734  0D6A                     l2346:
  2735  0D6A  3001               	movlw	1
  2736  0D6B  00A3               	movwf	??_sprintf
  2737  0D6C  0823               	movf	??_sprintf,w
  2738  0D6D  07AB               	addwf	sprintf@sp,f
  2739  0D6E                     l2348:
  2740                           
  2741                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2742  0D6E  082C               	movf	sprintf@c,w
  2743  0D6F  00A3               	movwf	??_sprintf
  2744  0D70  0823               	movf	??_sprintf,w
  2745  0D71  00A8               	movwf	sprintf@prec
  2746                           
  2747                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2748  0D72  2DAC               	goto	l2356
  2749  0D73                     l2350:
  2750                           
  2751                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2752  0D73  300A               	movlw	10
  2753  0D74  00F8               	movwf	___lwmod@divisor
  2754  0D75  3000               	movlw	0
  2755  0D76  00F9               	movwf	___lwmod@divisor+1
  2756  0D77  0828               	movf	sprintf@prec,w
  2757  0D78  00A3               	movwf	??_sprintf
  2758  0D79  0723               	addwf	??_sprintf,w
  2759  0D7A  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2760  0D7B  0084               	movwf	4
  2761  0D7C  120A  158A  200A  120A  158A  	fcall	stringdir
  2762  0D81  00F0               	movwf	___lwdiv@divisor
  2763  0D82  120A  158A  200A  120A  158A  	fcall	stringdir
  2764  0D87  00F1               	movwf	___lwdiv@divisor+1
  2765  0D88  082A               	movf	sprintf@val+1,w
  2766  0D89  00F3               	movwf	___lwdiv@dividend+1
  2767  0D8A  0829               	movf	sprintf@val,w
  2768  0D8B  00F2               	movwf	___lwdiv@dividend
  2769  0D8C  120A  158A  20C6  120A  158A  	fcall	___lwdiv
  2770  0D91  0871               	movf	?___lwdiv+1,w
  2771  0D92  00FB               	movwf	___lwmod@dividend+1
  2772  0D93  0870               	movf	?___lwdiv,w
  2773  0D94  00FA               	movwf	___lwmod@dividend
  2774  0D95  120A  158A  208C  120A  158A  	fcall	___lwmod
  2775  0D9A  0878               	movf	?___lwmod,w
  2776  0D9B  3E30               	addlw	48
  2777  0D9C  1283               	bcf	3,5	;RP0=0, select bank0
  2778  0D9D  1303               	bcf	3,6	;RP1=0, select bank0
  2779  0D9E  00A4               	movwf	??_sprintf+1
  2780  0D9F  0824               	movf	??_sprintf+1,w
  2781  0DA0  00AC               	movwf	sprintf@c
  2782  0DA1                     l2352:
  2783                           
  2784                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2785  0DA1  082C               	movf	sprintf@c,w
  2786  0DA2  00A3               	movwf	??_sprintf
  2787  0DA3  082B               	movf	sprintf@sp,w
  2788  0DA4  0084               	movwf	4
  2789  0DA5  0823               	movf	??_sprintf,w
  2790  0DA6  1783               	bsf	3,7	;select IRP bank2
  2791  0DA7  0080               	movwf	0
  2792  0DA8                     l2354:
  2793  0DA8  3001               	movlw	1
  2794  0DA9  00A3               	movwf	??_sprintf
  2795  0DAA  0823               	movf	??_sprintf,w
  2796  0DAB  07AB               	addwf	sprintf@sp,f
  2797  0DAC                     l2356:
  2798                           
  2799                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2800  0DAC  30FF               	movlw	255
  2801  0DAD  00A3               	movwf	??_sprintf
  2802  0DAE  0823               	movf	??_sprintf,w
  2803  0DAF  07A8               	addwf	sprintf@prec,f
  2804  0DB0  0A28               	incf	sprintf@prec,w
  2805  0DB1  1D03               	btfss	3,2
  2806  0DB2  2DB4               	goto	u3151
  2807  0DB3  2DB5               	goto	u3150
  2808  0DB4                     u3151:
  2809  0DB4  2D73               	goto	l2350
  2810  0DB5                     u3150:
  2811  0DB5                     l2358:
  2812                           
  2813                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2814  0DB5  3001               	movlw	1
  2815  0DB6  07A0               	addwf	sprintf@f,f
  2816  0DB7  30FF               	movlw	-1
  2817  0DB8  0720               	addwf	sprintf@f,w
  2818  0DB9  0084               	movwf	4
  2819  0DBA  120A  158A  200A  120A  158A  	fcall	stringdir
  2820  0DBF  00A3               	movwf	??_sprintf
  2821  0DC0  0823               	movf	??_sprintf,w
  2822  0DC1  00AC               	movwf	sprintf@c
  2823  0DC2  082C               	movf	sprintf@c,w
  2824  0DC3  1D03               	btfss	3,2
  2825  0DC4  2DC6               	goto	u3161
  2826  0DC5  2DC7               	goto	u3160
  2827  0DC6                     u3161:
  2828  0DC6  2CEC               	goto	l2308
  2829  0DC7                     u3160:
  2830  0DC7                     l2360:
  2831                           
  2832                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2833  0DC7  082B               	movf	sprintf@sp,w
  2834  0DC8  0084               	movwf	4
  2835  0DC9  1783               	bsf	3,7	;select IRP bank2
  2836  0DCA  0180               	clrf	0
  2837  0DCB                     l358:
  2838  0DCB  0008               	return
  2839  0DCC                     __end_of_sprintf:
  2840                           
  2841                           	psect	text7
  2842  088C                     __ptext7:	
  2843 ;; *************** function ___lwmod *****************
  2844 ;; Defined at:
  2845 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;  divisor         2    8[COMMON] unsigned int 
  2848 ;;  dividend        2   10[COMMON] unsigned int 
  2849 ;; Auto vars:     Size  Location     Type
  2850 ;;  counter         1   13[COMMON] unsigned char 
  2851 ;; Return value:  Size  Location     Type
  2852 ;;                  2    8[COMMON] unsigned int 
  2853 ;; Registers used:
  2854 ;;		wreg, status,2, status,0
  2855 ;; Tracked objects:
  2856 ;;		On entry : 0/0
  2857 ;;		On exit  : 0/0
  2858 ;;		Unchanged: 0/0
  2859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2860 ;;      Params:         4       0       0       0       0
  2861 ;;      Locals:         1       0       0       0       0
  2862 ;;      Temps:          1       0       0       0       0
  2863 ;;      Totals:         6       0       0       0       0
  2864 ;;Total ram usage:        6 bytes
  2865 ;; Hardware stack levels used: 1
  2866 ;; This function calls:
  2867 ;;		Nothing
  2868 ;; This function is called by:
  2869 ;;		_sprintf
  2870 ;; This function uses a non-reentrant model
  2871 ;;
  2872                           
  2873                           
  2874                           ;psect for function ___lwmod
  2875  088C                     ___lwmod:
  2876  088C                     l1928:	
  2877                           ;incstack = 0
  2878                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2879                           
  2880  088C  0878               	movf	___lwmod@divisor,w
  2881  088D  0479               	iorwf	___lwmod@divisor+1,w
  2882  088E  1903               	btfsc	3,2
  2883  088F  2891               	goto	u2211
  2884  0890  2892               	goto	u2210
  2885  0891                     u2211:
  2886  0891  28C1               	goto	l1946
  2887  0892                     u2210:
  2888  0892                     l1930:
  2889  0892  01FD               	clrf	___lwmod@counter
  2890  0893  0AFD               	incf	___lwmod@counter,f
  2891  0894  28A0               	goto	l1936
  2892  0895                     l1932:
  2893  0895  3001               	movlw	1
  2894  0896                     u2225:
  2895  0896  1003               	clrc
  2896  0897  0DF8               	rlf	___lwmod@divisor,f
  2897  0898  0DF9               	rlf	___lwmod@divisor+1,f
  2898  0899  3EFF               	addlw	-1
  2899  089A  1D03               	skipz
  2900  089B  2896               	goto	u2225
  2901  089C                     l1934:
  2902  089C  3001               	movlw	1
  2903  089D  00FC               	movwf	??___lwmod
  2904  089E  087C               	movf	??___lwmod,w
  2905  089F  07FD               	addwf	___lwmod@counter,f
  2906  08A0                     l1936:
  2907  08A0  1FF9               	btfss	___lwmod@divisor+1,7
  2908  08A1  28A3               	goto	u2231
  2909  08A2  28A4               	goto	u2230
  2910  08A3                     u2231:
  2911  08A3  2895               	goto	l1932
  2912  08A4                     u2230:
  2913  08A4                     l1938:
  2914  08A4  0879               	movf	___lwmod@divisor+1,w
  2915  08A5  027B               	subwf	___lwmod@dividend+1,w
  2916  08A6  1D03               	skipz
  2917  08A7  28AA               	goto	u2245
  2918  08A8  0878               	movf	___lwmod@divisor,w
  2919  08A9  027A               	subwf	___lwmod@dividend,w
  2920  08AA                     u2245:
  2921  08AA  1C03               	skipc
  2922  08AB  28AD               	goto	u2241
  2923  08AC  28AE               	goto	u2240
  2924  08AD                     u2241:
  2925  08AD  28B4               	goto	l1942
  2926  08AE                     u2240:
  2927  08AE                     l1940:
  2928  08AE  0878               	movf	___lwmod@divisor,w
  2929  08AF  02FA               	subwf	___lwmod@dividend,f
  2930  08B0  0879               	movf	___lwmod@divisor+1,w
  2931  08B1  1C03               	skipc
  2932  08B2  03FB               	decf	___lwmod@dividend+1,f
  2933  08B3  02FB               	subwf	___lwmod@dividend+1,f
  2934  08B4                     l1942:
  2935  08B4  3001               	movlw	1
  2936  08B5                     u2255:
  2937  08B5  1003               	clrc
  2938  08B6  0CF9               	rrf	___lwmod@divisor+1,f
  2939  08B7  0CF8               	rrf	___lwmod@divisor,f
  2940  08B8  3EFF               	addlw	-1
  2941  08B9  1D03               	skipz
  2942  08BA  28B5               	goto	u2255
  2943  08BB                     l1944:
  2944  08BB  3001               	movlw	1
  2945  08BC  02FD               	subwf	___lwmod@counter,f
  2946  08BD  1D03               	btfss	3,2
  2947  08BE  28C0               	goto	u2261
  2948  08BF  28C1               	goto	u2260
  2949  08C0                     u2261:
  2950  08C0  28A4               	goto	l1938
  2951  08C1                     u2260:
  2952  08C1                     l1946:
  2953  08C1  087B               	movf	___lwmod@dividend+1,w
  2954  08C2  00F9               	movwf	?___lwmod+1
  2955  08C3  087A               	movf	___lwmod@dividend,w
  2956  08C4  00F8               	movwf	?___lwmod
  2957  08C5                     l644:
  2958  08C5  0008               	return
  2959  08C6                     __end_of___lwmod:
  2960                           
  2961                           	psect	text8
  2962  08C6                     __ptext8:	
  2963 ;; *************** function ___lwdiv *****************
  2964 ;; Defined at:
  2965 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  2966 ;; Parameters:    Size  Location     Type
  2967 ;;  divisor         2    0[COMMON] unsigned int 
  2968 ;;  dividend        2    2[COMMON] unsigned int 
  2969 ;; Auto vars:     Size  Location     Type
  2970 ;;  quotient        2    5[COMMON] unsigned int 
  2971 ;;  counter         1    7[COMMON] unsigned char 
  2972 ;; Return value:  Size  Location     Type
  2973 ;;                  2    0[COMMON] unsigned int 
  2974 ;; Registers used:
  2975 ;;		wreg, status,2, status,0
  2976 ;; Tracked objects:
  2977 ;;		On entry : 0/0
  2978 ;;		On exit  : 0/0
  2979 ;;		Unchanged: 0/0
  2980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2981 ;;      Params:         4       0       0       0       0
  2982 ;;      Locals:         3       0       0       0       0
  2983 ;;      Temps:          1       0       0       0       0
  2984 ;;      Totals:         8       0       0       0       0
  2985 ;;Total ram usage:        8 bytes
  2986 ;; Hardware stack levels used: 1
  2987 ;; This function calls:
  2988 ;;		Nothing
  2989 ;; This function is called by:
  2990 ;;		_sprintf
  2991 ;; This function uses a non-reentrant model
  2992 ;;
  2993                           
  2994                           
  2995                           ;psect for function ___lwdiv
  2996  08C6                     ___lwdiv:
  2997  08C6                     l1902:	
  2998                           ;incstack = 0
  2999                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3000                           
  3001  08C6  01F5               	clrf	___lwdiv@quotient
  3002  08C7  01F6               	clrf	___lwdiv@quotient+1
  3003  08C8                     l1904:
  3004  08C8  0870               	movf	___lwdiv@divisor,w
  3005  08C9  0471               	iorwf	___lwdiv@divisor+1,w
  3006  08CA  1903               	btfsc	3,2
  3007  08CB  28CD               	goto	u2141
  3008  08CC  28CE               	goto	u2140
  3009  08CD                     u2141:
  3010  08CD  2905               	goto	l1924
  3011  08CE                     u2140:
  3012  08CE                     l1906:
  3013  08CE  01F7               	clrf	___lwdiv@counter
  3014  08CF  0AF7               	incf	___lwdiv@counter,f
  3015  08D0  28DC               	goto	l1912
  3016  08D1                     l1908:
  3017  08D1  3001               	movlw	1
  3018  08D2                     u2155:
  3019  08D2  1003               	clrc
  3020  08D3  0DF0               	rlf	___lwdiv@divisor,f
  3021  08D4  0DF1               	rlf	___lwdiv@divisor+1,f
  3022  08D5  3EFF               	addlw	-1
  3023  08D6  1D03               	skipz
  3024  08D7  28D2               	goto	u2155
  3025  08D8                     l1910:
  3026  08D8  3001               	movlw	1
  3027  08D9  00F4               	movwf	??___lwdiv
  3028  08DA  0874               	movf	??___lwdiv,w
  3029  08DB  07F7               	addwf	___lwdiv@counter,f
  3030  08DC                     l1912:
  3031  08DC  1FF1               	btfss	___lwdiv@divisor+1,7
  3032  08DD  28DF               	goto	u2161
  3033  08DE  28E0               	goto	u2160
  3034  08DF                     u2161:
  3035  08DF  28D1               	goto	l1908
  3036  08E0                     u2160:
  3037  08E0                     l1914:
  3038  08E0  3001               	movlw	1
  3039  08E1                     u2175:
  3040  08E1  1003               	clrc
  3041  08E2  0DF5               	rlf	___lwdiv@quotient,f
  3042  08E3  0DF6               	rlf	___lwdiv@quotient+1,f
  3043  08E4  3EFF               	addlw	-1
  3044  08E5  1D03               	skipz
  3045  08E6  28E1               	goto	u2175
  3046  08E7  0871               	movf	___lwdiv@divisor+1,w
  3047  08E8  0273               	subwf	___lwdiv@dividend+1,w
  3048  08E9  1D03               	skipz
  3049  08EA  28ED               	goto	u2185
  3050  08EB  0870               	movf	___lwdiv@divisor,w
  3051  08EC  0272               	subwf	___lwdiv@dividend,w
  3052  08ED                     u2185:
  3053  08ED  1C03               	skipc
  3054  08EE  28F0               	goto	u2181
  3055  08EF  28F1               	goto	u2180
  3056  08F0                     u2181:
  3057  08F0  28F8               	goto	l1920
  3058  08F1                     u2180:
  3059  08F1                     l1916:
  3060  08F1  0870               	movf	___lwdiv@divisor,w
  3061  08F2  02F2               	subwf	___lwdiv@dividend,f
  3062  08F3  0871               	movf	___lwdiv@divisor+1,w
  3063  08F4  1C03               	skipc
  3064  08F5  03F3               	decf	___lwdiv@dividend+1,f
  3065  08F6  02F3               	subwf	___lwdiv@dividend+1,f
  3066  08F7                     l1918:
  3067  08F7  1475               	bsf	___lwdiv@quotient,0
  3068  08F8                     l1920:
  3069  08F8  3001               	movlw	1
  3070  08F9                     u2195:
  3071  08F9  1003               	clrc
  3072  08FA  0CF1               	rrf	___lwdiv@divisor+1,f
  3073  08FB  0CF0               	rrf	___lwdiv@divisor,f
  3074  08FC  3EFF               	addlw	-1
  3075  08FD  1D03               	skipz
  3076  08FE  28F9               	goto	u2195
  3077  08FF                     l1922:
  3078  08FF  3001               	movlw	1
  3079  0900  02F7               	subwf	___lwdiv@counter,f
  3080  0901  1D03               	btfss	3,2
  3081  0902  2904               	goto	u2201
  3082  0903  2905               	goto	u2200
  3083  0904                     u2201:
  3084  0904  28E0               	goto	l1914
  3085  0905                     u2200:
  3086  0905                     l1924:
  3087  0905  0876               	movf	___lwdiv@quotient+1,w
  3088  0906  00F1               	movwf	?___lwdiv+1
  3089  0907  0875               	movf	___lwdiv@quotient,w
  3090  0908  00F0               	movwf	?___lwdiv
  3091  0909                     l634:
  3092  0909  0008               	return
  3093  090A                     __end_of___lwdiv:
  3094                           
  3095                           	psect	text9
  3096  0003                     __ptext9:	
  3097 ;; *************** function _lcd_str *****************
  3098 ;; Defined at:
  3099 ;;		line 76 in file "lcd.c"
  3100 ;; Parameters:    Size  Location     Type
  3101 ;;  str             2    2[COMMON] PTR const unsigned char 
  3102 ;;		 -> STR_11(12), STR_10(12), STR_8(6), STR_6(6), 
  3103 ;;		 -> STR_4(6), string(32), STR_1(6), 
  3104 ;; Auto vars:     Size  Location     Type
  3105 ;;  i               1    5[COMMON] unsigned char 
  3106 ;; Return value:  Size  Location     Type
  3107 ;;                  1    wreg      void 
  3108 ;; Registers used:
  3109 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3110 ;; Tracked objects:
  3111 ;;		On entry : 0/0
  3112 ;;		On exit  : 0/0
  3113 ;;		Unchanged: 0/0
  3114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3115 ;;      Params:         2       0       0       0       0
  3116 ;;      Locals:         1       0       0       0       0
  3117 ;;      Temps:          1       0       0       0       0
  3118 ;;      Totals:         4       0       0       0       0
  3119 ;;Total ram usage:        4 bytes
  3120 ;; Hardware stack levels used: 1
  3121 ;; Hardware stack levels required when called: 2
  3122 ;; This function calls:
  3123 ;;		_lcd_dat
  3124 ;; This function is called by:
  3125 ;;		_imprimirValoresLcd
  3126 ;;		_main
  3127 ;; This function uses a non-reentrant model
  3128 ;;
  3129                           
  3130                           
  3131                           ;psect for function _lcd_str
  3132  0003                     _lcd_str:
  3133  0003                     l2298:	
  3134                           ;incstack = 0
  3135                           ; Regs used in _lcd_str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3136                           
  3137                           
  3138                           ;lcd.c: 76: void lcd_str(const char* str);lcd.c: 77: {;lcd.c: 78:  unsigned char i=0;
  3139  0003  01F5               	clrf	lcd_str@i
  3140                           
  3141                           ;lcd.c: 80:  while(str[i] != 0 )
  3142  0004  281A               	goto	l2304
  3143  0005                     l2300:
  3144                           
  3145                           ;lcd.c: 81:  {;lcd.c: 82:    lcd_dat(str[i]);
  3146  0005  0875               	movf	lcd_str@i,w
  3147  0006  0772               	addwf	lcd_str@str,w
  3148  0007  0084               	movwf	4
  3149  0008  0873               	movf	lcd_str@str+1,w
  3150  0009  1803               	skipnc
  3151  000A  0A73               	incf	lcd_str@str+1,w
  3152  000B  00FF               	movwf	btemp+1
  3153  000C  120A  158A  2000  120A  118A  	fcall	stringtab
  3154  0011  120A  158A  2045  120A  118A  	fcall	_lcd_dat
  3155  0016                     l2302:
  3156                           
  3157                           ;lcd.c: 83:    i++;
  3158  0016  3001               	movlw	1
  3159  0017  00F4               	movwf	??_lcd_str
  3160  0018  0874               	movf	??_lcd_str,w
  3161  0019  07F5               	addwf	lcd_str@i,f
  3162  001A                     l2304:
  3163                           
  3164                           ;lcd.c: 80:  while(str[i] != 0 )
  3165  001A  0875               	movf	lcd_str@i,w
  3166  001B  0772               	addwf	lcd_str@str,w
  3167  001C  0084               	movwf	4
  3168  001D  0873               	movf	lcd_str@str+1,w
  3169  001E  1803               	skipnc
  3170  001F  0A73               	incf	lcd_str@str+1,w
  3171  0020  1283               	bcf	3,5	;RP0=0, select bank0
  3172  0021  1303               	bcf	3,6	;RP1=0, select bank0
  3173  0022  00FF               	movwf	btemp+1
  3174  0023  120A  158A  2000  120A  118A  	fcall	stringtab
  3175  0028  3A00               	xorlw	0
  3176  0029  1D03               	skipz
  3177  002A  282C               	goto	u3091
  3178  002B  282D               	goto	u3090
  3179  002C                     u3091:
  3180  002C  2805               	goto	l2300
  3181  002D                     u3090:
  3182  002D                     l248:
  3183  002D  0008               	return
  3184  002E                     __end_of_lcd_str:
  3185                           
  3186                           	psect	text10
  3187  0845                     __ptext10:	
  3188 ;; *************** function _lcd_dat *****************
  3189 ;; Defined at:
  3190 ;;		line 46 in file "lcd.c"
  3191 ;; Parameters:    Size  Location     Type
  3192 ;;  val             1    wreg     unsigned char 
  3193 ;; Auto vars:     Size  Location     Type
  3194 ;;  val             1    1[COMMON] unsigned char 
  3195 ;; Return value:  Size  Location     Type
  3196 ;;                  1    wreg      void 
  3197 ;; Registers used:
  3198 ;;		wreg, status,2, status,0, pclath, cstack
  3199 ;; Tracked objects:
  3200 ;;		On entry : 0/0
  3201 ;;		On exit  : 0/0
  3202 ;;		Unchanged: 0/0
  3203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3204 ;;      Params:         0       0       0       0       0
  3205 ;;      Locals:         1       0       0       0       0
  3206 ;;      Temps:          0       0       0       0       0
  3207 ;;      Totals:         1       0       0       0       0
  3208 ;;Total ram usage:        1 bytes
  3209 ;; Hardware stack levels used: 1
  3210 ;; Hardware stack levels required when called: 1
  3211 ;; This function calls:
  3212 ;;		_lcd_wr
  3213 ;; This function is called by:
  3214 ;;		_lcd_str
  3215 ;; This function uses a non-reentrant model
  3216 ;;
  3217                           
  3218                           
  3219                           ;psect for function _lcd_dat
  3220  0845                     _lcd_dat:
  3221                           
  3222                           ;incstack = 0
  3223                           ; Regs used in _lcd_dat: [wreg+status,2+status,0+pclath+cstack]
  3224                           ;lcd_dat@val stored from wreg
  3225  0845  00F1               	movwf	lcd_dat@val
  3226  0846                     l1856:
  3227                           
  3228                           ;lcd.c: 46: void lcd_dat(unsigned char val);lcd.c: 47: {;lcd.c: 48:  PORTEbits.RE1=1;
  3229  0846  1283               	bcf	3,5	;RP0=0, select bank0
  3230  0847  1303               	bcf	3,6	;RP1=0, select bank0
  3231  0848  1489               	bsf	9,1	;volatile
  3232  0849                     l1858:
  3233                           
  3234                           ;lcd.c: 49:         lcd_wr(val);
  3235  0849  0871               	movf	lcd_dat@val,w
  3236  084A  160A  118A  26C2  120A  158A  	fcall	_lcd_wr
  3237  084F                     l1860:
  3238                           
  3239                           ;lcd.c: 50:         PORTEbits.RE0=1;
  3240  084F  1283               	bcf	3,5	;RP0=0, select bank0
  3241  0850  1303               	bcf	3,6	;RP1=0, select bank0
  3242  0851  1409               	bsf	9,0	;volatile
  3243  0852                     l1862:
  3244                           
  3245                           ;lcd.c: 52:         PORTEbits.RE1=0;
  3246  0852  1089               	bcf	9,1	;volatile
  3247  0853                     l1864:
  3248                           
  3249                           ;lcd.c: 54:  PORTEbits.RE1=1;
  3250  0853  1489               	bsf	9,1	;volatile
  3251  0854                     l239:
  3252  0854  0008               	return
  3253  0855                     __end_of_lcd_dat:
  3254                           
  3255                           	psect	text11
  3256  16F3                     __ptext11:	
  3257 ;; *************** function _lcd_cmd *****************
  3258 ;; Defined at:
  3259 ;;		line 35 in file "lcd.c"
  3260 ;; Parameters:    Size  Location     Type
  3261 ;;  val             1    wreg     unsigned char 
  3262 ;; Auto vars:     Size  Location     Type
  3263 ;;  val             1    1[COMMON] unsigned char 
  3264 ;; Return value:  Size  Location     Type
  3265 ;;                  1    wreg      void 
  3266 ;; Registers used:
  3267 ;;		wreg, status,2, status,0, pclath, cstack
  3268 ;; Tracked objects:
  3269 ;;		On entry : 0/0
  3270 ;;		On exit  : 0/0
  3271 ;;		Unchanged: 0/0
  3272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3273 ;;      Params:         0       0       0       0       0
  3274 ;;      Locals:         1       0       0       0       0
  3275 ;;      Temps:          0       0       0       0       0
  3276 ;;      Totals:         1       0       0       0       0
  3277 ;;Total ram usage:        1 bytes
  3278 ;; Hardware stack levels used: 1
  3279 ;; Hardware stack levels required when called: 1
  3280 ;; This function calls:
  3281 ;;		_lcd_wr
  3282 ;; This function is called by:
  3283 ;;		_imprimirValoresLcd
  3284 ;;		_main
  3285 ;;		_lcd_init
  3286 ;; This function uses a non-reentrant model
  3287 ;;
  3288                           
  3289                           
  3290                           ;psect for function _lcd_cmd
  3291  16F3                     _lcd_cmd:
  3292                           
  3293                           ;incstack = 0
  3294                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  3295                           ;lcd_cmd@val stored from wreg
  3296  16F3  00F1               	movwf	lcd_cmd@val
  3297  16F4                     l2288:
  3298                           
  3299                           ;lcd.c: 35: void lcd_cmd(unsigned char val);lcd.c: 36: {;lcd.c: 37:  PORTEbits.RE1=1;
  3300  16F4  1283               	bcf	3,5	;RP0=0, select bank0
  3301  16F5  1303               	bcf	3,6	;RP1=0, select bank0
  3302  16F6  1489               	bsf	9,1	;volatile
  3303  16F7                     l2290:
  3304                           
  3305                           ;lcd.c: 38:         lcd_wr(val);
  3306  16F7  0871               	movf	lcd_cmd@val,w
  3307  16F8  160A  118A  26C2  160A  118A  	fcall	_lcd_wr
  3308  16FD                     l2292:
  3309                           
  3310                           ;lcd.c: 39:         PORTEbits.RE0=0;
  3311  16FD  1283               	bcf	3,5	;RP0=0, select bank0
  3312  16FE  1303               	bcf	3,6	;RP1=0, select bank0
  3313  16FF  1009               	bcf	9,0	;volatile
  3314  1700                     l2294:
  3315                           
  3316                           ;lcd.c: 41:         PORTEbits.RE1=0;
  3317  1700  1089               	bcf	9,1	;volatile
  3318  1701                     l2296:
  3319                           
  3320                           ;lcd.c: 43:  PORTEbits.RE1=1;
  3321  1701  1489               	bsf	9,1	;volatile
  3322  1702                     l236:
  3323  1702  0008               	return
  3324  1703                     __end_of_lcd_cmd:
  3325                           
  3326                           	psect	text12
  3327  16C2                     __ptext12:	
  3328 ;; *************** function _lcd_wr *****************
  3329 ;; Defined at:
  3330 ;;		line 30 in file "lcd.c"
  3331 ;; Parameters:    Size  Location     Type
  3332 ;;  val             1    wreg     unsigned char 
  3333 ;; Auto vars:     Size  Location     Type
  3334 ;;  val             1    0[COMMON] unsigned char 
  3335 ;; Return value:  Size  Location     Type
  3336 ;;                  1    wreg      void 
  3337 ;; Registers used:
  3338 ;;		wreg
  3339 ;; Tracked objects:
  3340 ;;		On entry : 0/0
  3341 ;;		On exit  : 0/0
  3342 ;;		Unchanged: 0/0
  3343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3344 ;;      Params:         0       0       0       0       0
  3345 ;;      Locals:         1       0       0       0       0
  3346 ;;      Temps:          0       0       0       0       0
  3347 ;;      Totals:         1       0       0       0       0
  3348 ;;Total ram usage:        1 bytes
  3349 ;; Hardware stack levels used: 1
  3350 ;; This function calls:
  3351 ;;		Nothing
  3352 ;; This function is called by:
  3353 ;;		_lcd_cmd
  3354 ;;		_lcd_dat
  3355 ;; This function uses a non-reentrant model
  3356 ;;
  3357                           
  3358                           
  3359                           ;psect for function _lcd_wr
  3360  16C2                     _lcd_wr:
  3361                           
  3362                           ;incstack = 0
  3363                           ; Regs used in _lcd_wr: [wreg]
  3364                           ;lcd_wr@val stored from wreg
  3365  16C2  00F0               	movwf	lcd_wr@val
  3366  16C3                     l1798:
  3367                           
  3368                           ;lcd.c: 30: void lcd_wr(unsigned char val);lcd.c: 31: {;lcd.c: 32:   PORTD=val;
  3369  16C3  0870               	movf	lcd_wr@val,w
  3370  16C4  1283               	bcf	3,5	;RP0=0, select bank0
  3371  16C5  1303               	bcf	3,6	;RP1=0, select bank0
  3372  16C6  0088               	movwf	8	;volatile
  3373  16C7                     l233:
  3374  16C7  0008               	return
  3375  16C8                     __end_of_lcd_wr:
  3376                           
  3377                           	psect	text13
  3378  090A                     __ptext13:	
  3379 ;; *************** function ___awmod *****************
  3380 ;; Defined at:
  3381 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  3382 ;; Parameters:    Size  Location     Type
  3383 ;;  divisor         2    0[COMMON] int 
  3384 ;;  dividend        2    2[COMMON] int 
  3385 ;; Auto vars:     Size  Location     Type
  3386 ;;  sign            1    6[COMMON] unsigned char 
  3387 ;;  counter         1    5[COMMON] unsigned char 
  3388 ;; Return value:  Size  Location     Type
  3389 ;;                  2    0[COMMON] int 
  3390 ;; Registers used:
  3391 ;;		wreg, status,2, status,0
  3392 ;; Tracked objects:
  3393 ;;		On entry : 0/0
  3394 ;;		On exit  : 0/0
  3395 ;;		Unchanged: 0/0
  3396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3397 ;;      Params:         4       0       0       0       0
  3398 ;;      Locals:         2       0       0       0       0
  3399 ;;      Temps:          1       0       0       0       0
  3400 ;;      Totals:         7       0       0       0       0
  3401 ;;Total ram usage:        7 bytes
  3402 ;; Hardware stack levels used: 1
  3403 ;; This function calls:
  3404 ;;		Nothing
  3405 ;; This function is called by:
  3406 ;;		_imprimirValoresLcd
  3407 ;; This function uses a non-reentrant model
  3408 ;;
  3409                           
  3410                           
  3411                           ;psect for function ___awmod
  3412  090A                     ___awmod:
  3413  090A                     l2466:	
  3414                           ;incstack = 0
  3415                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3416                           
  3417  090A  01F6               	clrf	___awmod@sign
  3418  090B                     l2468:
  3419  090B  1FF3               	btfss	___awmod@dividend+1,7
  3420  090C  290E               	goto	u3421
  3421  090D  290F               	goto	u3420
  3422  090E                     u3421:
  3423  090E  2916               	goto	l2474
  3424  090F                     u3420:
  3425  090F                     l2470:
  3426  090F  09F2               	comf	___awmod@dividend,f
  3427  0910  09F3               	comf	___awmod@dividend+1,f
  3428  0911  0AF2               	incf	___awmod@dividend,f
  3429  0912  1903               	skipnz
  3430  0913  0AF3               	incf	___awmod@dividend+1,f
  3431  0914                     l2472:
  3432  0914  01F6               	clrf	___awmod@sign
  3433  0915  0AF6               	incf	___awmod@sign,f
  3434  0916                     l2474:
  3435  0916  1FF1               	btfss	___awmod@divisor+1,7
  3436  0917  2919               	goto	u3431
  3437  0918  291A               	goto	u3430
  3438  0919                     u3431:
  3439  0919  291F               	goto	l2478
  3440  091A                     u3430:
  3441  091A                     l2476:
  3442  091A  09F0               	comf	___awmod@divisor,f
  3443  091B  09F1               	comf	___awmod@divisor+1,f
  3444  091C  0AF0               	incf	___awmod@divisor,f
  3445  091D  1903               	skipnz
  3446  091E  0AF1               	incf	___awmod@divisor+1,f
  3447  091F                     l2478:
  3448  091F  0870               	movf	___awmod@divisor,w
  3449  0920  0471               	iorwf	___awmod@divisor+1,w
  3450  0921  1903               	btfsc	3,2
  3451  0922  2924               	goto	u3441
  3452  0923  2925               	goto	u3440
  3453  0924                     u3441:
  3454  0924  2954               	goto	l2496
  3455  0925                     u3440:
  3456  0925                     l2480:
  3457  0925  01F5               	clrf	___awmod@counter
  3458  0926  0AF5               	incf	___awmod@counter,f
  3459  0927  2933               	goto	l2486
  3460  0928                     l2482:
  3461  0928  3001               	movlw	1
  3462  0929                     u3455:
  3463  0929  1003               	clrc
  3464  092A  0DF0               	rlf	___awmod@divisor,f
  3465  092B  0DF1               	rlf	___awmod@divisor+1,f
  3466  092C  3EFF               	addlw	-1
  3467  092D  1D03               	skipz
  3468  092E  2929               	goto	u3455
  3469  092F                     l2484:
  3470  092F  3001               	movlw	1
  3471  0930  00F4               	movwf	??___awmod
  3472  0931  0874               	movf	??___awmod,w
  3473  0932  07F5               	addwf	___awmod@counter,f
  3474  0933                     l2486:
  3475  0933  1FF1               	btfss	___awmod@divisor+1,7
  3476  0934  2936               	goto	u3461
  3477  0935  2937               	goto	u3460
  3478  0936                     u3461:
  3479  0936  2928               	goto	l2482
  3480  0937                     u3460:
  3481  0937                     l2488:
  3482  0937  0871               	movf	___awmod@divisor+1,w
  3483  0938  0273               	subwf	___awmod@dividend+1,w
  3484  0939  1D03               	skipz
  3485  093A  293D               	goto	u3475
  3486  093B  0870               	movf	___awmod@divisor,w
  3487  093C  0272               	subwf	___awmod@dividend,w
  3488  093D                     u3475:
  3489  093D  1C03               	skipc
  3490  093E  2940               	goto	u3471
  3491  093F  2941               	goto	u3470
  3492  0940                     u3471:
  3493  0940  2947               	goto	l2492
  3494  0941                     u3470:
  3495  0941                     l2490:
  3496  0941  0870               	movf	___awmod@divisor,w
  3497  0942  02F2               	subwf	___awmod@dividend,f
  3498  0943  0871               	movf	___awmod@divisor+1,w
  3499  0944  1C03               	skipc
  3500  0945  03F3               	decf	___awmod@dividend+1,f
  3501  0946  02F3               	subwf	___awmod@dividend+1,f
  3502  0947                     l2492:
  3503  0947  3001               	movlw	1
  3504  0948                     u3485:
  3505  0948  1003               	clrc
  3506  0949  0CF1               	rrf	___awmod@divisor+1,f
  3507  094A  0CF0               	rrf	___awmod@divisor,f
  3508  094B  3EFF               	addlw	-1
  3509  094C  1D03               	skipz
  3510  094D  2948               	goto	u3485
  3511  094E                     l2494:
  3512  094E  3001               	movlw	1
  3513  094F  02F5               	subwf	___awmod@counter,f
  3514  0950  1D03               	btfss	3,2
  3515  0951  2953               	goto	u3491
  3516  0952  2954               	goto	u3490
  3517  0953                     u3491:
  3518  0953  2937               	goto	l2488
  3519  0954                     u3490:
  3520  0954                     l2496:
  3521  0954  0876               	movf	___awmod@sign,w
  3522  0955  1903               	btfsc	3,2
  3523  0956  2958               	goto	u3501
  3524  0957  2959               	goto	u3500
  3525  0958                     u3501:
  3526  0958  295E               	goto	l2500
  3527  0959                     u3500:
  3528  0959                     l2498:
  3529  0959  09F2               	comf	___awmod@dividend,f
  3530  095A  09F3               	comf	___awmod@dividend+1,f
  3531  095B  0AF2               	incf	___awmod@dividend,f
  3532  095C  1903               	skipnz
  3533  095D  0AF3               	incf	___awmod@dividend+1,f
  3534  095E                     l2500:
  3535  095E  0873               	movf	___awmod@dividend+1,w
  3536  095F  00F1               	movwf	?___awmod+1
  3537  0960  0872               	movf	___awmod@dividend,w
  3538  0961  00F0               	movwf	?___awmod
  3539  0962                     l528:
  3540  0962  0008               	return
  3541  0963                     __end_of___awmod:
  3542                           
  3543                           	psect	text14
  3544  0963                     __ptext14:	
  3545 ;; *************** function ___awdiv *****************
  3546 ;; Defined at:
  3547 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  3548 ;; Parameters:    Size  Location     Type
  3549 ;;  divisor         2    7[COMMON] int 
  3550 ;;  dividend        2    9[COMMON] int 
  3551 ;; Auto vars:     Size  Location     Type
  3552 ;;  quotient        2    2[BANK0 ] int 
  3553 ;;  sign            1    1[BANK0 ] unsigned char 
  3554 ;;  counter         1    0[BANK0 ] unsigned char 
  3555 ;; Return value:  Size  Location     Type
  3556 ;;                  2    7[COMMON] int 
  3557 ;; Registers used:
  3558 ;;		wreg, status,2, status,0
  3559 ;; Tracked objects:
  3560 ;;		On entry : 0/0
  3561 ;;		On exit  : 0/0
  3562 ;;		Unchanged: 0/0
  3563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3564 ;;      Params:         4       0       0       0       0
  3565 ;;      Locals:         0       4       0       0       0
  3566 ;;      Temps:          1       0       0       0       0
  3567 ;;      Totals:         5       4       0       0       0
  3568 ;;Total ram usage:        9 bytes
  3569 ;; Hardware stack levels used: 1
  3570 ;; This function calls:
  3571 ;;		Nothing
  3572 ;; This function is called by:
  3573 ;;		_imprimirValoresLcd
  3574 ;;		_realizarCalculo
  3575 ;; This function uses a non-reentrant model
  3576 ;;
  3577                           
  3578                           
  3579                           ;psect for function ___awdiv
  3580  0963                     ___awdiv:
  3581  0963                     l2422:	
  3582                           ;incstack = 0
  3583                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3584                           
  3585  0963  1283               	bcf	3,5	;RP0=0, select bank0
  3586  0964  1303               	bcf	3,6	;RP1=0, select bank0
  3587  0965  01A1               	clrf	___awdiv@sign
  3588  0966                     l2424:
  3589  0966  1FF8               	btfss	___awdiv@divisor+1,7
  3590  0967  2969               	goto	u3321
  3591  0968  296A               	goto	u3320
  3592  0969                     u3321:
  3593  0969  2971               	goto	l2430
  3594  096A                     u3320:
  3595  096A                     l2426:
  3596  096A  09F7               	comf	___awdiv@divisor,f
  3597  096B  09F8               	comf	___awdiv@divisor+1,f
  3598  096C  0AF7               	incf	___awdiv@divisor,f
  3599  096D  1903               	skipnz
  3600  096E  0AF8               	incf	___awdiv@divisor+1,f
  3601  096F                     l2428:
  3602  096F  01A1               	clrf	___awdiv@sign
  3603  0970  0AA1               	incf	___awdiv@sign,f
  3604  0971                     l2430:
  3605  0971  1FFA               	btfss	___awdiv@dividend+1,7
  3606  0972  2974               	goto	u3331
  3607  0973  2975               	goto	u3330
  3608  0974                     u3331:
  3609  0974  297E               	goto	l2436
  3610  0975                     u3330:
  3611  0975                     l2432:
  3612  0975  09F9               	comf	___awdiv@dividend,f
  3613  0976  09FA               	comf	___awdiv@dividend+1,f
  3614  0977  0AF9               	incf	___awdiv@dividend,f
  3615  0978  1903               	skipnz
  3616  0979  0AFA               	incf	___awdiv@dividend+1,f
  3617  097A                     l2434:
  3618  097A  3001               	movlw	1
  3619  097B  00FB               	movwf	??___awdiv
  3620  097C  087B               	movf	??___awdiv,w
  3621  097D  06A1               	xorwf	___awdiv@sign,f
  3622  097E                     l2436:
  3623  097E  01A2               	clrf	___awdiv@quotient
  3624  097F  01A3               	clrf	___awdiv@quotient+1
  3625  0980                     l2438:
  3626  0980  0877               	movf	___awdiv@divisor,w
  3627  0981  0478               	iorwf	___awdiv@divisor+1,w
  3628  0982  1903               	btfsc	3,2
  3629  0983  2985               	goto	u3341
  3630  0984  2986               	goto	u3340
  3631  0985                     u3341:
  3632  0985  29BD               	goto	l2458
  3633  0986                     u3340:
  3634  0986                     l2440:
  3635  0986  01A0               	clrf	___awdiv@counter
  3636  0987  0AA0               	incf	___awdiv@counter,f
  3637  0988  2994               	goto	l2446
  3638  0989                     l2442:
  3639  0989  3001               	movlw	1
  3640  098A                     u3355:
  3641  098A  1003               	clrc
  3642  098B  0DF7               	rlf	___awdiv@divisor,f
  3643  098C  0DF8               	rlf	___awdiv@divisor+1,f
  3644  098D  3EFF               	addlw	-1
  3645  098E  1D03               	skipz
  3646  098F  298A               	goto	u3355
  3647  0990                     l2444:
  3648  0990  3001               	movlw	1
  3649  0991  00FB               	movwf	??___awdiv
  3650  0992  087B               	movf	??___awdiv,w
  3651  0993  07A0               	addwf	___awdiv@counter,f
  3652  0994                     l2446:
  3653  0994  1FF8               	btfss	___awdiv@divisor+1,7
  3654  0995  2997               	goto	u3361
  3655  0996  2998               	goto	u3360
  3656  0997                     u3361:
  3657  0997  2989               	goto	l2442
  3658  0998                     u3360:
  3659  0998                     l2448:
  3660  0998  3001               	movlw	1
  3661  0999                     u3375:
  3662  0999  1003               	clrc
  3663  099A  0DA2               	rlf	___awdiv@quotient,f
  3664  099B  0DA3               	rlf	___awdiv@quotient+1,f
  3665  099C  3EFF               	addlw	-1
  3666  099D  1D03               	skipz
  3667  099E  2999               	goto	u3375
  3668  099F  0878               	movf	___awdiv@divisor+1,w
  3669  09A0  027A               	subwf	___awdiv@dividend+1,w
  3670  09A1  1D03               	skipz
  3671  09A2  29A5               	goto	u3385
  3672  09A3  0877               	movf	___awdiv@divisor,w
  3673  09A4  0279               	subwf	___awdiv@dividend,w
  3674  09A5                     u3385:
  3675  09A5  1C03               	skipc
  3676  09A6  29A8               	goto	u3381
  3677  09A7  29A9               	goto	u3380
  3678  09A8                     u3381:
  3679  09A8  29B0               	goto	l2454
  3680  09A9                     u3380:
  3681  09A9                     l2450:
  3682  09A9  0877               	movf	___awdiv@divisor,w
  3683  09AA  02F9               	subwf	___awdiv@dividend,f
  3684  09AB  0878               	movf	___awdiv@divisor+1,w
  3685  09AC  1C03               	skipc
  3686  09AD  03FA               	decf	___awdiv@dividend+1,f
  3687  09AE  02FA               	subwf	___awdiv@dividend+1,f
  3688  09AF                     l2452:
  3689  09AF  1422               	bsf	___awdiv@quotient,0
  3690  09B0                     l2454:
  3691  09B0  3001               	movlw	1
  3692  09B1                     u3395:
  3693  09B1  1003               	clrc
  3694  09B2  0CF8               	rrf	___awdiv@divisor+1,f
  3695  09B3  0CF7               	rrf	___awdiv@divisor,f
  3696  09B4  3EFF               	addlw	-1
  3697  09B5  1D03               	skipz
  3698  09B6  29B1               	goto	u3395
  3699  09B7                     l2456:
  3700  09B7  3001               	movlw	1
  3701  09B8  02A0               	subwf	___awdiv@counter,f
  3702  09B9  1D03               	btfss	3,2
  3703  09BA  29BC               	goto	u3401
  3704  09BB  29BD               	goto	u3400
  3705  09BC                     u3401:
  3706  09BC  2998               	goto	l2448
  3707  09BD                     u3400:
  3708  09BD                     l2458:
  3709  09BD  0821               	movf	___awdiv@sign,w
  3710  09BE  1903               	btfsc	3,2
  3711  09BF  29C1               	goto	u3411
  3712  09C0  29C2               	goto	u3410
  3713  09C1                     u3411:
  3714  09C1  29C7               	goto	l2462
  3715  09C2                     u3410:
  3716  09C2                     l2460:
  3717  09C2  09A2               	comf	___awdiv@quotient,f
  3718  09C3  09A3               	comf	___awdiv@quotient+1,f
  3719  09C4  0AA2               	incf	___awdiv@quotient,f
  3720  09C5  1903               	skipnz
  3721  09C6  0AA3               	incf	___awdiv@quotient+1,f
  3722  09C7                     l2462:
  3723  09C7  0823               	movf	___awdiv@quotient+1,w
  3724  09C8  00F8               	movwf	?___awdiv+1
  3725  09C9  0822               	movf	___awdiv@quotient,w
  3726  09CA  00F7               	movwf	?___awdiv
  3727  09CB                     l515:
  3728  09CB  0008               	return
  3729  09CC                     __end_of___awdiv:
  3730                           
  3731                           	psect	text15
  3732  0DCC                     __ptext15:	
  3733 ;; *************** function _controlarValores *****************
  3734 ;; Defined at:
  3735 ;;		line 42 in file "main.c"
  3736 ;; Parameters:    Size  Location     Type
  3737 ;;		None
  3738 ;; Auto vars:     Size  Location     Type
  3739 ;;		None
  3740 ;; Return value:  Size  Location     Type
  3741 ;;                  1    wreg      void 
  3742 ;; Registers used:
  3743 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3744 ;; Tracked objects:
  3745 ;;		On entry : 0/0
  3746 ;;		On exit  : 0/0
  3747 ;;		Unchanged: 0/0
  3748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3749 ;;      Params:         0       0       0       0       0
  3750 ;;      Locals:         0       0       0       0       0
  3751 ;;      Temps:          1       0       0       0       0
  3752 ;;      Totals:         1       0       0       0       0
  3753 ;;Total ram usage:        1 bytes
  3754 ;; Hardware stack levels used: 1
  3755 ;; Hardware stack levels required when called: 1
  3756 ;; This function calls:
  3757 ;;		_controleMaximoMinimo
  3758 ;; This function is called by:
  3759 ;;		_main
  3760 ;; This function uses a non-reentrant model
  3761 ;;
  3762                           
  3763                           
  3764                           ;psect for function _controlarValores
  3765  0DCC                     _controlarValores:
  3766  0DCC                     l2504:	
  3767                           ;incstack = 0
  3768                           ; Regs used in _controlarValores: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3769                           
  3770                           
  3771                           ;main.c: 43:     static char S1Anterior;;main.c: 44:     static char S1Atual;;main.c: 45
      +                          :     static char S2Anterior;;main.c: 46:     static char S2Atual;;main.c: 47:     stati
      +                          c char S3Anterior;;main.c: 48:     static char S3Atual;;main.c: 49:     static char S4An
      +                          terior;;main.c: 50:     static char S4Atual;;main.c: 52:     S1Atual = RB0;
  3772  0DCC  3000               	movlw	0
  3773  0DCD  1283               	bcf	3,5	;RP0=0, select bank0
  3774  0DCE  1303               	bcf	3,6	;RP1=0, select bank0
  3775  0DCF  1806               	btfsc	6,0	;volatile
  3776  0DD0  3001               	movlw	1
  3777  0DD1  1683               	bsf	3,5	;RP0=1, select bank1
  3778  0DD2  1303               	bcf	3,6	;RP1=0, select bank1
  3779  0DD3  00C4               	movwf	controlarValores@S1Atual^(0+128)
  3780  0DD4                     l2506:
  3781                           
  3782                           ;main.c: 54:     if((S1Atual)&&(!S1Anterior)){
  3783  0DD4  0844               	movf	controlarValores@S1Atual^(0+128),w
  3784  0DD5  1903               	btfsc	3,2
  3785  0DD6  2DD8               	goto	u3511
  3786  0DD7  2DD9               	goto	u3510
  3787  0DD8                     u3511:
  3788  0DD8  2E11               	goto	l105
  3789  0DD9                     u3510:
  3790  0DD9                     l2508:
  3791  0DD9  0845               	movf	controlarValores@S1Anterior^(0+128),w
  3792  0DDA  1D03               	btfss	3,2
  3793  0DDB  2DDD               	goto	u3521
  3794  0DDC  2DDE               	goto	u3520
  3795  0DDD                     u3521:
  3796  0DDD  2E11               	goto	l105
  3797  0DDE                     u3520:
  3798  0DDE                     l2510:
  3799                           
  3800                           ;main.c: 55:         if (menu == 1){
  3801  0DDE  0338               	decf	_menu^(0+128),w
  3802  0DDF  0439               	iorwf	(_menu+1)^(0+128),w
  3803  0DE0  1D03               	btfss	3,2
  3804  0DE1  2DE3               	goto	u3531
  3805  0DE2  2DE4               	goto	u3530
  3806  0DE3                     u3531:
  3807  0DE3  2DEA               	goto	l2514
  3808  0DE4                     u3530:
  3809  0DE4                     l2512:
  3810                           
  3811                           ;main.c: 56:             setPoint += 100;
  3812  0DE4  3064               	movlw	100
  3813  0DE5  07D6               	addwf	_setPoint^(0+128),f
  3814  0DE6  1803               	skipnc
  3815  0DE7  0AD7               	incf	(_setPoint+1)^(0+128),f
  3816  0DE8  3000               	movlw	0
  3817  0DE9  07D7               	addwf	(_setPoint+1)^(0+128),f
  3818  0DEA                     l2514:
  3819                           
  3820                           ;main.c: 59:         if (menu == 2){
  3821  0DEA  3002               	movlw	2
  3822  0DEB  0638               	xorwf	_menu^(0+128),w
  3823  0DEC  0439               	iorwf	(_menu+1)^(0+128),w
  3824  0DED  1D03               	btfss	3,2
  3825  0DEE  2DF0               	goto	u3541
  3826  0DEF  2DF1               	goto	u3540
  3827  0DF0                     u3541:
  3828  0DF0  2DF7               	goto	l2518
  3829  0DF1                     u3540:
  3830  0DF1                     l2516:
  3831                           
  3832                           ;main.c: 60:             kp += 5;
  3833  0DF1  3005               	movlw	5
  3834  0DF2  07D4               	addwf	_kp^(0+128),f
  3835  0DF3  1803               	skipnc
  3836  0DF4  0AD5               	incf	(_kp+1)^(0+128),f
  3837  0DF5  3000               	movlw	0
  3838  0DF6  07D5               	addwf	(_kp+1)^(0+128),f
  3839  0DF7                     l2518:
  3840                           
  3841                           ;main.c: 63:         if (menu == 3){
  3842  0DF7  3003               	movlw	3
  3843  0DF8  0638               	xorwf	_menu^(0+128),w
  3844  0DF9  0439               	iorwf	(_menu+1)^(0+128),w
  3845  0DFA  1D03               	btfss	3,2
  3846  0DFB  2DFD               	goto	u3551
  3847  0DFC  2DFE               	goto	u3550
  3848  0DFD                     u3551:
  3849  0DFD  2E04               	goto	l2522
  3850  0DFE                     u3550:
  3851  0DFE                     l2520:
  3852                           
  3853                           ;main.c: 64:             ki += 1;
  3854  0DFE  3001               	movlw	1
  3855  0DFF  07D2               	addwf	_ki^(0+128),f
  3856  0E00  1803               	skipnc
  3857  0E01  0AD3               	incf	(_ki+1)^(0+128),f
  3858  0E02  3000               	movlw	0
  3859  0E03  07D3               	addwf	(_ki+1)^(0+128),f
  3860  0E04                     l2522:
  3861                           
  3862                           ;main.c: 67:         if (menu == 4){
  3863  0E04  3004               	movlw	4
  3864  0E05  0638               	xorwf	_menu^(0+128),w
  3865  0E06  0439               	iorwf	(_menu+1)^(0+128),w
  3866  0E07  1D03               	btfss	3,2
  3867  0E08  2E0A               	goto	u3561
  3868  0E09  2E0B               	goto	u3560
  3869  0E0A                     u3561:
  3870  0E0A  2E11               	goto	l105
  3871  0E0B                     u3560:
  3872  0E0B                     l2524:
  3873                           
  3874                           ;main.c: 68:             kd += 1;
  3875  0E0B  3001               	movlw	1
  3876  0E0C  07B0               	addwf	_kd^(0+128),f
  3877  0E0D  1803               	skipnc
  3878  0E0E  0AB1               	incf	(_kd+1)^(0+128),f
  3879  0E0F  3000               	movlw	0
  3880  0E10  07B1               	addwf	(_kd+1)^(0+128),f
  3881  0E11                     l105:	
  3882                           ;main.c: 70:     }
  3883                           
  3884                           
  3885                           ;main.c: 72:     S1Anterior = S1Atual;
  3886  0E11  0844               	movf	controlarValores@S1Atual^(0+128),w
  3887  0E12  00F2               	movwf	??_controlarValores
  3888  0E13  0872               	movf	??_controlarValores,w
  3889  0E14  00C5               	movwf	controlarValores@S1Anterior^(0+128)
  3890  0E15                     l2526:
  3891                           
  3892                           ;main.c: 73:     S2Atual = RB1;
  3893  0E15  3000               	movlw	0
  3894  0E16  1283               	bcf	3,5	;RP0=0, select bank0
  3895  0E17  1303               	bcf	3,6	;RP1=0, select bank0
  3896  0E18  1886               	btfsc	6,1	;volatile
  3897  0E19  3001               	movlw	1
  3898  0E1A  1683               	bsf	3,5	;RP0=1, select bank1
  3899  0E1B  1303               	bcf	3,6	;RP1=0, select bank1
  3900  0E1C  00C2               	movwf	controlarValores@S2Atual^(0+128)
  3901  0E1D                     l2528:
  3902                           
  3903                           ;main.c: 75:     if((S2Atual)&&(!S2Anterior)){
  3904  0E1D  0842               	movf	controlarValores@S2Atual^(0+128),w
  3905  0E1E  1903               	btfsc	3,2
  3906  0E1F  2E21               	goto	u3571
  3907  0E20  2E22               	goto	u3570
  3908  0E21                     u3571:
  3909  0E21  2E5A               	goto	l110
  3910  0E22                     u3570:
  3911  0E22                     l2530:
  3912  0E22  0843               	movf	controlarValores@S2Anterior^(0+128),w
  3913  0E23  1D03               	btfss	3,2
  3914  0E24  2E26               	goto	u3581
  3915  0E25  2E27               	goto	u3580
  3916  0E26                     u3581:
  3917  0E26  2E5A               	goto	l110
  3918  0E27                     u3580:
  3919  0E27                     l2532:
  3920                           
  3921                           ;main.c: 76:         if (menu == 1){
  3922  0E27  0338               	decf	_menu^(0+128),w
  3923  0E28  0439               	iorwf	(_menu+1)^(0+128),w
  3924  0E29  1D03               	btfss	3,2
  3925  0E2A  2E2C               	goto	u3591
  3926  0E2B  2E2D               	goto	u3590
  3927  0E2C                     u3591:
  3928  0E2C  2E33               	goto	l2536
  3929  0E2D                     u3590:
  3930  0E2D                     l2534:
  3931                           
  3932                           ;main.c: 77:             setPoint -= 100;
  3933  0E2D  309C               	movlw	156
  3934  0E2E  07D6               	addwf	_setPoint^(0+128),f
  3935  0E2F  1803               	skipnc
  3936  0E30  0AD7               	incf	(_setPoint+1)^(0+128),f
  3937  0E31  30FF               	movlw	255
  3938  0E32  07D7               	addwf	(_setPoint+1)^(0+128),f
  3939  0E33                     l2536:
  3940                           
  3941                           ;main.c: 80:         if (menu == 2){
  3942  0E33  3002               	movlw	2
  3943  0E34  0638               	xorwf	_menu^(0+128),w
  3944  0E35  0439               	iorwf	(_menu+1)^(0+128),w
  3945  0E36  1D03               	btfss	3,2
  3946  0E37  2E39               	goto	u3601
  3947  0E38  2E3A               	goto	u3600
  3948  0E39                     u3601:
  3949  0E39  2E40               	goto	l2540
  3950  0E3A                     u3600:
  3951  0E3A                     l2538:
  3952                           
  3953                           ;main.c: 81:             kp -= 5;
  3954  0E3A  30FB               	movlw	251
  3955  0E3B  07D4               	addwf	_kp^(0+128),f
  3956  0E3C  1803               	skipnc
  3957  0E3D  0AD5               	incf	(_kp+1)^(0+128),f
  3958  0E3E  30FF               	movlw	255
  3959  0E3F  07D5               	addwf	(_kp+1)^(0+128),f
  3960  0E40                     l2540:
  3961                           
  3962                           ;main.c: 84:         if (menu == 3){
  3963  0E40  3003               	movlw	3
  3964  0E41  0638               	xorwf	_menu^(0+128),w
  3965  0E42  0439               	iorwf	(_menu+1)^(0+128),w
  3966  0E43  1D03               	btfss	3,2
  3967  0E44  2E46               	goto	u3611
  3968  0E45  2E47               	goto	u3610
  3969  0E46                     u3611:
  3970  0E46  2E4D               	goto	l2544
  3971  0E47                     u3610:
  3972  0E47                     l2542:
  3973                           
  3974                           ;main.c: 85:             ki -= 1;
  3975  0E47  30FF               	movlw	255
  3976  0E48  07D2               	addwf	_ki^(0+128),f
  3977  0E49  1803               	skipnc
  3978  0E4A  0AD3               	incf	(_ki+1)^(0+128),f
  3979  0E4B  30FF               	movlw	255
  3980  0E4C  07D3               	addwf	(_ki+1)^(0+128),f
  3981  0E4D                     l2544:
  3982                           
  3983                           ;main.c: 88:         if (menu == 4){
  3984  0E4D  3004               	movlw	4
  3985  0E4E  0638               	xorwf	_menu^(0+128),w
  3986  0E4F  0439               	iorwf	(_menu+1)^(0+128),w
  3987  0E50  1D03               	btfss	3,2
  3988  0E51  2E53               	goto	u3621
  3989  0E52  2E54               	goto	u3620
  3990  0E53                     u3621:
  3991  0E53  2E5A               	goto	l110
  3992  0E54                     u3620:
  3993  0E54                     l2546:
  3994                           
  3995                           ;main.c: 89:             kd -= 1;
  3996  0E54  30FF               	movlw	255
  3997  0E55  07B0               	addwf	_kd^(0+128),f
  3998  0E56  1803               	skipnc
  3999  0E57  0AB1               	incf	(_kd+1)^(0+128),f
  4000  0E58  30FF               	movlw	255
  4001  0E59  07B1               	addwf	(_kd+1)^(0+128),f
  4002  0E5A                     l110:	
  4003                           ;main.c: 91:     }
  4004                           
  4005                           
  4006                           ;main.c: 93:     S2Anterior = S2Atual;
  4007  0E5A  0842               	movf	controlarValores@S2Atual^(0+128),w
  4008  0E5B  00F2               	movwf	??_controlarValores
  4009  0E5C  0872               	movf	??_controlarValores,w
  4010  0E5D  00C3               	movwf	controlarValores@S2Anterior^(0+128)
  4011  0E5E                     l2548:
  4012                           
  4013                           ;main.c: 94:     S3Atual = RB2;
  4014  0E5E  3000               	movlw	0
  4015  0E5F  1283               	bcf	3,5	;RP0=0, select bank0
  4016  0E60  1303               	bcf	3,6	;RP1=0, select bank0
  4017  0E61  1906               	btfsc	6,2	;volatile
  4018  0E62  3001               	movlw	1
  4019  0E63  1683               	bsf	3,5	;RP0=1, select bank1
  4020  0E64  1303               	bcf	3,6	;RP1=0, select bank1
  4021  0E65  00C0               	movwf	controlarValores@S3Atual^(0+128)
  4022  0E66                     l2550:
  4023                           
  4024                           ;main.c: 96:     if((S3Atual)&&(!S3Anterior)){
  4025  0E66  0840               	movf	controlarValores@S3Atual^(0+128),w
  4026  0E67  1903               	btfsc	3,2
  4027  0E68  2E6A               	goto	u3631
  4028  0E69  2E6B               	goto	u3630
  4029  0E6A                     u3631:
  4030  0E6A  2E74               	goto	l115
  4031  0E6B                     u3630:
  4032  0E6B                     l2552:
  4033  0E6B  0841               	movf	controlarValores@S3Anterior^(0+128),w
  4034  0E6C  1D03               	btfss	3,2
  4035  0E6D  2E6F               	goto	u3641
  4036  0E6E  2E70               	goto	u3640
  4037  0E6F                     u3641:
  4038  0E6F  2E74               	goto	l115
  4039  0E70                     u3640:
  4040  0E70                     l2554:
  4041                           
  4042                           ;main.c: 97:         setPointCalculo = setPoint;
  4043  0E70  0857               	movf	(_setPoint+1)^(0+128),w
  4044  0E71  00B7               	movwf	(_setPointCalculo+1)^(0+128)
  4045  0E72  0856               	movf	_setPoint^(0+128),w
  4046  0E73  00B6               	movwf	_setPointCalculo^(0+128)
  4047  0E74                     l115:	
  4048                           ;main.c: 98:     }
  4049                           
  4050                           
  4051                           ;main.c: 100:     S3Anterior = S3Atual;
  4052  0E74  0840               	movf	controlarValores@S3Atual^(0+128),w
  4053  0E75  00F2               	movwf	??_controlarValores
  4054  0E76  0872               	movf	??_controlarValores,w
  4055  0E77  00C1               	movwf	controlarValores@S3Anterior^(0+128)
  4056  0E78                     l2556:
  4057                           
  4058                           ;main.c: 102:     S4Atual = RB3;
  4059  0E78  3000               	movlw	0
  4060  0E79  1283               	bcf	3,5	;RP0=0, select bank0
  4061  0E7A  1303               	bcf	3,6	;RP1=0, select bank0
  4062  0E7B  1986               	btfsc	6,3	;volatile
  4063  0E7C  3001               	movlw	1
  4064  0E7D  1683               	bsf	3,5	;RP0=1, select bank1
  4065  0E7E  1303               	bcf	3,6	;RP1=0, select bank1
  4066  0E7F  00BE               	movwf	controlarValores@S4Atual^(0+128)
  4067  0E80                     l2558:
  4068                           
  4069                           ;main.c: 103:     if((S4Atual)&&(!S4Anterior)){
  4070  0E80  083E               	movf	controlarValores@S4Atual^(0+128),w
  4071  0E81  1903               	btfsc	3,2
  4072  0E82  2E84               	goto	u3651
  4073  0E83  2E85               	goto	u3650
  4074  0E84                     u3651:
  4075  0E84  2E9B               	goto	l116
  4076  0E85                     u3650:
  4077  0E85                     l2560:
  4078  0E85  083F               	movf	controlarValores@S4Anterior^(0+128),w
  4079  0E86  1D03               	btfss	3,2
  4080  0E87  2E89               	goto	u3661
  4081  0E88  2E8A               	goto	u3660
  4082  0E89                     u3661:
  4083  0E89  2E9B               	goto	l116
  4084  0E8A                     u3660:
  4085  0E8A                     l2562:
  4086                           
  4087                           ;main.c: 104:         menu += 1;
  4088  0E8A  3001               	movlw	1
  4089  0E8B  07B8               	addwf	_menu^(0+128),f
  4090  0E8C  1803               	skipnc
  4091  0E8D  0AB9               	incf	(_menu+1)^(0+128),f
  4092  0E8E  3000               	movlw	0
  4093  0E8F  07B9               	addwf	(_menu+1)^(0+128),f
  4094  0E90                     l2564:
  4095                           
  4096                           ;main.c: 106:         if (menu == 5){
  4097  0E90  3005               	movlw	5
  4098  0E91  0638               	xorwf	_menu^(0+128),w
  4099  0E92  0439               	iorwf	(_menu+1)^(0+128),w
  4100  0E93  1D03               	btfss	3,2
  4101  0E94  2E96               	goto	u3671
  4102  0E95  2E97               	goto	u3670
  4103  0E96                     u3671:
  4104  0E96  2E9B               	goto	l116
  4105  0E97                     u3670:
  4106  0E97                     l2566:
  4107                           
  4108                           ;main.c: 107:             menu = 1;
  4109  0E97  3001               	movlw	1
  4110  0E98  00B8               	movwf	_menu^(0+128)
  4111  0E99  3000               	movlw	0
  4112  0E9A  00B9               	movwf	(_menu^(0+128)+1)
  4113  0E9B                     l116:	
  4114                           ;main.c: 109:     }
  4115                           
  4116                           
  4117                           ;main.c: 110:     S4Anterior = S4Atual;
  4118  0E9B  083E               	movf	controlarValores@S4Atual^(0+128),w
  4119  0E9C  00F2               	movwf	??_controlarValores
  4120  0E9D  0872               	movf	??_controlarValores,w
  4121  0E9E  00BF               	movwf	controlarValores@S4Anterior^(0+128)
  4122  0E9F                     l2568:
  4123                           
  4124                           ;main.c: 112:     kp = controleMaximoMinimo(kp);
  4125  0E9F  0855               	movf	(_kp+1)^(0+128),w
  4126  0EA0  00F1               	movwf	controleMaximoMinimo@valor+1
  4127  0EA1  0854               	movf	_kp^(0+128),w
  4128  0EA2  00F0               	movwf	controleMaximoMinimo@valor
  4129  0EA3  160A  118A  2703  120A  158A  	fcall	_controleMaximoMinimo
  4130  0EA8  0871               	movf	?_controleMaximoMinimo+1,w
  4131  0EA9  1683               	bsf	3,5	;RP0=1, select bank1
  4132  0EAA  1303               	bcf	3,6	;RP1=0, select bank1
  4133  0EAB  00D5               	movwf	(_kp+1)^(0+128)
  4134  0EAC  0870               	movf	?_controleMaximoMinimo,w
  4135  0EAD  00D4               	movwf	_kp^(0+128)
  4136  0EAE                     l2570:
  4137                           
  4138                           ;main.c: 113:     ki = controleMaximoMinimo(ki);
  4139  0EAE  0853               	movf	(_ki+1)^(0+128),w
  4140  0EAF  00F1               	movwf	controleMaximoMinimo@valor+1
  4141  0EB0  0852               	movf	_ki^(0+128),w
  4142  0EB1  00F0               	movwf	controleMaximoMinimo@valor
  4143  0EB2  160A  118A  2703  120A  158A  	fcall	_controleMaximoMinimo
  4144  0EB7  0871               	movf	?_controleMaximoMinimo+1,w
  4145  0EB8  1683               	bsf	3,5	;RP0=1, select bank1
  4146  0EB9  1303               	bcf	3,6	;RP1=0, select bank1
  4147  0EBA  00D3               	movwf	(_ki+1)^(0+128)
  4148  0EBB  0870               	movf	?_controleMaximoMinimo,w
  4149  0EBC  00D2               	movwf	_ki^(0+128)
  4150  0EBD                     l2572:
  4151                           
  4152                           ;main.c: 114:     kd = controleMaximoMinimo(kd);
  4153  0EBD  0831               	movf	(_kd+1)^(0+128),w
  4154  0EBE  00F1               	movwf	controleMaximoMinimo@valor+1
  4155  0EBF  0830               	movf	_kd^(0+128),w
  4156  0EC0  00F0               	movwf	controleMaximoMinimo@valor
  4157  0EC1  160A  118A  2703  120A  158A  	fcall	_controleMaximoMinimo
  4158  0EC6  0871               	movf	?_controleMaximoMinimo+1,w
  4159  0EC7  1683               	bsf	3,5	;RP0=1, select bank1
  4160  0EC8  1303               	bcf	3,6	;RP1=0, select bank1
  4161  0EC9  00B1               	movwf	(_kd+1)^(0+128)
  4162  0ECA  0870               	movf	?_controleMaximoMinimo,w
  4163  0ECB  00B0               	movwf	_kd^(0+128)
  4164  0ECC                     l118:
  4165  0ECC  0008               	return
  4166  0ECD                     __end_of_controlarValores:
  4167                           
  4168                           	psect	text16
  4169  1767                     __ptext16:	
  4170 ;; *************** function _controlarCooler *****************
  4171 ;; Defined at:
  4172 ;;		line 203 in file "main.c"
  4173 ;; Parameters:    Size  Location     Type
  4174 ;;		None
  4175 ;; Auto vars:     Size  Location     Type
  4176 ;;  cooler          2    7[BANK1 ] int 
  4177 ;; Return value:  Size  Location     Type
  4178 ;;                  1    wreg      void 
  4179 ;; Registers used:
  4180 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4181 ;; Tracked objects:
  4182 ;;		On entry : 0/0
  4183 ;;		On exit  : 0/0
  4184 ;;		Unchanged: 0/0
  4185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4186 ;;      Params:         0       0       0       0       0
  4187 ;;      Locals:         0       0       2       0       0
  4188 ;;      Temps:          0       0       0       0       0
  4189 ;;      Totals:         0       0       2       0       0
  4190 ;;Total ram usage:        2 bytes
  4191 ;; Hardware stack levels used: 1
  4192 ;; Hardware stack levels required when called: 3
  4193 ;; This function calls:
  4194 ;;		_ADC_Read
  4195 ;;		_PWM2_Duty
  4196 ;;		_controleMaximoMinimo
  4197 ;; This function is called by:
  4198 ;;		_main
  4199 ;; This function uses a non-reentrant model
  4200 ;;
  4201                           
  4202                           
  4203                           ;psect for function _controlarCooler
  4204  1767                     _controlarCooler:
  4205  1767                     l2644:	
  4206                           ;incstack = 0
  4207                           ; Regs used in _controlarCooler: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4208                           
  4209                           
  4210                           ;main.c: 204:     int cooler = (unsigned int)ADC_Read(1);
  4211  1767  3001               	movlw	1
  4212  1768  160A  118A  2796  160A  118A  	fcall	_ADC_Read
  4213  176D  0871               	movf	?_ADC_Read+1,w
  4214  176E  1683               	bsf	3,5	;RP0=1, select bank1
  4215  176F  1303               	bcf	3,6	;RP1=0, select bank1
  4216  1770  00CE               	movwf	(controlarCooler@cooler+1)^(0+128)
  4217  1771  0870               	movf	?_ADC_Read,w
  4218  1772  00CD               	movwf	controlarCooler@cooler^(0+128)
  4219  1773                     l2646:
  4220                           
  4221                           ;main.c: 205:     cooler = controleMaximoMinimo(cooler);
  4222  1773  084E               	movf	(controlarCooler@cooler+1)^(0+128),w
  4223  1774  00F1               	movwf	controleMaximoMinimo@valor+1
  4224  1775  084D               	movf	controlarCooler@cooler^(0+128),w
  4225  1776  00F0               	movwf	controleMaximoMinimo@valor
  4226  1777  160A  118A  2703  160A  118A  	fcall	_controleMaximoMinimo
  4227  177C  0871               	movf	?_controleMaximoMinimo+1,w
  4228  177D  1683               	bsf	3,5	;RP0=1, select bank1
  4229  177E  1303               	bcf	3,6	;RP1=0, select bank1
  4230  177F  00CE               	movwf	(controlarCooler@cooler+1)^(0+128)
  4231  1780  0870               	movf	?_controleMaximoMinimo,w
  4232  1781  00CD               	movwf	controlarCooler@cooler^(0+128)
  4233  1782                     l2648:
  4234                           
  4235                           ;main.c: 206:     PWM2_Duty(cooler, 4000);
  4236  1782  084E               	movf	(controlarCooler@cooler+1)^(0+128),w
  4237  1783  1283               	bcf	3,5	;RP0=0, select bank0
  4238  1784  1303               	bcf	3,6	;RP1=0, select bank0
  4239  1785  00ED               	movwf	PWM2_Duty@duty+1
  4240  1786  1683               	bsf	3,5	;RP0=1, select bank1
  4241  1787  1303               	bcf	3,6	;RP1=0, select bank1
  4242  1788  084D               	movf	controlarCooler@cooler^(0+128),w
  4243  1789  1283               	bcf	3,5	;RP0=0, select bank0
  4244  178A  1303               	bcf	3,6	;RP1=0, select bank0
  4245  178B  00EC               	movwf	PWM2_Duty@duty
  4246  178C  30A0               	movlw	160
  4247  178D  00EE               	movwf	PWM2_Duty@freq
  4248  178E  300F               	movlw	15
  4249  178F  00EF               	movwf	PWM2_Duty@freq+1
  4250  1790  120A  158A  2378  160A  118A  	fcall	_PWM2_Duty
  4251  1795                     l140:
  4252  1795  0008               	return
  4253  1796                     __end_of_controlarCooler:
  4254                           
  4255                           	psect	text17
  4256  1703                     __ptext17:	
  4257 ;; *************** function _controleMaximoMinimo *****************
  4258 ;; Defined at:
  4259 ;;		line 117 in file "main.c"
  4260 ;; Parameters:    Size  Location     Type
  4261 ;;  valor           2    0[COMMON] int 
  4262 ;; Auto vars:     Size  Location     Type
  4263 ;;		None
  4264 ;; Return value:  Size  Location     Type
  4265 ;;                  2    0[COMMON] int 
  4266 ;; Registers used:
  4267 ;;		wreg, status,2, btemp+1
  4268 ;; Tracked objects:
  4269 ;;		On entry : 0/0
  4270 ;;		On exit  : 0/0
  4271 ;;		Unchanged: 0/0
  4272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4273 ;;      Params:         2       0       0       0       0
  4274 ;;      Locals:         0       0       0       0       0
  4275 ;;      Temps:          0       0       0       0       0
  4276 ;;      Totals:         2       0       0       0       0
  4277 ;;Total ram usage:        2 bytes
  4278 ;; Hardware stack levels used: 1
  4279 ;; This function calls:
  4280 ;;		Nothing
  4281 ;; This function is called by:
  4282 ;;		_controlarValores
  4283 ;;		_realizarCalculo
  4284 ;;		_controlarCooler
  4285 ;; This function uses a non-reentrant model
  4286 ;;
  4287                           
  4288                           
  4289                           ;psect for function _controleMaximoMinimo
  4290  1703                     _controleMaximoMinimo:
  4291  1703                     l2276:	
  4292                           ;incstack = 0
  4293                           ; Regs used in _controleMaximoMinimo: [wreg+status,2+btemp+1]
  4294                           
  4295                           
  4296                           ;main.c: 118:     if (valor < 0){
  4297  1703  1FF1               	btfss	controleMaximoMinimo@valor+1,7
  4298  1704  2F06               	goto	u3071
  4299  1705  2F07               	goto	u3070
  4300  1706                     u3071:
  4301  1706  2F09               	goto	l2280
  4302  1707                     u3070:
  4303  1707                     l2278:
  4304                           
  4305                           ;main.c: 119:         valor = 0;
  4306  1707  01F0               	clrf	controleMaximoMinimo@valor
  4307  1708  01F1               	clrf	controleMaximoMinimo@valor+1
  4308  1709                     l2280:
  4309                           
  4310                           ;main.c: 122:     if (valor > 1023){
  4311  1709  0871               	movf	controleMaximoMinimo@valor+1,w
  4312  170A  3A80               	xorlw	128
  4313  170B  00FF               	movwf	btemp+1
  4314  170C  3084               	movlw	132
  4315  170D  027F               	subwf	btemp+1,w
  4316  170E  1D03               	skipz
  4317  170F  2F12               	goto	u3085
  4318  1710  3000               	movlw	0
  4319  1711  0270               	subwf	controleMaximoMinimo@valor,w
  4320  1712                     u3085:
  4321  1712  1C03               	skipc
  4322  1713  2F15               	goto	u3081
  4323  1714  2F16               	goto	u3080
  4324  1715                     u3081:
  4325  1715  2F1A               	goto	l2284
  4326  1716                     u3080:
  4327  1716                     l2282:
  4328                           
  4329                           ;main.c: 123:         valor = 1023;
  4330  1716  30FF               	movlw	255
  4331  1717  00F0               	movwf	controleMaximoMinimo@valor
  4332  1718  3003               	movlw	3
  4333  1719  00F1               	movwf	controleMaximoMinimo@valor+1
  4334  171A                     l2284:
  4335  171A                     l123:	
  4336                           ;main.c: 126:     return valor;
  4337                           
  4338  171A  0008               	return
  4339  171B                     __end_of_controleMaximoMinimo:
  4340                           
  4341                           	psect	text18
  4342  0B78                     __ptext18:	
  4343 ;; *************** function _PWM2_Duty *****************
  4344 ;; Defined at:
  4345 ;;		line 29 in file "PWM.c"
  4346 ;; Parameters:    Size  Location     Type
  4347 ;;  duty            2   76[BANK0 ] unsigned int 
  4348 ;;  freq            2   78[BANK0 ] unsigned int 
  4349 ;; Auto vars:     Size  Location     Type
  4350 ;;		None
  4351 ;; Return value:  Size  Location     Type
  4352 ;;                  1    wreg      void 
  4353 ;; Registers used:
  4354 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4355 ;; Tracked objects:
  4356 ;;		On entry : 0/0
  4357 ;;		On exit  : 0/0
  4358 ;;		Unchanged: 0/0
  4359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4360 ;;      Params:         0       4       0       0       0
  4361 ;;      Locals:         0       0       0       0       0
  4362 ;;      Temps:          0       0       2       0       0
  4363 ;;      Totals:         0       4       2       0       0
  4364 ;;Total ram usage:        6 bytes
  4365 ;; Hardware stack levels used: 1
  4366 ;; Hardware stack levels required when called: 2
  4367 ;; This function calls:
  4368 ;;		_PWM_Init
  4369 ;;		___aldiv
  4370 ;;		___fldiv
  4371 ;;		___flmul
  4372 ;;		___fltol
  4373 ;;		___xxtofl
  4374 ;; This function is called by:
  4375 ;;		_controlarCooler
  4376 ;; This function uses a non-reentrant model
  4377 ;;
  4378                           
  4379                           
  4380                           ;psect for function _PWM2_Duty
  4381  0B78                     _PWM2_Duty:
  4382  0B78                     l2396:	
  4383                           ;incstack = 0
  4384                           ; Regs used in _PWM2_Duty: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4385                           
  4386                           
  4387                           ;PWM.c: 29: void PWM2_Duty(unsigned int duty, unsigned int freq);PWM.c: 30: {;PWM.c: 31:
      +                             PWM_Init(freq);
  4388  0B78  1283               	bcf	3,5	;RP0=0, select bank0
  4389  0B79  1303               	bcf	3,6	;RP1=0, select bank0
  4390  0B7A  086E               	movf	PWM2_Duty@freq,w
  4391  0B7B  00A6               	movwf	PWM_Init@freq
  4392  0B7C  086F               	movf	PWM2_Duty@freq+1,w
  4393  0B7D  00A7               	movwf	PWM_Init@freq+1
  4394  0B7E  01A8               	clrf	PWM_Init@freq+2
  4395  0B7F  01A9               	clrf	PWM_Init@freq+3
  4396  0B80  120A  158A  2055  120A  158A  	fcall	_PWM_Init
  4397  0B85                     l2398:
  4398                           
  4399                           ;PWM.c: 32:   if(duty<1024)
  4400  0B85  3004               	movlw	4
  4401  0B86  1283               	bcf	3,5	;RP0=0, select bank0
  4402  0B87  1303               	bcf	3,6	;RP1=0, select bank0
  4403  0B88  026D               	subwf	PWM2_Duty@duty+1,w
  4404  0B89  3000               	movlw	0
  4405  0B8A  1903               	skipnz
  4406  0B8B  026C               	subwf	PWM2_Duty@duty,w
  4407  0B8C  1803               	skipnc
  4408  0B8D  2B8F               	goto	u3241
  4409  0B8E  2B90               	goto	u3240
  4410  0B8F                     u3241:
  4411  0B8F  2C2D               	goto	l192
  4412  0B90                     u3240:
  4413  0B90                     l2400:
  4414                           
  4415                           ;PWM.c: 33:   {;PWM.c: 34:     duty = ((float)duty/1023.0)*(4000000/(freq*4));
  4416  0B90  086C               	movf	PWM2_Duty@duty,w
  4417  0B91  00A6               	movwf	___xxtofl@val
  4418  0B92  086D               	movf	PWM2_Duty@duty+1,w
  4419  0B93  00A7               	movwf	___xxtofl@val+1
  4420  0B94  01A8               	clrf	___xxtofl@val+2
  4421  0B95  01A9               	clrf	___xxtofl@val+3
  4422  0B96  3000               	movlw	0
  4423  0B97  120A  118A  202E  120A  158A  	fcall	___xxtofl
  4424  0B9C  1283               	bcf	3,5	;RP0=0, select bank0
  4425  0B9D  1303               	bcf	3,6	;RP1=0, select bank0
  4426  0B9E  0829               	movf	?___xxtofl+3,w
  4427  0B9F  00BB               	movwf	___fldiv@b+3
  4428  0BA0  0828               	movf	?___xxtofl+2,w
  4429  0BA1  00BA               	movwf	___fldiv@b+2
  4430  0BA2  0827               	movf	?___xxtofl+1,w
  4431  0BA3  00B9               	movwf	___fldiv@b+1
  4432  0BA4  0826               	movf	?___xxtofl,w
  4433  0BA5  00B8               	movwf	___fldiv@b
  4434  0BA6  3044               	movlw	68
  4435  0BA7  00B7               	movwf	___fldiv@a+3
  4436  0BA8  307F               	movlw	127
  4437  0BA9  00B6               	movwf	___fldiv@a+2
  4438  0BAA  30C0               	movlw	192
  4439  0BAB  00B5               	movwf	___fldiv@a+1
  4440  0BAC  3000               	movlw	0
  4441  0BAD  00B4               	movwf	___fldiv@a
  4442  0BAE  120A  118A  2286  120A  158A  	fcall	___fldiv
  4443  0BB3  1283               	bcf	3,5	;RP0=0, select bank0
  4444  0BB4  1303               	bcf	3,6	;RP1=0, select bank0
  4445  0BB5  0837               	movf	?___fldiv+3,w
  4446  0BB6  00D5               	movwf	___flmul@a+3
  4447  0BB7  0836               	movf	?___fldiv+2,w
  4448  0BB8  00D4               	movwf	___flmul@a+2
  4449  0BB9  0835               	movf	?___fldiv+1,w
  4450  0BBA  00D3               	movwf	___flmul@a+1
  4451  0BBB  0834               	movf	?___fldiv,w
  4452  0BBC  00D2               	movwf	___flmul@a
  4453  0BBD  3000               	movlw	0
  4454  0BBE  00F7               	movwf	___aldiv@dividend+3
  4455  0BBF  303D               	movlw	61
  4456  0BC0  00F6               	movwf	___aldiv@dividend+2
  4457  0BC1  3009               	movlw	9
  4458  0BC2  00F5               	movwf	___aldiv@dividend+1
  4459  0BC3  3000               	movlw	0
  4460  0BC4  00F4               	movwf	___aldiv@dividend
  4461  0BC5  086F               	movf	PWM2_Duty@freq+1,w
  4462  0BC6  1683               	bsf	3,5	;RP0=1, select bank1
  4463  0BC7  1303               	bcf	3,6	;RP1=0, select bank1
  4464  0BC8  00CC               	movwf	(??_PWM2_Duty^(0+128)+1)
  4465  0BC9  1283               	bcf	3,5	;RP0=0, select bank0
  4466  0BCA  1303               	bcf	3,6	;RP1=0, select bank0
  4467  0BCB  086E               	movf	PWM2_Duty@freq,w
  4468  0BCC  1683               	bsf	3,5	;RP0=1, select bank1
  4469  0BCD  1303               	bcf	3,6	;RP1=0, select bank1
  4470  0BCE  00CB               	movwf	??_PWM2_Duty^(0+128)
  4471  0BCF  1003               	clrc
  4472  0BD0  0DCB               	rlf	??_PWM2_Duty^(0+128),f
  4473  0BD1  0DCC               	rlf	(??_PWM2_Duty^(0+128)+1),f
  4474  0BD2  1003               	clrc
  4475  0BD3  0DCB               	rlf	??_PWM2_Duty^(0+128),f
  4476  0BD4  0DCC               	rlf	(??_PWM2_Duty^(0+128)+1),f
  4477  0BD5  084B               	movf	??_PWM2_Duty^(0+128),w
  4478  0BD6  00F0               	movwf	___aldiv@divisor
  4479  0BD7  084C               	movf	(??_PWM2_Duty+1)^(0+128),w
  4480  0BD8  00F1               	movwf	___aldiv@divisor+1
  4481  0BD9  01F2               	clrf	___aldiv@divisor+2
  4482  0BDA  01F3               	clrf	___aldiv@divisor+3
  4483  0BDB  120A  158A  22DB  120A  158A  	fcall	___aldiv
  4484  0BE0  0873               	movf	?___aldiv+3,w
  4485  0BE1  1283               	bcf	3,5	;RP0=0, select bank0
  4486  0BE2  1303               	bcf	3,6	;RP1=0, select bank0
  4487  0BE3  00A9               	movwf	___xxtofl@val+3
  4488  0BE4  0872               	movf	?___aldiv+2,w
  4489  0BE5  00A8               	movwf	___xxtofl@val+2
  4490  0BE6  0871               	movf	?___aldiv+1,w
  4491  0BE7  00A7               	movwf	___xxtofl@val+1
  4492  0BE8  0870               	movf	?___aldiv,w
  4493  0BE9  00A6               	movwf	___xxtofl@val
  4494  0BEA  3001               	movlw	1
  4495  0BEB  120A  118A  202E  120A  158A  	fcall	___xxtofl
  4496  0BF0  1283               	bcf	3,5	;RP0=0, select bank0
  4497  0BF1  1303               	bcf	3,6	;RP1=0, select bank0
  4498  0BF2  0829               	movf	?___xxtofl+3,w
  4499  0BF3  00D1               	movwf	___flmul@b+3
  4500  0BF4  0828               	movf	?___xxtofl+2,w
  4501  0BF5  00D0               	movwf	___flmul@b+2
  4502  0BF6  0827               	movf	?___xxtofl+1,w
  4503  0BF7  00CF               	movwf	___flmul@b+1
  4504  0BF8  0826               	movf	?___xxtofl,w
  4505  0BF9  00CE               	movwf	___flmul@b
  4506  0BFA  120A  118A  2463  120A  158A  	fcall	___flmul
  4507  0BFF  1283               	bcf	3,5	;RP0=0, select bank0
  4508  0C00  1303               	bcf	3,6	;RP1=0, select bank0
  4509  0C01  0851               	movf	?___flmul+3,w
  4510  0C02  00EB               	movwf	___fltol@f1+3
  4511  0C03  0850               	movf	?___flmul+2,w
  4512  0C04  00EA               	movwf	___fltol@f1+2
  4513  0C05  084F               	movf	?___flmul+1,w
  4514  0C06  00E9               	movwf	___fltol@f1+1
  4515  0C07  084E               	movf	?___flmul,w
  4516  0C08  00E8               	movwf	___fltol@f1
  4517  0C09  120A  158A  2240  120A  158A  	fcall	___fltol
  4518  0C0E  1283               	bcf	3,5	;RP0=0, select bank0
  4519  0C0F  1303               	bcf	3,6	;RP1=0, select bank0
  4520  0C10  0869               	movf	?___fltol+1,w
  4521  0C11  00ED               	movwf	PWM2_Duty@duty+1
  4522  0C12  0868               	movf	?___fltol,w
  4523  0C13  00EC               	movwf	PWM2_Duty@duty
  4524  0C14                     l2402:
  4525                           
  4526                           ;PWM.c: 35:     CCP2X = duty & 0b00000010;;
  4527  0C14  129D               	bcf	29,5	;volatile
  4528  0C15                     l2404:
  4529                           
  4530                           ;PWM.c: 36:     CCP2Y = duty & 0b00000001;;
  4531  0C15  186C               	btfsc	PWM2_Duty@duty,0
  4532  0C16  2C18               	goto	u3251
  4533  0C17  2C1C               	goto	u3250
  4534  0C18                     u3251:
  4535  0C18  1283               	bcf	3,5	;RP0=0, select bank0
  4536  0C19  1303               	bcf	3,6	;RP1=0, select bank0
  4537  0C1A  161D               	bsf	29,4	;volatile
  4538  0C1B  2C1F               	goto	u3264
  4539  0C1C                     u3250:
  4540  0C1C  1283               	bcf	3,5	;RP0=0, select bank0
  4541  0C1D  1303               	bcf	3,6	;RP1=0, select bank0
  4542  0C1E  121D               	bcf	29,4	;volatile
  4543  0C1F                     u3264:
  4544  0C1F                     l2406:
  4545                           
  4546                           ;PWM.c: 37:     CCPR2L = (unsigned char)duty>>2;
  4547  0C1F  086C               	movf	PWM2_Duty@duty,w
  4548  0C20  1683               	bsf	3,5	;RP0=1, select bank1
  4549  0C21  1303               	bcf	3,6	;RP1=0, select bank1
  4550  0C22  00CB               	movwf	??_PWM2_Duty^(0+128)
  4551  0C23  3002               	movlw	2
  4552  0C24                     u3275:
  4553  0C24  1003               	clrc
  4554  0C25  0CCB               	rrf	??_PWM2_Duty^(0+128),f
  4555  0C26  3EFF               	addlw	-1
  4556  0C27  1D03               	skipz
  4557  0C28  2C24               	goto	u3275
  4558  0C29  084B               	movf	??_PWM2_Duty^(0+128),w
  4559  0C2A  1283               	bcf	3,5	;RP0=0, select bank0
  4560  0C2B  1303               	bcf	3,6	;RP1=0, select bank0
  4561  0C2C  009B               	movwf	27	;volatile
  4562  0C2D                     l192:
  4563  0C2D  0008               	return
  4564  0C2E                     __end_of_PWM2_Duty:
  4565                           
  4566                           	psect	text19
  4567  002E                     __ptext19:	
  4568 ;; *************** function ___xxtofl *****************
  4569 ;; Defined at:
  4570 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\xxtofl.c"
  4571 ;; Parameters:    Size  Location     Type
  4572 ;;  sign            1    wreg     unsigned char 
  4573 ;;  val             4    6[BANK0 ] long 
  4574 ;; Auto vars:     Size  Location     Type
  4575 ;;  sign            1   14[BANK0 ] unsigned char 
  4576 ;;  arg             4   16[BANK0 ] unsigned long 
  4577 ;;  exp             1   15[BANK0 ] unsigned char 
  4578 ;; Return value:  Size  Location     Type
  4579 ;;                  4    6[BANK0 ] unsigned char 
  4580 ;; Registers used:
  4581 ;;		wreg, status,2, status,0
  4582 ;; Tracked objects:
  4583 ;;		On entry : 0/0
  4584 ;;		On exit  : 0/0
  4585 ;;		Unchanged: 0/0
  4586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4587 ;;      Params:         0       4       0       0       0
  4588 ;;      Locals:         0       6       0       0       0
  4589 ;;      Temps:          0       4       0       0       0
  4590 ;;      Totals:         0      14       0       0       0
  4591 ;;Total ram usage:       14 bytes
  4592 ;; Hardware stack levels used: 1
  4593 ;; This function calls:
  4594 ;;		Nothing
  4595 ;; This function is called by:
  4596 ;;		_realizarCalculo
  4597 ;;		_PWM1_Duty
  4598 ;;		_PWM2_Duty
  4599 ;; This function uses a non-reentrant model
  4600 ;;
  4601                           
  4602                           
  4603                           ;psect for function ___xxtofl
  4604  002E                     ___xxtofl:
  4605                           
  4606                           ;incstack = 0
  4607                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4608                           ;___xxtofl@sign stored from wreg
  4609  002E  1283               	bcf	3,5	;RP0=0, select bank0
  4610  002F  1303               	bcf	3,6	;RP1=0, select bank0
  4611  0030  00AE               	movwf	___xxtofl@sign
  4612  0031                     l2232:
  4613  0031  082E               	movf	___xxtofl@sign,w
  4614  0032  1903               	btfsc	3,2
  4615  0033  2835               	goto	u2931
  4616  0034  2836               	goto	u2930
  4617  0035                     u2931:
  4618  0035  284A               	goto	l2238
  4619  0036                     u2930:
  4620  0036                     l2234:
  4621  0036  1FA9               	btfss	___xxtofl@val+3,7
  4622  0037  2839               	goto	u2941
  4623  0038  283A               	goto	u2940
  4624  0039                     u2941:
  4625  0039  284A               	goto	l2238
  4626  003A                     u2940:
  4627  003A                     l2236:
  4628  003A  0926               	comf	___xxtofl@val,w
  4629  003B  00B0               	movwf	___xxtofl@arg
  4630  003C  0927               	comf	___xxtofl@val+1,w
  4631  003D  00B1               	movwf	___xxtofl@arg+1
  4632  003E  0928               	comf	___xxtofl@val+2,w
  4633  003F  00B2               	movwf	___xxtofl@arg+2
  4634  0040  0929               	comf	___xxtofl@val+3,w
  4635  0041  00B3               	movwf	___xxtofl@arg+3
  4636  0042  0AB0               	incf	___xxtofl@arg,f
  4637  0043  1903               	skipnz
  4638  0044  0AB1               	incf	___xxtofl@arg+1,f
  4639  0045  1903               	skipnz
  4640  0046  0AB2               	incf	___xxtofl@arg+2,f
  4641  0047  1903               	skipnz
  4642  0048  0AB3               	incf	___xxtofl@arg+3,f
  4643  0049  2852               	goto	l795
  4644  004A                     l2238:
  4645  004A  0829               	movf	___xxtofl@val+3,w
  4646  004B  00B3               	movwf	___xxtofl@arg+3
  4647  004C  0828               	movf	___xxtofl@val+2,w
  4648  004D  00B2               	movwf	___xxtofl@arg+2
  4649  004E  0827               	movf	___xxtofl@val+1,w
  4650  004F  00B1               	movwf	___xxtofl@arg+1
  4651  0050  0826               	movf	___xxtofl@val,w
  4652  0051  00B0               	movwf	___xxtofl@arg
  4653  0052                     l795:
  4654  0052  0829               	movf	___xxtofl@val+3,w
  4655  0053  0428               	iorwf	___xxtofl@val+2,w
  4656  0054  0427               	iorwf	___xxtofl@val+1,w
  4657  0055  0426               	iorwf	___xxtofl@val,w
  4658  0056  1D03               	skipz
  4659  0057  2859               	goto	u2951
  4660  0058  285A               	goto	u2950
  4661  0059                     u2951:
  4662  0059  2863               	goto	l2244
  4663  005A                     u2950:
  4664  005A                     l2240:
  4665  005A  3000               	movlw	0
  4666  005B  00A9               	movwf	?___xxtofl+3
  4667  005C  3000               	movlw	0
  4668  005D  00A8               	movwf	?___xxtofl+2
  4669  005E  3000               	movlw	0
  4670  005F  00A7               	movwf	?___xxtofl+1
  4671  0060  3000               	movlw	0
  4672  0061  00A6               	movwf	?___xxtofl
  4673  0062  28E9               	goto	l797
  4674  0063                     l2244:
  4675  0063  3096               	movlw	150
  4676  0064  00AA               	movwf	??___xxtofl
  4677  0065  082A               	movf	??___xxtofl,w
  4678  0066  00AF               	movwf	___xxtofl@exp
  4679  0067  2875               	goto	l2248
  4680  0068                     l2246:
  4681  0068  3001               	movlw	1
  4682  0069  00AA               	movwf	??___xxtofl
  4683  006A  082A               	movf	??___xxtofl,w
  4684  006B  07AF               	addwf	___xxtofl@exp,f
  4685  006C  3001               	movlw	1
  4686  006D                     u2965:
  4687  006D  1003               	clrc
  4688  006E  0CB3               	rrf	___xxtofl@arg+3,f
  4689  006F  0CB2               	rrf	___xxtofl@arg+2,f
  4690  0070  0CB1               	rrf	___xxtofl@arg+1,f
  4691  0071  0CB0               	rrf	___xxtofl@arg,f
  4692  0072  3EFF               	addlw	-1
  4693  0073  1D03               	skipz
  4694  0074  286D               	goto	u2965
  4695  0075                     l2248:
  4696  0075  30FE               	movlw	254
  4697  0076  0533               	andwf	___xxtofl@arg+3,w
  4698  0077  1D03               	btfss	3,2
  4699  0078  287A               	goto	u2971
  4700  0079  287B               	goto	u2970
  4701  007A                     u2971:
  4702  007A  2868               	goto	l2246
  4703  007B                     u2970:
  4704  007B  2897               	goto	l801
  4705  007C                     l2250:
  4706  007C  3001               	movlw	1
  4707  007D  00AA               	movwf	??___xxtofl
  4708  007E  082A               	movf	??___xxtofl,w
  4709  007F  07AF               	addwf	___xxtofl@exp,f
  4710  0080                     l2252:
  4711  0080  3001               	movlw	1
  4712  0081  07B0               	addwf	___xxtofl@arg,f
  4713  0082  3000               	movlw	0
  4714  0083  1803               	skipnc
  4715  0084  3001               	movlw	1
  4716  0085  07B1               	addwf	___xxtofl@arg+1,f
  4717  0086  3000               	movlw	0
  4718  0087  1803               	skipnc
  4719  0088  3001               	movlw	1
  4720  0089  07B2               	addwf	___xxtofl@arg+2,f
  4721  008A  3000               	movlw	0
  4722  008B  1803               	skipnc
  4723  008C  3001               	movlw	1
  4724  008D  07B3               	addwf	___xxtofl@arg+3,f
  4725  008E                     l2254:
  4726  008E  3001               	movlw	1
  4727  008F                     u2985:
  4728  008F  1003               	clrc
  4729  0090  0CB3               	rrf	___xxtofl@arg+3,f
  4730  0091  0CB2               	rrf	___xxtofl@arg+2,f
  4731  0092  0CB1               	rrf	___xxtofl@arg+1,f
  4732  0093  0CB0               	rrf	___xxtofl@arg,f
  4733  0094  3EFF               	addlw	-1
  4734  0095  1D03               	skipz
  4735  0096  288F               	goto	u2985
  4736  0097                     l801:
  4737  0097  30FF               	movlw	255
  4738  0098  0533               	andwf	___xxtofl@arg+3,w
  4739  0099  1D03               	btfss	3,2
  4740  009A  289C               	goto	u2991
  4741  009B  289D               	goto	u2990
  4742  009C                     u2991:
  4743  009C  287C               	goto	l2250
  4744  009D                     u2990:
  4745  009D  28A9               	goto	l2258
  4746  009E                     l2256:
  4747  009E  3001               	movlw	1
  4748  009F  02AF               	subwf	___xxtofl@exp,f
  4749  00A0  3001               	movlw	1
  4750  00A1  00AA               	movwf	??___xxtofl
  4751  00A2                     u3005:
  4752  00A2  1003               	clrc
  4753  00A3  0DB0               	rlf	___xxtofl@arg,f
  4754  00A4  0DB1               	rlf	___xxtofl@arg+1,f
  4755  00A5  0DB2               	rlf	___xxtofl@arg+2,f
  4756  00A6  0DB3               	rlf	___xxtofl@arg+3,f
  4757  00A7  0BAA               	decfsz	??___xxtofl,f
  4758  00A8  28A2               	goto	u3005
  4759  00A9                     l2258:
  4760  00A9  1BB2               	btfsc	___xxtofl@arg+2,7
  4761  00AA  28AC               	goto	u3011
  4762  00AB  28AD               	goto	u3010
  4763  00AC                     u3011:
  4764  00AC  28B3               	goto	l808
  4765  00AD                     u3010:
  4766  00AD                     l2260:
  4767  00AD  3002               	movlw	2
  4768  00AE  022F               	subwf	___xxtofl@exp,w
  4769  00AF  1803               	skipnc
  4770  00B0  28B2               	goto	u3021
  4771  00B1  28B3               	goto	u3020
  4772  00B2                     u3021:
  4773  00B2  289E               	goto	l2256
  4774  00B3                     u3020:
  4775  00B3                     l808:
  4776  00B3  182F               	btfsc	___xxtofl@exp,0
  4777  00B4  28B6               	goto	u3031
  4778  00B5  28B7               	goto	u3030
  4779  00B6                     u3031:
  4780  00B6  28BF               	goto	l809
  4781  00B7                     u3030:
  4782  00B7                     l2262:
  4783  00B7  30FF               	movlw	255
  4784  00B8  05B0               	andwf	___xxtofl@arg,f
  4785  00B9  30FF               	movlw	255
  4786  00BA  05B1               	andwf	___xxtofl@arg+1,f
  4787  00BB  307F               	movlw	127
  4788  00BC  05B2               	andwf	___xxtofl@arg+2,f
  4789  00BD  30FF               	movlw	255
  4790  00BE  05B3               	andwf	___xxtofl@arg+3,f
  4791  00BF                     l809:
  4792  00BF  1003               	clrc
  4793  00C0  0CAF               	rrf	___xxtofl@exp,f
  4794  00C1                     l2264:
  4795  00C1  082F               	movf	___xxtofl@exp,w
  4796  00C2  00AA               	movwf	??___xxtofl
  4797  00C3  01AB               	clrf	??___xxtofl+1
  4798  00C4  01AC               	clrf	??___xxtofl+2
  4799  00C5  01AD               	clrf	??___xxtofl+3
  4800  00C6  3018               	movlw	24
  4801  00C7                     u3045:
  4802  00C7  1003               	clrc
  4803  00C8  0DAA               	rlf	??___xxtofl,f
  4804  00C9  0DAB               	rlf	??___xxtofl+1,f
  4805  00CA  0DAC               	rlf	??___xxtofl+2,f
  4806  00CB  0DAD               	rlf	??___xxtofl+3,f
  4807  00CC                     u3040:
  4808  00CC  3EFF               	addlw	-1
  4809  00CD  1D03               	skipz
  4810  00CE  28C7               	goto	u3045
  4811  00CF  082A               	movf	??___xxtofl,w
  4812  00D0  04B0               	iorwf	___xxtofl@arg,f
  4813  00D1  082B               	movf	??___xxtofl+1,w
  4814  00D2  04B1               	iorwf	___xxtofl@arg+1,f
  4815  00D3  082C               	movf	??___xxtofl+2,w
  4816  00D4  04B2               	iorwf	___xxtofl@arg+2,f
  4817  00D5  082D               	movf	??___xxtofl+3,w
  4818  00D6  04B3               	iorwf	___xxtofl@arg+3,f
  4819  00D7                     l2266:
  4820  00D7  082E               	movf	___xxtofl@sign,w
  4821  00D8  1903               	btfsc	3,2
  4822  00D9  28DB               	goto	u3051
  4823  00DA  28DC               	goto	u3050
  4824  00DB                     u3051:
  4825  00DB  28E1               	goto	l2272
  4826  00DC                     u3050:
  4827  00DC                     l2268:
  4828  00DC  1FA9               	btfss	___xxtofl@val+3,7
  4829  00DD  28DF               	goto	u3061
  4830  00DE  28E0               	goto	u3060
  4831  00DF                     u3061:
  4832  00DF  28E1               	goto	l2272
  4833  00E0                     u3060:
  4834  00E0                     l2270:
  4835  00E0  17B3               	bsf	___xxtofl@arg+3,7
  4836  00E1                     l2272:
  4837  00E1  0833               	movf	___xxtofl@arg+3,w
  4838  00E2  00A9               	movwf	?___xxtofl+3
  4839  00E3  0832               	movf	___xxtofl@arg+2,w
  4840  00E4  00A8               	movwf	?___xxtofl+2
  4841  00E5  0831               	movf	___xxtofl@arg+1,w
  4842  00E6  00A7               	movwf	?___xxtofl+1
  4843  00E7  0830               	movf	___xxtofl@arg,w
  4844  00E8  00A6               	movwf	?___xxtofl
  4845  00E9                     l797:
  4846  00E9  0008               	return
  4847  00EA                     __end_of___xxtofl:
  4848                           
  4849                           	psect	text20
  4850  0A40                     __ptext20:	
  4851 ;; *************** function ___fltol *****************
  4852 ;; Defined at:
  4853 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fltol.c"
  4854 ;; Parameters:    Size  Location     Type
  4855 ;;  f1              4   72[BANK0 ] unsigned char 
  4856 ;; Auto vars:     Size  Location     Type
  4857 ;;  exp1            1   12[COMMON] unsigned char 
  4858 ;;  sign1           1   11[COMMON] unsigned char 
  4859 ;; Return value:  Size  Location     Type
  4860 ;;                  4   72[BANK0 ] long 
  4861 ;; Registers used:
  4862 ;;		wreg, status,2, status,0
  4863 ;; Tracked objects:
  4864 ;;		On entry : 0/0
  4865 ;;		On exit  : 0/0
  4866 ;;		Unchanged: 0/0
  4867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4868 ;;      Params:         0       4       0       0       0
  4869 ;;      Locals:         2       0       0       0       0
  4870 ;;      Temps:          0       0       5       0       0
  4871 ;;      Totals:         2       4       5       0       0
  4872 ;;Total ram usage:       11 bytes
  4873 ;; Hardware stack levels used: 1
  4874 ;; This function calls:
  4875 ;;		Nothing
  4876 ;; This function is called by:
  4877 ;;		_realizarCalculo
  4878 ;;		_PWM1_Duty
  4879 ;;		_PWM2_Duty
  4880 ;; This function uses a non-reentrant model
  4881 ;;
  4882                           
  4883                           
  4884                           ;psect for function ___fltol
  4885  0A40                     ___fltol:
  4886  0A40                     l1866:	
  4887                           ;incstack = 0
  4888                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4889                           
  4890  0A40  1003               	clrc
  4891  0A41  1283               	bcf	3,5	;RP0=0, select bank0
  4892  0A42  1303               	bcf	3,6	;RP1=0, select bank0
  4893  0A43  0D6A               	rlf	___fltol@f1+2,w
  4894  0A44  0D6B               	rlf	___fltol@f1+3,w
  4895  0A45  1683               	bsf	3,5	;RP0=1, select bank1
  4896  0A46  1303               	bcf	3,6	;RP1=0, select bank1
  4897  0A47  00C6               	movwf	??___fltol^(0+128)
  4898  0A48  0846               	movf	??___fltol^(0+128),w
  4899  0A49  00FC               	movwf	___fltol@exp1
  4900  0A4A  087C               	movf	___fltol@exp1,w
  4901  0A4B  1D03               	btfss	3,2
  4902  0A4C  2A4E               	goto	u2041
  4903  0A4D  2A4F               	goto	u2040
  4904  0A4E                     u2041:
  4905  0A4E  2A59               	goto	l1872
  4906  0A4F                     u2040:
  4907  0A4F                     l1868:
  4908  0A4F  3000               	movlw	0
  4909  0A50  1283               	bcf	3,5	;RP0=0, select bank0
  4910  0A51  00EB               	movwf	?___fltol+3
  4911  0A52  3000               	movlw	0
  4912  0A53  00EA               	movwf	?___fltol+2
  4913  0A54  3000               	movlw	0
  4914  0A55  00E9               	movwf	?___fltol+1
  4915  0A56  3000               	movlw	0
  4916  0A57  00E8               	movwf	?___fltol
  4917  0A58  2ADA               	goto	l548
  4918  0A59                     l1872:
  4919  0A59  1283               	bcf	3,5	;RP0=0, select bank0
  4920  0A5A  1303               	bcf	3,6	;RP1=0, select bank0
  4921  0A5B  0868               	movf	___fltol@f1,w
  4922  0A5C  1683               	bsf	3,5	;RP0=1, select bank1
  4923  0A5D  1303               	bcf	3,6	;RP1=0, select bank1
  4924  0A5E  00C6               	movwf	??___fltol^(0+128)
  4925  0A5F  1283               	bcf	3,5	;RP0=0, select bank0
  4926  0A60  1303               	bcf	3,6	;RP1=0, select bank0
  4927  0A61  0869               	movf	___fltol@f1+1,w
  4928  0A62  1683               	bsf	3,5	;RP0=1, select bank1
  4929  0A63  1303               	bcf	3,6	;RP1=0, select bank1
  4930  0A64  00C7               	movwf	(??___fltol^(0+128)+1)
  4931  0A65  1283               	bcf	3,5	;RP0=0, select bank0
  4932  0A66  1303               	bcf	3,6	;RP1=0, select bank0
  4933  0A67  086A               	movf	___fltol@f1+2,w
  4934  0A68  1683               	bsf	3,5	;RP0=1, select bank1
  4935  0A69  1303               	bcf	3,6	;RP1=0, select bank1
  4936  0A6A  00C8               	movwf	(??___fltol^(0+128)+2)
  4937  0A6B  1283               	bcf	3,5	;RP0=0, select bank0
  4938  0A6C  1303               	bcf	3,6	;RP1=0, select bank0
  4939  0A6D  086B               	movf	___fltol@f1+3,w
  4940  0A6E  1683               	bsf	3,5	;RP0=1, select bank1
  4941  0A6F  1303               	bcf	3,6	;RP1=0, select bank1
  4942  0A70  00C9               	movwf	(??___fltol^(0+128)+3)
  4943  0A71  301F               	movlw	31
  4944  0A72                     u2055:
  4945  0A72  1003               	clrc
  4946  0A73  0CC9               	rrf	(??___fltol^(0+128)+3),f
  4947  0A74  0CC8               	rrf	(??___fltol^(0+128)+2),f
  4948  0A75  0CC7               	rrf	(??___fltol^(0+128)+1),f
  4949  0A76  0CC6               	rrf	??___fltol^(0+128),f
  4950  0A77                     u2050:
  4951  0A77  3EFF               	addlw	-1
  4952  0A78  1D03               	skipz
  4953  0A79  2A72               	goto	u2055
  4954  0A7A  0846               	movf	??___fltol^(0+128),w
  4955  0A7B  00CA               	movwf	(??___fltol+4)^(0+128)
  4956  0A7C  084A               	movf	(??___fltol+4)^(0+128),w
  4957  0A7D  00FB               	movwf	___fltol@sign1
  4958  0A7E                     l1874:
  4959  0A7E  1283               	bcf	3,5	;RP0=0, select bank0
  4960  0A7F  1303               	bcf	3,6	;RP1=0, select bank0
  4961  0A80  17EA               	bsf	___fltol@f1+2,7
  4962  0A81                     l1876:
  4963  0A81  30FF               	movlw	255
  4964  0A82  05E8               	andwf	___fltol@f1,f
  4965  0A83  30FF               	movlw	255
  4966  0A84  05E9               	andwf	___fltol@f1+1,f
  4967  0A85  30FF               	movlw	255
  4968  0A86  05EA               	andwf	___fltol@f1+2,f
  4969  0A87  3000               	movlw	0
  4970  0A88  05EB               	andwf	___fltol@f1+3,f
  4971  0A89                     l1878:
  4972  0A89  3096               	movlw	150
  4973  0A8A  02FC               	subwf	___fltol@exp1,f
  4974  0A8B                     l1880:
  4975  0A8B  1FFC               	btfss	___fltol@exp1,7
  4976  0A8C  2A8E               	goto	u2061
  4977  0A8D  2A8F               	goto	u2060
  4978  0A8E                     u2061:
  4979  0A8E  2AAC               	goto	l1890
  4980  0A8F                     u2060:
  4981  0A8F                     l1882:
  4982  0A8F  087C               	movf	___fltol@exp1,w
  4983  0A90  3A80               	xorlw	128
  4984  0A91  3E97               	addlw	151
  4985  0A92  1803               	skipnc
  4986  0A93  2A95               	goto	u2071
  4987  0A94  2A96               	goto	u2070
  4988  0A95                     u2071:
  4989  0A95  2A97               	goto	l1888
  4990  0A96                     u2070:
  4991  0A96  2A4F               	goto	l1868
  4992  0A97                     l1888:
  4993  0A97  3001               	movlw	1
  4994  0A98                     u2085:
  4995  0A98  1003               	clrc
  4996  0A99  1283               	bcf	3,5	;RP0=0, select bank0
  4997  0A9A  0CEB               	rrf	___fltol@f1+3,f
  4998  0A9B  0CEA               	rrf	___fltol@f1+2,f
  4999  0A9C  0CE9               	rrf	___fltol@f1+1,f
  5000  0A9D  0CE8               	rrf	___fltol@f1,f
  5001  0A9E  3EFF               	addlw	-1
  5002  0A9F  1D03               	skipz
  5003  0AA0  2A98               	goto	u2085
  5004  0AA1  3001               	movlw	1
  5005  0AA2  1683               	bsf	3,5	;RP0=1, select bank1
  5006  0AA3  1303               	bcf	3,6	;RP1=0, select bank1
  5007  0AA4  00C6               	movwf	??___fltol^(0+128)
  5008  0AA5  0846               	movf	??___fltol^(0+128),w
  5009  0AA6  07FC               	addwf	___fltol@exp1,f
  5010  0AA7  1D03               	btfss	3,2
  5011  0AA8  2AAA               	goto	u2091
  5012  0AA9  2AAB               	goto	u2090
  5013  0AAA                     u2091:
  5014  0AAA  2A97               	goto	l1888
  5015  0AAB                     u2090:
  5016  0AAB  2AC9               	goto	l1898
  5017  0AAC                     l1890:
  5018  0AAC  3020               	movlw	32
  5019  0AAD  027C               	subwf	___fltol@exp1,w
  5020  0AAE  1C03               	skipc
  5021  0AAF  2AB1               	goto	u2101
  5022  0AB0  2AB2               	goto	u2100
  5023  0AB1                     u2101:
  5024  0AB1  2AC4               	goto	l555
  5025  0AB2                     u2100:
  5026  0AB2  2A4F               	goto	l1868
  5027  0AB3                     l1896:
  5028  0AB3  3001               	movlw	1
  5029  0AB4  1683               	bsf	3,5	;RP0=1, select bank1
  5030  0AB5  1303               	bcf	3,6	;RP1=0, select bank1
  5031  0AB6  00C6               	movwf	??___fltol^(0+128)
  5032  0AB7                     u2115:
  5033  0AB7  1003               	clrc
  5034  0AB8  1283               	bcf	3,5	;RP0=0, select bank0
  5035  0AB9  1303               	bcf	3,6	;RP1=0, select bank0
  5036  0ABA  0DE8               	rlf	___fltol@f1,f
  5037  0ABB  0DE9               	rlf	___fltol@f1+1,f
  5038  0ABC  0DEA               	rlf	___fltol@f1+2,f
  5039  0ABD  0DEB               	rlf	___fltol@f1+3,f
  5040  0ABE  1683               	bsf	3,5	;RP0=1, select bank1
  5041  0ABF  1303               	bcf	3,6	;RP1=0, select bank1
  5042  0AC0  0BC6               	decfsz	??___fltol^(0+128),f
  5043  0AC1  2AB7               	goto	u2115
  5044  0AC2  3001               	movlw	1
  5045  0AC3  02FC               	subwf	___fltol@exp1,f
  5046  0AC4                     l555:
  5047  0AC4  087C               	movf	___fltol@exp1,w
  5048  0AC5  1D03               	btfss	3,2
  5049  0AC6  2AC8               	goto	u2121
  5050  0AC7  2AC9               	goto	u2120
  5051  0AC8                     u2121:
  5052  0AC8  2AB3               	goto	l1896
  5053  0AC9                     u2120:
  5054  0AC9                     l1898:
  5055  0AC9  087B               	movf	___fltol@sign1,w
  5056  0ACA  1903               	btfsc	3,2
  5057  0ACB  2ACD               	goto	u2131
  5058  0ACC  2ACE               	goto	u2130
  5059  0ACD                     u2131:
  5060  0ACD  2ADA               	goto	l558
  5061  0ACE                     u2130:
  5062  0ACE                     l1900:
  5063  0ACE  1283               	bcf	3,5	;RP0=0, select bank0
  5064  0ACF  09E8               	comf	___fltol@f1,f
  5065  0AD0  09E9               	comf	___fltol@f1+1,f
  5066  0AD1  09EA               	comf	___fltol@f1+2,f
  5067  0AD2  09EB               	comf	___fltol@f1+3,f
  5068  0AD3  0AE8               	incf	___fltol@f1,f
  5069  0AD4  1903               	skipnz
  5070  0AD5  0AE9               	incf	___fltol@f1+1,f
  5071  0AD6  1903               	skipnz
  5072  0AD7  0AEA               	incf	___fltol@f1+2,f
  5073  0AD8  1903               	skipnz
  5074  0AD9  0AEB               	incf	___fltol@f1+3,f
  5075  0ADA                     l558:
  5076  0ADA                     l548:
  5077  0ADA  0008               	return
  5078  0ADB                     __end_of___fltol:
  5079                           
  5080                           	psect	text21
  5081  0463                     __ptext21:	
  5082 ;; *************** function ___flmul *****************
  5083 ;; Defined at:
  5084 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcmul.c"
  5085 ;; Parameters:    Size  Location     Type
  5086 ;;  b               4   46[BANK0 ] long 
  5087 ;;  a               4   50[BANK0 ] long 
  5088 ;; Auto vars:     Size  Location     Type
  5089 ;;  prod            4   66[BANK0 ] struct .
  5090 ;;  grs             4   60[BANK0 ] unsigned long 
  5091 ;;  temp            2   70[BANK0 ] struct .
  5092 ;;  bexp            1   65[BANK0 ] unsigned char 
  5093 ;;  aexp            1   64[BANK0 ] unsigned char 
  5094 ;;  sign            1   59[BANK0 ] unsigned char 
  5095 ;; Return value:  Size  Location     Type
  5096 ;;                  4   46[BANK0 ] unsigned char 
  5097 ;; Registers used:
  5098 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5099 ;; Tracked objects:
  5100 ;;		On entry : 0/0
  5101 ;;		On exit  : 0/0
  5102 ;;		Unchanged: 0/0
  5103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5104 ;;      Params:         0       8       0       0       0
  5105 ;;      Locals:         0      13       0       0       0
  5106 ;;      Temps:          0       5       0       0       0
  5107 ;;      Totals:         0      26       0       0       0
  5108 ;;Total ram usage:       26 bytes
  5109 ;; Hardware stack levels used: 1
  5110 ;; Hardware stack levels required when called: 1
  5111 ;; This function calls:
  5112 ;;		__Umul8_16
  5113 ;; This function is called by:
  5114 ;;		_realizarCalculo
  5115 ;;		_PWM1_Duty
  5116 ;;		_PWM2_Duty
  5117 ;; This function uses a non-reentrant model
  5118 ;;
  5119                           
  5120                           
  5121                           ;psect for function ___flmul
  5122  0463                     ___flmul:
  5123  0463                     l2092:	
  5124                           ;incstack = 0
  5125                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5126                           
  5127  0463  1283               	bcf	3,5	;RP0=0, select bank0
  5128  0464  1303               	bcf	3,6	;RP1=0, select bank0
  5129  0465  0851               	movf	___flmul@b+3,w
  5130  0466  3980               	andlw	128
  5131  0467  00D6               	movwf	??___flmul
  5132  0468  0856               	movf	??___flmul,w
  5133  0469  00DB               	movwf	___flmul@sign
  5134  046A                     l2094:
  5135  046A  0851               	movf	___flmul@b+3,w
  5136  046B  00D6               	movwf	??___flmul
  5137  046C  0756               	addwf	??___flmul,w
  5138  046D  00D7               	movwf	??___flmul+1
  5139  046E  0857               	movf	??___flmul+1,w
  5140  046F  00E1               	movwf	___flmul@bexp
  5141  0470                     l2096:
  5142  0470  1FD0               	btfss	___flmul@b+2,7
  5143  0471  2C73               	goto	u2561
  5144  0472  2C74               	goto	u2560
  5145  0473                     u2561:
  5146  0473  2C75               	goto	l2100
  5147  0474                     u2560:
  5148  0474                     l2098:
  5149  0474  1461               	bsf	___flmul@bexp,0
  5150  0475                     l2100:
  5151  0475  0861               	movf	___flmul@bexp,w
  5152  0476  1903               	btfsc	3,2
  5153  0477  2C79               	goto	u2571
  5154  0478  2C7A               	goto	u2570
  5155  0479                     u2571:
  5156  0479  2C89               	goto	l2108
  5157  047A                     u2570:
  5158  047A                     l2102:
  5159  047A  0A61               	incf	___flmul@bexp,w
  5160  047B  1D03               	btfss	3,2
  5161  047C  2C7E               	goto	u2581
  5162  047D  2C7F               	goto	u2580
  5163  047E                     u2581:
  5164  047E  2C87               	goto	l2106
  5165  047F                     u2580:
  5166  047F                     l2104:
  5167  047F  3000               	movlw	0
  5168  0480  00D1               	movwf	___flmul@b+3
  5169  0481  3000               	movlw	0
  5170  0482  00D0               	movwf	___flmul@b+2
  5171  0483  3000               	movlw	0
  5172  0484  00CF               	movwf	___flmul@b+1
  5173  0485  3000               	movlw	0
  5174  0486  00CE               	movwf	___flmul@b
  5175  0487                     l2106:
  5176  0487  17D0               	bsf	___flmul@b+2,7
  5177  0488  2C91               	goto	l2110
  5178  0489                     l2108:
  5179  0489  3000               	movlw	0
  5180  048A  00D1               	movwf	___flmul@b+3
  5181  048B  3000               	movlw	0
  5182  048C  00D0               	movwf	___flmul@b+2
  5183  048D  3000               	movlw	0
  5184  048E  00CF               	movwf	___flmul@b+1
  5185  048F  3000               	movlw	0
  5186  0490  00CE               	movwf	___flmul@b
  5187  0491                     l2110:
  5188  0491  0855               	movf	___flmul@a+3,w
  5189  0492  3980               	andlw	128
  5190  0493  00D6               	movwf	??___flmul
  5191  0494  0856               	movf	??___flmul,w
  5192  0495  06DB               	xorwf	___flmul@sign,f
  5193  0496                     l2112:
  5194  0496  0855               	movf	___flmul@a+3,w
  5195  0497  00D6               	movwf	??___flmul
  5196  0498  0756               	addwf	??___flmul,w
  5197  0499  00D7               	movwf	??___flmul+1
  5198  049A  0857               	movf	??___flmul+1,w
  5199  049B  00E0               	movwf	___flmul@aexp
  5200  049C                     l2114:
  5201  049C  1FD4               	btfss	___flmul@a+2,7
  5202  049D  2C9F               	goto	u2591
  5203  049E  2CA0               	goto	u2590
  5204  049F                     u2591:
  5205  049F  2CA1               	goto	l2118
  5206  04A0                     u2590:
  5207  04A0                     l2116:
  5208  04A0  1460               	bsf	___flmul@aexp,0
  5209  04A1                     l2118:
  5210  04A1  0860               	movf	___flmul@aexp,w
  5211  04A2  1903               	btfsc	3,2
  5212  04A3  2CA5               	goto	u2601
  5213  04A4  2CA6               	goto	u2600
  5214  04A5                     u2601:
  5215  04A5  2CB5               	goto	l2126
  5216  04A6                     u2600:
  5217  04A6                     l2120:
  5218  04A6  0A60               	incf	___flmul@aexp,w
  5219  04A7  1D03               	btfss	3,2
  5220  04A8  2CAA               	goto	u2611
  5221  04A9  2CAB               	goto	u2610
  5222  04AA                     u2611:
  5223  04AA  2CB3               	goto	l2124
  5224  04AB                     u2610:
  5225  04AB                     l2122:
  5226  04AB  3000               	movlw	0
  5227  04AC  00D5               	movwf	___flmul@a+3
  5228  04AD  3000               	movlw	0
  5229  04AE  00D4               	movwf	___flmul@a+2
  5230  04AF  3000               	movlw	0
  5231  04B0  00D3               	movwf	___flmul@a+1
  5232  04B1  3000               	movlw	0
  5233  04B2  00D2               	movwf	___flmul@a
  5234  04B3                     l2124:
  5235  04B3  17D4               	bsf	___flmul@a+2,7
  5236  04B4  2CBD               	goto	l2128
  5237  04B5                     l2126:
  5238  04B5  3000               	movlw	0
  5239  04B6  00D5               	movwf	___flmul@a+3
  5240  04B7  3000               	movlw	0
  5241  04B8  00D4               	movwf	___flmul@a+2
  5242  04B9  3000               	movlw	0
  5243  04BA  00D3               	movwf	___flmul@a+1
  5244  04BB  3000               	movlw	0
  5245  04BC  00D2               	movwf	___flmul@a
  5246  04BD                     l2128:
  5247  04BD  0860               	movf	___flmul@aexp,w
  5248  04BE  1903               	btfsc	3,2
  5249  04BF  2CC1               	goto	u2621
  5250  04C0  2CC2               	goto	u2620
  5251  04C1                     u2621:
  5252  04C1  2CC7               	goto	l2132
  5253  04C2                     u2620:
  5254  04C2                     l2130:
  5255  04C2  0861               	movf	___flmul@bexp,w
  5256  04C3  1D03               	btfss	3,2
  5257  04C4  2CC6               	goto	u2631
  5258  04C5  2CC7               	goto	u2630
  5259  04C6                     u2631:
  5260  04C6  2CD0               	goto	l2136
  5261  04C7                     u2630:
  5262  04C7                     l2132:
  5263  04C7  3000               	movlw	0
  5264  04C8  00D1               	movwf	?___flmul+3
  5265  04C9  3000               	movlw	0
  5266  04CA  00D0               	movwf	?___flmul+2
  5267  04CB  3000               	movlw	0
  5268  04CC  00CF               	movwf	?___flmul+1
  5269  04CD  3000               	movlw	0
  5270  04CE  00CE               	movwf	?___flmul
  5271  04CF  2FC3               	goto	l751
  5272  04D0                     l2136:
  5273  04D0  084E               	movf	___flmul@b,w
  5274  04D1  00D6               	movwf	??___flmul
  5275  04D2  0856               	movf	??___flmul,w
  5276  04D3  00F0               	movwf	__Umul8_16@multiplicand
  5277  04D4  0854               	movf	___flmul@a+2,w
  5278  04D5  160A  118A  2740  120A  118A  	fcall	__Umul8_16
  5279  04DA  0871               	movf	?__Umul8_16+1,w
  5280  04DB  1283               	bcf	3,5	;RP0=0, select bank0
  5281  04DC  1303               	bcf	3,6	;RP1=0, select bank0
  5282  04DD  00E7               	movwf	___flmul@temp+1
  5283  04DE  0870               	movf	?__Umul8_16,w
  5284  04DF  00E6               	movwf	___flmul@temp
  5285  04E0                     l2138:
  5286  04E0  0866               	movf	___flmul@temp,w
  5287  04E1  00D6               	movwf	??___flmul
  5288  04E2  01D7               	clrf	??___flmul+1
  5289  04E3  01D8               	clrf	??___flmul+2
  5290  04E4  01D9               	clrf	??___flmul+3
  5291  04E5  0859               	movf	??___flmul+3,w
  5292  04E6  00DF               	movwf	___flmul@grs+3
  5293  04E7  0858               	movf	??___flmul+2,w
  5294  04E8  00DE               	movwf	___flmul@grs+2
  5295  04E9  0857               	movf	??___flmul+1,w
  5296  04EA  00DD               	movwf	___flmul@grs+1
  5297  04EB  0856               	movf	??___flmul,w
  5298  04EC  00DC               	movwf	___flmul@grs
  5299  04ED                     l2140:
  5300  04ED  0867               	movf	___flmul@temp+1,w
  5301  04EE  00D6               	movwf	??___flmul
  5302  04EF  01D7               	clrf	??___flmul+1
  5303  04F0  01D8               	clrf	??___flmul+2
  5304  04F1  01D9               	clrf	??___flmul+3
  5305  04F2  0859               	movf	??___flmul+3,w
  5306  04F3  00E5               	movwf	___flmul@prod+3
  5307  04F4  0858               	movf	??___flmul+2,w
  5308  04F5  00E4               	movwf	___flmul@prod+2
  5309  04F6  0857               	movf	??___flmul+1,w
  5310  04F7  00E3               	movwf	___flmul@prod+1
  5311  04F8  0856               	movf	??___flmul,w
  5312  04F9  00E2               	movwf	___flmul@prod
  5313  04FA  084F               	movf	___flmul@b+1,w
  5314  04FB  00D6               	movwf	??___flmul
  5315  04FC  0856               	movf	??___flmul,w
  5316  04FD  00F0               	movwf	__Umul8_16@multiplicand
  5317  04FE  0853               	movf	___flmul@a+1,w
  5318  04FF  160A  118A  2740  120A  118A  	fcall	__Umul8_16
  5319  0504  0871               	movf	?__Umul8_16+1,w
  5320  0505  1283               	bcf	3,5	;RP0=0, select bank0
  5321  0506  1303               	bcf	3,6	;RP1=0, select bank0
  5322  0507  00E7               	movwf	___flmul@temp+1
  5323  0508  0870               	movf	?__Umul8_16,w
  5324  0509  00E6               	movwf	___flmul@temp
  5325  050A                     l2142:
  5326  050A  0866               	movf	___flmul@temp,w
  5327  050B  00D6               	movwf	??___flmul
  5328  050C  01D7               	clrf	??___flmul+1
  5329  050D  01D8               	clrf	??___flmul+2
  5330  050E  01D9               	clrf	??___flmul+3
  5331  050F  0856               	movf	??___flmul,w
  5332  0510  07DC               	addwf	___flmul@grs,f
  5333  0511  0857               	movf	??___flmul+1,w
  5334  0512  1103               	clrz
  5335  0513  1803               	skipnc
  5336  0514  3E01               	addlw	1
  5337  0515  1903               	skipnz
  5338  0516  2D18               	goto	u2641
  5339  0517  07DD               	addwf	___flmul@grs+1,f
  5340  0518                     u2641:
  5341  0518  0858               	movf	??___flmul+2,w
  5342  0519  1103               	clrz
  5343  051A  1803               	skipnc
  5344  051B  3E01               	addlw	1
  5345  051C  1903               	skipnz
  5346  051D  2D1F               	goto	u2642
  5347  051E  07DE               	addwf	___flmul@grs+2,f
  5348  051F                     u2642:
  5349  051F  0859               	movf	??___flmul+3,w
  5350  0520  1103               	clrz
  5351  0521  1803               	skipnc
  5352  0522  3E01               	addlw	1
  5353  0523  1903               	skipnz
  5354  0524  2D26               	goto	u2643
  5355  0525  07DF               	addwf	___flmul@grs+3,f
  5356  0526                     u2643:
  5357  0526                     l2144:
  5358  0526  0867               	movf	___flmul@temp+1,w
  5359  0527  00D6               	movwf	??___flmul
  5360  0528  01D7               	clrf	??___flmul+1
  5361  0529  01D8               	clrf	??___flmul+2
  5362  052A  01D9               	clrf	??___flmul+3
  5363  052B  0856               	movf	??___flmul,w
  5364  052C  07E2               	addwf	___flmul@prod,f
  5365  052D  0857               	movf	??___flmul+1,w
  5366  052E  1103               	clrz
  5367  052F  1803               	skipnc
  5368  0530  3E01               	addlw	1
  5369  0531  1903               	skipnz
  5370  0532  2D34               	goto	u2651
  5371  0533  07E3               	addwf	___flmul@prod+1,f
  5372  0534                     u2651:
  5373  0534  0858               	movf	??___flmul+2,w
  5374  0535  1103               	clrz
  5375  0536  1803               	skipnc
  5376  0537  3E01               	addlw	1
  5377  0538  1903               	skipnz
  5378  0539  2D3B               	goto	u2652
  5379  053A  07E4               	addwf	___flmul@prod+2,f
  5380  053B                     u2652:
  5381  053B  0859               	movf	??___flmul+3,w
  5382  053C  1103               	clrz
  5383  053D  1803               	skipnc
  5384  053E  3E01               	addlw	1
  5385  053F  1903               	skipnz
  5386  0540  2D42               	goto	u2653
  5387  0541  07E5               	addwf	___flmul@prod+3,f
  5388  0542                     u2653:
  5389  0542  0850               	movf	___flmul@b+2,w
  5390  0543  00D6               	movwf	??___flmul
  5391  0544  0856               	movf	??___flmul,w
  5392  0545  00F0               	movwf	__Umul8_16@multiplicand
  5393  0546  0852               	movf	___flmul@a,w
  5394  0547  160A  118A  2740  120A  118A  	fcall	__Umul8_16
  5395  054C  0871               	movf	?__Umul8_16+1,w
  5396  054D  1283               	bcf	3,5	;RP0=0, select bank0
  5397  054E  1303               	bcf	3,6	;RP1=0, select bank0
  5398  054F  00E7               	movwf	___flmul@temp+1
  5399  0550  0870               	movf	?__Umul8_16,w
  5400  0551  00E6               	movwf	___flmul@temp
  5401  0552                     l2146:
  5402  0552  0866               	movf	___flmul@temp,w
  5403  0553  00D6               	movwf	??___flmul
  5404  0554  01D7               	clrf	??___flmul+1
  5405  0555  01D8               	clrf	??___flmul+2
  5406  0556  01D9               	clrf	??___flmul+3
  5407  0557  0856               	movf	??___flmul,w
  5408  0558  07DC               	addwf	___flmul@grs,f
  5409  0559  0857               	movf	??___flmul+1,w
  5410  055A  1103               	clrz
  5411  055B  1803               	skipnc
  5412  055C  3E01               	addlw	1
  5413  055D  1903               	skipnz
  5414  055E  2D60               	goto	u2661
  5415  055F  07DD               	addwf	___flmul@grs+1,f
  5416  0560                     u2661:
  5417  0560  0858               	movf	??___flmul+2,w
  5418  0561  1103               	clrz
  5419  0562  1803               	skipnc
  5420  0563  3E01               	addlw	1
  5421  0564  1903               	skipnz
  5422  0565  2D67               	goto	u2662
  5423  0566  07DE               	addwf	___flmul@grs+2,f
  5424  0567                     u2662:
  5425  0567  0859               	movf	??___flmul+3,w
  5426  0568  1103               	clrz
  5427  0569  1803               	skipnc
  5428  056A  3E01               	addlw	1
  5429  056B  1903               	skipnz
  5430  056C  2D6E               	goto	u2663
  5431  056D  07DF               	addwf	___flmul@grs+3,f
  5432  056E                     u2663:
  5433  056E                     l2148:
  5434  056E  0867               	movf	___flmul@temp+1,w
  5435  056F  00D6               	movwf	??___flmul
  5436  0570  01D7               	clrf	??___flmul+1
  5437  0571  01D8               	clrf	??___flmul+2
  5438  0572  01D9               	clrf	??___flmul+3
  5439  0573  0856               	movf	??___flmul,w
  5440  0574  07E2               	addwf	___flmul@prod,f
  5441  0575  0857               	movf	??___flmul+1,w
  5442  0576  1103               	clrz
  5443  0577  1803               	skipnc
  5444  0578  3E01               	addlw	1
  5445  0579  1903               	skipnz
  5446  057A  2D7C               	goto	u2671
  5447  057B  07E3               	addwf	___flmul@prod+1,f
  5448  057C                     u2671:
  5449  057C  0858               	movf	??___flmul+2,w
  5450  057D  1103               	clrz
  5451  057E  1803               	skipnc
  5452  057F  3E01               	addlw	1
  5453  0580  1903               	skipnz
  5454  0581  2D83               	goto	u2672
  5455  0582  07E4               	addwf	___flmul@prod+2,f
  5456  0583                     u2672:
  5457  0583  0859               	movf	??___flmul+3,w
  5458  0584  1103               	clrz
  5459  0585  1803               	skipnc
  5460  0586  3E01               	addlw	1
  5461  0587  1903               	skipnz
  5462  0588  2D8A               	goto	u2673
  5463  0589  07E5               	addwf	___flmul@prod+3,f
  5464  058A                     u2673:
  5465  058A                     l2150:
  5466  058A  3008               	movlw	8
  5467  058B  00D6               	movwf	??___flmul
  5468  058C                     u2685:
  5469  058C  1003               	clrc
  5470  058D  0DDC               	rlf	___flmul@grs,f
  5471  058E  0DDD               	rlf	___flmul@grs+1,f
  5472  058F  0DDE               	rlf	___flmul@grs+2,f
  5473  0590  0DDF               	rlf	___flmul@grs+3,f
  5474  0591  0BD6               	decfsz	??___flmul,f
  5475  0592  2D8C               	goto	u2685
  5476  0593                     l2152:
  5477  0593  084F               	movf	___flmul@b+1,w
  5478  0594  00D6               	movwf	??___flmul
  5479  0595  0856               	movf	??___flmul,w
  5480  0596  00F0               	movwf	__Umul8_16@multiplicand
  5481  0597  0852               	movf	___flmul@a,w
  5482  0598  160A  118A  2740  120A  118A  	fcall	__Umul8_16
  5483  059D  0871               	movf	?__Umul8_16+1,w
  5484  059E  1283               	bcf	3,5	;RP0=0, select bank0
  5485  059F  1303               	bcf	3,6	;RP1=0, select bank0
  5486  05A0  00E7               	movwf	___flmul@temp+1
  5487  05A1  0870               	movf	?__Umul8_16,w
  5488  05A2  00E6               	movwf	___flmul@temp
  5489  05A3                     l2154:
  5490  05A3  0866               	movf	___flmul@temp,w
  5491  05A4  00D6               	movwf	??___flmul
  5492  05A5  0867               	movf	___flmul@temp+1,w
  5493  05A6  00D7               	movwf	??___flmul+1
  5494  05A7  01D8               	clrf	??___flmul+2
  5495  05A8  01D9               	clrf	??___flmul+3
  5496  05A9  0856               	movf	??___flmul,w
  5497  05AA  07DC               	addwf	___flmul@grs,f
  5498  05AB  0857               	movf	??___flmul+1,w
  5499  05AC  1103               	clrz
  5500  05AD  1803               	skipnc
  5501  05AE  3E01               	addlw	1
  5502  05AF  1903               	skipnz
  5503  05B0  2DB2               	goto	u2691
  5504  05B1  07DD               	addwf	___flmul@grs+1,f
  5505  05B2                     u2691:
  5506  05B2  0858               	movf	??___flmul+2,w
  5507  05B3  1103               	clrz
  5508  05B4  1803               	skipnc
  5509  05B5  3E01               	addlw	1
  5510  05B6  1903               	skipnz
  5511  05B7  2DB9               	goto	u2692
  5512  05B8  07DE               	addwf	___flmul@grs+2,f
  5513  05B9                     u2692:
  5514  05B9  0859               	movf	??___flmul+3,w
  5515  05BA  1103               	clrz
  5516  05BB  1803               	skipnc
  5517  05BC  3E01               	addlw	1
  5518  05BD  1903               	skipnz
  5519  05BE  2DC0               	goto	u2693
  5520  05BF  07DF               	addwf	___flmul@grs+3,f
  5521  05C0                     u2693:
  5522  05C0                     l2156:
  5523  05C0  084E               	movf	___flmul@b,w
  5524  05C1  00D6               	movwf	??___flmul
  5525  05C2  0856               	movf	??___flmul,w
  5526  05C3  00F0               	movwf	__Umul8_16@multiplicand
  5527  05C4  0853               	movf	___flmul@a+1,w
  5528  05C5  160A  118A  2740  120A  118A  	fcall	__Umul8_16
  5529  05CA  0871               	movf	?__Umul8_16+1,w
  5530  05CB  1283               	bcf	3,5	;RP0=0, select bank0
  5531  05CC  1303               	bcf	3,6	;RP1=0, select bank0
  5532  05CD  00E7               	movwf	___flmul@temp+1
  5533  05CE  0870               	movf	?__Umul8_16,w
  5534  05CF  00E6               	movwf	___flmul@temp
  5535  05D0                     l2158:
  5536  05D0  0866               	movf	___flmul@temp,w
  5537  05D1  00D6               	movwf	??___flmul
  5538  05D2  0867               	movf	___flmul@temp+1,w
  5539  05D3  00D7               	movwf	??___flmul+1
  5540  05D4  01D8               	clrf	??___flmul+2
  5541  05D5  01D9               	clrf	??___flmul+3
  5542  05D6  0856               	movf	??___flmul,w
  5543  05D7  07DC               	addwf	___flmul@grs,f
  5544  05D8  0857               	movf	??___flmul+1,w
  5545  05D9  1103               	clrz
  5546  05DA  1803               	skipnc
  5547  05DB  3E01               	addlw	1
  5548  05DC  1903               	skipnz
  5549  05DD  2DDF               	goto	u2701
  5550  05DE  07DD               	addwf	___flmul@grs+1,f
  5551  05DF                     u2701:
  5552  05DF  0858               	movf	??___flmul+2,w
  5553  05E0  1103               	clrz
  5554  05E1  1803               	skipnc
  5555  05E2  3E01               	addlw	1
  5556  05E3  1903               	skipnz
  5557  05E4  2DE6               	goto	u2702
  5558  05E5  07DE               	addwf	___flmul@grs+2,f
  5559  05E6                     u2702:
  5560  05E6  0859               	movf	??___flmul+3,w
  5561  05E7  1103               	clrz
  5562  05E8  1803               	skipnc
  5563  05E9  3E01               	addlw	1
  5564  05EA  1903               	skipnz
  5565  05EB  2DED               	goto	u2703
  5566  05EC  07DF               	addwf	___flmul@grs+3,f
  5567  05ED                     u2703:
  5568  05ED                     l2160:
  5569  05ED  3008               	movlw	8
  5570  05EE  00D6               	movwf	??___flmul
  5571  05EF                     u2715:
  5572  05EF  1003               	clrc
  5573  05F0  0DDC               	rlf	___flmul@grs,f
  5574  05F1  0DDD               	rlf	___flmul@grs+1,f
  5575  05F2  0DDE               	rlf	___flmul@grs+2,f
  5576  05F3  0DDF               	rlf	___flmul@grs+3,f
  5577  05F4  0BD6               	decfsz	??___flmul,f
  5578  05F5  2DEF               	goto	u2715
  5579  05F6  084E               	movf	___flmul@b,w
  5580  05F7  00D6               	movwf	??___flmul
  5581  05F8  0856               	movf	??___flmul,w
  5582  05F9  00F0               	movwf	__Umul8_16@multiplicand
  5583  05FA  0852               	movf	___flmul@a,w
  5584  05FB  160A  118A  2740  120A  118A  	fcall	__Umul8_16
  5585  0600  0871               	movf	?__Umul8_16+1,w
  5586  0601  1283               	bcf	3,5	;RP0=0, select bank0
  5587  0602  1303               	bcf	3,6	;RP1=0, select bank0
  5588  0603  00E7               	movwf	___flmul@temp+1
  5589  0604  0870               	movf	?__Umul8_16,w
  5590  0605  00E6               	movwf	___flmul@temp
  5591  0606                     l2162:
  5592  0606  0866               	movf	___flmul@temp,w
  5593  0607  00D6               	movwf	??___flmul
  5594  0608  0867               	movf	___flmul@temp+1,w
  5595  0609  00D7               	movwf	??___flmul+1
  5596  060A  01D8               	clrf	??___flmul+2
  5597  060B  01D9               	clrf	??___flmul+3
  5598  060C  0856               	movf	??___flmul,w
  5599  060D  07DC               	addwf	___flmul@grs,f
  5600  060E  0857               	movf	??___flmul+1,w
  5601  060F  1103               	clrz
  5602  0610  1803               	skipnc
  5603  0611  3E01               	addlw	1
  5604  0612  1903               	skipnz
  5605  0613  2E15               	goto	u2721
  5606  0614  07DD               	addwf	___flmul@grs+1,f
  5607  0615                     u2721:
  5608  0615  0858               	movf	??___flmul+2,w
  5609  0616  1103               	clrz
  5610  0617  1803               	skipnc
  5611  0618  3E01               	addlw	1
  5612  0619  1903               	skipnz
  5613  061A  2E1C               	goto	u2722
  5614  061B  07DE               	addwf	___flmul@grs+2,f
  5615  061C                     u2722:
  5616  061C  0859               	movf	??___flmul+3,w
  5617  061D  1103               	clrz
  5618  061E  1803               	skipnc
  5619  061F  3E01               	addlw	1
  5620  0620  1903               	skipnz
  5621  0621  2E23               	goto	u2723
  5622  0622  07DF               	addwf	___flmul@grs+3,f
  5623  0623                     u2723:
  5624  0623                     l2164:
  5625  0623  084F               	movf	___flmul@b+1,w
  5626  0624  00D6               	movwf	??___flmul
  5627  0625  0856               	movf	??___flmul,w
  5628  0626  00F0               	movwf	__Umul8_16@multiplicand
  5629  0627  0854               	movf	___flmul@a+2,w
  5630  0628  160A  118A  2740  120A  118A  	fcall	__Umul8_16
  5631  062D  0871               	movf	?__Umul8_16+1,w
  5632  062E  1283               	bcf	3,5	;RP0=0, select bank0
  5633  062F  1303               	bcf	3,6	;RP1=0, select bank0
  5634  0630  00E7               	movwf	___flmul@temp+1
  5635  0631  0870               	movf	?__Umul8_16,w
  5636  0632  00E6               	movwf	___flmul@temp
  5637  0633  0866               	movf	___flmul@temp,w
  5638  0634  00D6               	movwf	??___flmul
  5639  0635  0867               	movf	___flmul@temp+1,w
  5640  0636  00D7               	movwf	??___flmul+1
  5641  0637  01D8               	clrf	??___flmul+2
  5642  0638  01D9               	clrf	??___flmul+3
  5643  0639  0856               	movf	??___flmul,w
  5644  063A  07E2               	addwf	___flmul@prod,f
  5645  063B  0857               	movf	??___flmul+1,w
  5646  063C  1103               	clrz
  5647  063D  1803               	skipnc
  5648  063E  3E01               	addlw	1
  5649  063F  1903               	skipnz
  5650  0640  2E42               	goto	u2731
  5651  0641  07E3               	addwf	___flmul@prod+1,f
  5652  0642                     u2731:
  5653  0642  0858               	movf	??___flmul+2,w
  5654  0643  1103               	clrz
  5655  0644  1803               	skipnc
  5656  0645  3E01               	addlw	1
  5657  0646  1903               	skipnz
  5658  0647  2E49               	goto	u2732
  5659  0648  07E4               	addwf	___flmul@prod+2,f
  5660  0649                     u2732:
  5661  0649  0859               	movf	??___flmul+3,w
  5662  064A  1103               	clrz
  5663  064B  1803               	skipnc
  5664  064C  3E01               	addlw	1
  5665  064D  1903               	skipnz
  5666  064E  2E50               	goto	u2733
  5667  064F  07E5               	addwf	___flmul@prod+3,f
  5668  0650                     u2733:
  5669  0650                     l2166:
  5670  0650  0850               	movf	___flmul@b+2,w
  5671  0651  00D6               	movwf	??___flmul
  5672  0652  0856               	movf	??___flmul,w
  5673  0653  00F0               	movwf	__Umul8_16@multiplicand
  5674  0654  0853               	movf	___flmul@a+1,w
  5675  0655  160A  118A  2740  120A  118A  	fcall	__Umul8_16
  5676  065A  0871               	movf	?__Umul8_16+1,w
  5677  065B  1283               	bcf	3,5	;RP0=0, select bank0
  5678  065C  1303               	bcf	3,6	;RP1=0, select bank0
  5679  065D  00E7               	movwf	___flmul@temp+1
  5680  065E  0870               	movf	?__Umul8_16,w
  5681  065F  00E6               	movwf	___flmul@temp
  5682  0660                     l2168:
  5683  0660  0866               	movf	___flmul@temp,w
  5684  0661  00D6               	movwf	??___flmul
  5685  0662  0867               	movf	___flmul@temp+1,w
  5686  0663  00D7               	movwf	??___flmul+1
  5687  0664  01D8               	clrf	??___flmul+2
  5688  0665  01D9               	clrf	??___flmul+3
  5689  0666  0856               	movf	??___flmul,w
  5690  0667  07E2               	addwf	___flmul@prod,f
  5691  0668  0857               	movf	??___flmul+1,w
  5692  0669  1103               	clrz
  5693  066A  1803               	skipnc
  5694  066B  3E01               	addlw	1
  5695  066C  1903               	skipnz
  5696  066D  2E6F               	goto	u2741
  5697  066E  07E3               	addwf	___flmul@prod+1,f
  5698  066F                     u2741:
  5699  066F  0858               	movf	??___flmul+2,w
  5700  0670  1103               	clrz
  5701  0671  1803               	skipnc
  5702  0672  3E01               	addlw	1
  5703  0673  1903               	skipnz
  5704  0674  2E76               	goto	u2742
  5705  0675  07E4               	addwf	___flmul@prod+2,f
  5706  0676                     u2742:
  5707  0676  0859               	movf	??___flmul+3,w
  5708  0677  1103               	clrz
  5709  0678  1803               	skipnc
  5710  0679  3E01               	addlw	1
  5711  067A  1903               	skipnz
  5712  067B  2E7D               	goto	u2743
  5713  067C  07E5               	addwf	___flmul@prod+3,f
  5714  067D                     u2743:
  5715  067D  0850               	movf	___flmul@b+2,w
  5716  067E  00D6               	movwf	??___flmul
  5717  067F  0856               	movf	??___flmul,w
  5718  0680  00F0               	movwf	__Umul8_16@multiplicand
  5719  0681  0854               	movf	___flmul@a+2,w
  5720  0682  160A  118A  2740  120A  118A  	fcall	__Umul8_16
  5721  0687  0871               	movf	?__Umul8_16+1,w
  5722  0688  1283               	bcf	3,5	;RP0=0, select bank0
  5723  0689  1303               	bcf	3,6	;RP1=0, select bank0
  5724  068A  00E7               	movwf	___flmul@temp+1
  5725  068B  0870               	movf	?__Umul8_16,w
  5726  068C  00E6               	movwf	___flmul@temp
  5727  068D                     l2170:
  5728  068D  0866               	movf	___flmul@temp,w
  5729  068E  00D6               	movwf	??___flmul
  5730  068F  0867               	movf	___flmul@temp+1,w
  5731  0690  00D7               	movwf	??___flmul+1
  5732  0691  01D8               	clrf	??___flmul+2
  5733  0692  01D9               	clrf	??___flmul+3
  5734  0693  3008               	movlw	8
  5735  0694                     u2755:
  5736  0694  1003               	clrc
  5737  0695  0DD6               	rlf	??___flmul,f
  5738  0696  0DD7               	rlf	??___flmul+1,f
  5739  0697  0DD8               	rlf	??___flmul+2,f
  5740  0698  0DD9               	rlf	??___flmul+3,f
  5741  0699                     u2750:
  5742  0699  3EFF               	addlw	-1
  5743  069A  1D03               	skipz
  5744  069B  2E94               	goto	u2755
  5745  069C  0856               	movf	??___flmul,w
  5746  069D  07E2               	addwf	___flmul@prod,f
  5747  069E  0857               	movf	??___flmul+1,w
  5748  069F  1103               	clrz
  5749  06A0  1803               	skipnc
  5750  06A1  3E01               	addlw	1
  5751  06A2  1903               	skipnz
  5752  06A3  2EA5               	goto	u2761
  5753  06A4  07E3               	addwf	___flmul@prod+1,f
  5754  06A5                     u2761:
  5755  06A5  0858               	movf	??___flmul+2,w
  5756  06A6  1103               	clrz
  5757  06A7  1803               	skipnc
  5758  06A8  3E01               	addlw	1
  5759  06A9  1903               	skipnz
  5760  06AA  2EAC               	goto	u2762
  5761  06AB  07E4               	addwf	___flmul@prod+2,f
  5762  06AC                     u2762:
  5763  06AC  0859               	movf	??___flmul+3,w
  5764  06AD  1103               	clrz
  5765  06AE  1803               	skipnc
  5766  06AF  3E01               	addlw	1
  5767  06B0  1903               	skipnz
  5768  06B1  2EB3               	goto	u2763
  5769  06B2  07E5               	addwf	___flmul@prod+3,f
  5770  06B3                     u2763:
  5771  06B3                     l2172:
  5772  06B3  085C               	movf	___flmul@grs,w
  5773  06B4  00D6               	movwf	??___flmul
  5774  06B5  085D               	movf	___flmul@grs+1,w
  5775  06B6  00D7               	movwf	??___flmul+1
  5776  06B7  085E               	movf	___flmul@grs+2,w
  5777  06B8  00D8               	movwf	??___flmul+2
  5778  06B9  085F               	movf	___flmul@grs+3,w
  5779  06BA  00D9               	movwf	??___flmul+3
  5780  06BB  3018               	movlw	24
  5781  06BC                     u2775:
  5782  06BC  1003               	clrc
  5783  06BD  0CD9               	rrf	??___flmul+3,f
  5784  06BE  0CD8               	rrf	??___flmul+2,f
  5785  06BF  0CD7               	rrf	??___flmul+1,f
  5786  06C0  0CD6               	rrf	??___flmul,f
  5787  06C1                     u2770:
  5788  06C1  3EFF               	addlw	-1
  5789  06C2  1D03               	skipz
  5790  06C3  2EBC               	goto	u2775
  5791  06C4  0856               	movf	??___flmul,w
  5792  06C5  07E2               	addwf	___flmul@prod,f
  5793  06C6  0857               	movf	??___flmul+1,w
  5794  06C7  1103               	clrz
  5795  06C8  1803               	skipnc
  5796  06C9  3E01               	addlw	1
  5797  06CA  1903               	skipnz
  5798  06CB  2ECD               	goto	u2781
  5799  06CC  07E3               	addwf	___flmul@prod+1,f
  5800  06CD                     u2781:
  5801  06CD  0858               	movf	??___flmul+2,w
  5802  06CE  1103               	clrz
  5803  06CF  1803               	skipnc
  5804  06D0  3E01               	addlw	1
  5805  06D1  1903               	skipnz
  5806  06D2  2ED4               	goto	u2782
  5807  06D3  07E4               	addwf	___flmul@prod+2,f
  5808  06D4                     u2782:
  5809  06D4  0859               	movf	??___flmul+3,w
  5810  06D5  1103               	clrz
  5811  06D6  1803               	skipnc
  5812  06D7  3E01               	addlw	1
  5813  06D8  1903               	skipnz
  5814  06D9  2EDB               	goto	u2783
  5815  06DA  07E5               	addwf	___flmul@prod+3,f
  5816  06DB                     u2783:
  5817  06DB                     l2174:
  5818  06DB  3008               	movlw	8
  5819  06DC  00D6               	movwf	??___flmul
  5820  06DD                     u2795:
  5821  06DD  1003               	clrc
  5822  06DE  0DDC               	rlf	___flmul@grs,f
  5823  06DF  0DDD               	rlf	___flmul@grs+1,f
  5824  06E0  0DDE               	rlf	___flmul@grs+2,f
  5825  06E1  0DDF               	rlf	___flmul@grs+3,f
  5826  06E2  0BD6               	decfsz	??___flmul,f
  5827  06E3  2EDD               	goto	u2795
  5828  06E4                     l2176:
  5829  06E4  0861               	movf	___flmul@bexp,w
  5830  06E5  0760               	addwf	___flmul@aexp,w
  5831  06E6  00D6               	movwf	??___flmul
  5832  06E7  01D7               	clrf	??___flmul+1
  5833  06E8  0DD7               	rlf	??___flmul+1,f
  5834  06E9  0856               	movf	??___flmul,w
  5835  06EA  3E82               	addlw	130
  5836  06EB  00E6               	movwf	___flmul@temp
  5837  06EC  0857               	movf	??___flmul+1,w
  5838  06ED  1803               	skipnc
  5839  06EE  3E01               	addlw	1
  5840  06EF  3EFF               	addlw	255
  5841  06F0  00E7               	movwf	___flmul@temp+1
  5842  06F1  2F0F               	goto	l2188
  5843  06F2                     l2178:
  5844  06F2  3001               	movlw	1
  5845  06F3  00D6               	movwf	??___flmul
  5846  06F4                     u2805:
  5847  06F4  1003               	clrc
  5848  06F5  0DE2               	rlf	___flmul@prod,f
  5849  06F6  0DE3               	rlf	___flmul@prod+1,f
  5850  06F7  0DE4               	rlf	___flmul@prod+2,f
  5851  06F8  0DE5               	rlf	___flmul@prod+3,f
  5852  06F9  0BD6               	decfsz	??___flmul,f
  5853  06FA  2EF4               	goto	u2805
  5854  06FB                     l2180:
  5855  06FB  1FDF               	btfss	___flmul@grs+3,7
  5856  06FC  2EFE               	goto	u2811
  5857  06FD  2EFF               	goto	u2810
  5858  06FE                     u2811:
  5859  06FE  2F00               	goto	l2184
  5860  06FF                     u2810:
  5861  06FF                     l2182:
  5862  06FF  1462               	bsf	___flmul@prod,0
  5863  0700                     l2184:
  5864  0700  3001               	movlw	1
  5865  0701  00D6               	movwf	??___flmul
  5866  0702                     u2825:
  5867  0702  1003               	clrc
  5868  0703  0DDC               	rlf	___flmul@grs,f
  5869  0704  0DDD               	rlf	___flmul@grs+1,f
  5870  0705  0DDE               	rlf	___flmul@grs+2,f
  5871  0706  0DDF               	rlf	___flmul@grs+3,f
  5872  0707  0BD6               	decfsz	??___flmul,f
  5873  0708  2F02               	goto	u2825
  5874  0709                     l2186:
  5875  0709  30FF               	movlw	255
  5876  070A  07E6               	addwf	___flmul@temp,f
  5877  070B  1803               	skipnc
  5878  070C  0AE7               	incf	___flmul@temp+1,f
  5879  070D  30FF               	movlw	255
  5880  070E  07E7               	addwf	___flmul@temp+1,f
  5881  070F                     l2188:
  5882  070F  1FE4               	btfss	___flmul@prod+2,7
  5883  0710  2F12               	goto	u2831
  5884  0711  2F13               	goto	u2830
  5885  0712                     u2831:
  5886  0712  2EF2               	goto	l2178
  5887  0713                     u2830:
  5888  0713                     l2190:
  5889  0713  01E0               	clrf	___flmul@aexp
  5890  0714                     l2192:
  5891  0714  1FDF               	btfss	___flmul@grs+3,7
  5892  0715  2F17               	goto	u2841
  5893  0716  2F18               	goto	u2840
  5894  0717                     u2841:
  5895  0717  2F34               	goto	l2200
  5896  0718                     u2840:
  5897  0718                     l2194:
  5898  0718  30FF               	movlw	255
  5899  0719  055C               	andwf	___flmul@grs,w
  5900  071A  00D6               	movwf	??___flmul
  5901  071B  30FF               	movlw	255
  5902  071C  055D               	andwf	___flmul@grs+1,w
  5903  071D  00D7               	movwf	??___flmul+1
  5904  071E  30FF               	movlw	255
  5905  071F  055E               	andwf	___flmul@grs+2,w
  5906  0720  00D8               	movwf	??___flmul+2
  5907  0721  307F               	movlw	127
  5908  0722  055F               	andwf	___flmul@grs+3,w
  5909  0723  00D9               	movwf	??___flmul+3
  5910  0724  0859               	movf	??___flmul+3,w
  5911  0725  0458               	iorwf	??___flmul+2,w
  5912  0726  0457               	iorwf	??___flmul+1,w
  5913  0727  0456               	iorwf	??___flmul,w
  5914  0728  1903               	skipnz
  5915  0729  2F2B               	goto	u2851
  5916  072A  2F2C               	goto	u2850
  5917  072B                     u2851:
  5918  072B  2F2F               	goto	l757
  5919  072C                     u2850:
  5920  072C                     l2196:
  5921  072C  01E0               	clrf	___flmul@aexp
  5922  072D  0AE0               	incf	___flmul@aexp,f
  5923  072E  2F34               	goto	l2200
  5924  072F                     l757:
  5925  072F  1C62               	btfss	___flmul@prod,0
  5926  0730  2F32               	goto	u2861
  5927  0731  2F33               	goto	u2860
  5928  0732                     u2861:
  5929  0732  2F34               	goto	l2200
  5930  0733                     u2860:
  5931  0733  2F2C               	goto	l2196
  5932  0734                     l2200:
  5933  0734  0860               	movf	___flmul@aexp,w
  5934  0735  1903               	btfsc	3,2
  5935  0736  2F38               	goto	u2871
  5936  0737  2F39               	goto	u2870
  5937  0738                     u2871:
  5938  0738  2F6A               	goto	l2210
  5939  0739                     u2870:
  5940  0739                     l2202:
  5941  0739  3001               	movlw	1
  5942  073A  07E2               	addwf	___flmul@prod,f
  5943  073B  3000               	movlw	0
  5944  073C  1803               	skipnc
  5945  073D  3001               	movlw	1
  5946  073E  07E3               	addwf	___flmul@prod+1,f
  5947  073F  3000               	movlw	0
  5948  0740  1803               	skipnc
  5949  0741  3001               	movlw	1
  5950  0742  07E4               	addwf	___flmul@prod+2,f
  5951  0743  3000               	movlw	0
  5952  0744  1803               	skipnc
  5953  0745  3001               	movlw	1
  5954  0746  07E5               	addwf	___flmul@prod+3,f
  5955  0747                     l2204:
  5956  0747  1C65               	btfss	___flmul@prod+3,0
  5957  0748  2F4A               	goto	u2881
  5958  0749  2F4B               	goto	u2880
  5959  074A                     u2881:
  5960  074A  2F6A               	goto	l2210
  5961  074B                     u2880:
  5962  074B                     l2206:
  5963  074B  0862               	movf	___flmul@prod,w
  5964  074C  00D6               	movwf	??___flmul
  5965  074D  0863               	movf	___flmul@prod+1,w
  5966  074E  00D7               	movwf	??___flmul+1
  5967  074F  0864               	movf	___flmul@prod+2,w
  5968  0750  00D8               	movwf	??___flmul+2
  5969  0751  0865               	movf	___flmul@prod+3,w
  5970  0752  00D9               	movwf	??___flmul+3
  5971  0753  3001               	movlw	1
  5972  0754  00DA               	movwf	??___flmul+4
  5973  0755                     u2895:
  5974  0755  0D59               	rlf	??___flmul+3,w
  5975  0756  0CD9               	rrf	??___flmul+3,f
  5976  0757  0CD8               	rrf	??___flmul+2,f
  5977  0758  0CD7               	rrf	??___flmul+1,f
  5978  0759  0CD6               	rrf	??___flmul,f
  5979  075A                     u2890:
  5980  075A  0BDA               	decfsz	??___flmul+4,f
  5981  075B  2F55               	goto	u2895
  5982  075C  0859               	movf	??___flmul+3,w
  5983  075D  00E5               	movwf	___flmul@prod+3
  5984  075E  0858               	movf	??___flmul+2,w
  5985  075F  00E4               	movwf	___flmul@prod+2
  5986  0760  0857               	movf	??___flmul+1,w
  5987  0761  00E3               	movwf	___flmul@prod+1
  5988  0762  0856               	movf	??___flmul,w
  5989  0763  00E2               	movwf	___flmul@prod
  5990  0764                     l2208:
  5991  0764  3001               	movlw	1
  5992  0765  07E6               	addwf	___flmul@temp,f
  5993  0766  1803               	skipnc
  5994  0767  0AE7               	incf	___flmul@temp+1,f
  5995  0768  3000               	movlw	0
  5996  0769  07E7               	addwf	___flmul@temp+1,f
  5997  076A                     l2210:
  5998  076A  0867               	movf	___flmul@temp+1,w
  5999  076B  3A80               	xorlw	128
  6000  076C  00FF               	movwf	btemp+1
  6001  076D  3080               	movlw	128
  6002  076E  027F               	subwf	btemp+1,w
  6003  076F  1D03               	skipz
  6004  0770  2F73               	goto	u2905
  6005  0771  30FF               	movlw	255
  6006  0772  0266               	subwf	___flmul@temp,w
  6007  0773                     u2905:
  6008  0773  1C03               	skipc
  6009  0774  2F76               	goto	u2901
  6010  0775  2F77               	goto	u2900
  6011  0776                     u2901:
  6012  0776  2F82               	goto	l2214
  6013  0777                     u2900:
  6014  0777                     l2212:
  6015  0777  307F               	movlw	127
  6016  0778  1283               	bcf	3,5	;RP0=0, select bank0
  6017  0779  1303               	bcf	3,6	;RP1=0, select bank0
  6018  077A  00E5               	movwf	___flmul@prod+3
  6019  077B  3080               	movlw	128
  6020  077C  00E4               	movwf	___flmul@prod+2
  6021  077D  3000               	movlw	0
  6022  077E  00E3               	movwf	___flmul@prod+1
  6023  077F  3000               	movlw	0
  6024  0780  00E2               	movwf	___flmul@prod
  6025  0781  2FB7               	goto	l763
  6026  0782                     l2214:
  6027  0782  1283               	bcf	3,5	;RP0=0, select bank0
  6028  0783  1303               	bcf	3,6	;RP1=0, select bank0
  6029  0784  0867               	movf	___flmul@temp+1,w
  6030  0785  3A80               	xorlw	128
  6031  0786  00FF               	movwf	btemp+1
  6032  0787  3080               	movlw	128
  6033  0788  027F               	subwf	btemp+1,w
  6034  0789  1D03               	skipz
  6035  078A  2F8D               	goto	u2915
  6036  078B  3001               	movlw	1
  6037  078C  0266               	subwf	___flmul@temp,w
  6038  078D                     u2915:
  6039  078D  1803               	skipnc
  6040  078E  2F90               	goto	u2911
  6041  078F  2F91               	goto	u2910
  6042  0790                     u2911:
  6043  0790  2F9D               	goto	l2220
  6044  0791                     u2910:
  6045  0791                     l2216:
  6046  0791  3000               	movlw	0
  6047  0792  1283               	bcf	3,5	;RP0=0, select bank0
  6048  0793  1303               	bcf	3,6	;RP1=0, select bank0
  6049  0794  00E5               	movwf	___flmul@prod+3
  6050  0795  3000               	movlw	0
  6051  0796  00E4               	movwf	___flmul@prod+2
  6052  0797  3000               	movlw	0
  6053  0798  00E3               	movwf	___flmul@prod+1
  6054  0799  3000               	movlw	0
  6055  079A  00E2               	movwf	___flmul@prod
  6056  079B                     l2218:
  6057  079B  01DB               	clrf	___flmul@sign
  6058  079C  2FB7               	goto	l763
  6059  079D                     l2220:
  6060  079D  1283               	bcf	3,5	;RP0=0, select bank0
  6061  079E  1303               	bcf	3,6	;RP1=0, select bank0
  6062  079F  0866               	movf	___flmul@temp,w
  6063  07A0  00D6               	movwf	??___flmul
  6064  07A1  0856               	movf	??___flmul,w
  6065  07A2  00E1               	movwf	___flmul@bexp
  6066  07A3  30FF               	movlw	255
  6067  07A4  05E2               	andwf	___flmul@prod,f
  6068  07A5  30FF               	movlw	255
  6069  07A6  05E3               	andwf	___flmul@prod+1,f
  6070  07A7  307F               	movlw	127
  6071  07A8  05E4               	andwf	___flmul@prod+2,f
  6072  07A9  3000               	movlw	0
  6073  07AA  05E5               	andwf	___flmul@prod+3,f
  6074  07AB                     l2222:
  6075  07AB  1C61               	btfss	___flmul@bexp,0
  6076  07AC  2FAE               	goto	u2921
  6077  07AD  2FAF               	goto	u2920
  6078  07AE                     u2921:
  6079  07AE  2FB0               	goto	l2226
  6080  07AF                     u2920:
  6081  07AF                     l2224:
  6082  07AF  17E4               	bsf	___flmul@prod+2,7
  6083  07B0                     l2226:
  6084  07B0  0861               	movf	___flmul@bexp,w
  6085  07B1  00D6               	movwf	??___flmul
  6086  07B2  1003               	clrc
  6087  07B3  0C56               	rrf	??___flmul,w
  6088  07B4  00D7               	movwf	??___flmul+1
  6089  07B5  0857               	movf	??___flmul+1,w
  6090  07B6  00E5               	movwf	___flmul@prod+3
  6091  07B7                     l763:
  6092  07B7  085B               	movf	___flmul@sign,w
  6093  07B8  00D6               	movwf	??___flmul
  6094  07B9  0856               	movf	??___flmul,w
  6095  07BA  04E5               	iorwf	___flmul@prod+3,f
  6096  07BB                     l2228:
  6097  07BB  0865               	movf	___flmul@prod+3,w
  6098  07BC  00D1               	movwf	?___flmul+3
  6099  07BD  0864               	movf	___flmul@prod+2,w
  6100  07BE  00D0               	movwf	?___flmul+2
  6101  07BF  0863               	movf	___flmul@prod+1,w
  6102  07C0  00CF               	movwf	?___flmul+1
  6103  07C1  0862               	movf	___flmul@prod,w
  6104  07C2  00CE               	movwf	?___flmul
  6105  07C3                     l751:
  6106  07C3  0008               	return
  6107  07C4                     __end_of___flmul:
  6108                           
  6109                           	psect	text22
  6110  1740                     __ptext22:	
  6111 ;; *************** function __Umul8_16 *****************
  6112 ;; Defined at:
  6113 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8_16.c"
  6114 ;; Parameters:    Size  Location     Type
  6115 ;;  multiplier      1    wreg     unsigned char 
  6116 ;;  multiplicand    1    0[COMMON] unsigned char 
  6117 ;; Auto vars:     Size  Location     Type
  6118 ;;  multiplier      1    8[COMMON] unsigned char 
  6119 ;;  word_mpld       2    6[COMMON] unsigned int 
  6120 ;;  product         2    4[COMMON] unsigned int 
  6121 ;; Return value:  Size  Location     Type
  6122 ;;                  2    0[COMMON] unsigned int 
  6123 ;; Registers used:
  6124 ;;		wreg, status,2, status,0
  6125 ;; Tracked objects:
  6126 ;;		On entry : 0/0
  6127 ;;		On exit  : 0/0
  6128 ;;		Unchanged: 0/0
  6129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6130 ;;      Params:         2       0       0       0       0
  6131 ;;      Locals:         5       0       0       0       0
  6132 ;;      Temps:          2       0       0       0       0
  6133 ;;      Totals:         9       0       0       0       0
  6134 ;;Total ram usage:        9 bytes
  6135 ;; Hardware stack levels used: 1
  6136 ;; This function calls:
  6137 ;;		Nothing
  6138 ;; This function is called by:
  6139 ;;		___flmul
  6140 ;; This function uses a non-reentrant model
  6141 ;;
  6142                           
  6143                           
  6144                           ;psect for function __Umul8_16
  6145  1740                     __Umul8_16:
  6146                           
  6147                           ;incstack = 0
  6148                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6149                           ;__Umul8_16@multiplier stored from wreg
  6150  1740  00F8               	movwf	__Umul8_16@multiplier
  6151  1741                     l1840:
  6152  1741  01F4               	clrf	__Umul8_16@product
  6153  1742  01F5               	clrf	__Umul8_16@product+1
  6154  1743                     l1842:
  6155  1743  0870               	movf	__Umul8_16@multiplicand,w
  6156  1744  00F2               	movwf	??__Umul8_16
  6157  1745  01F3               	clrf	??__Umul8_16+1
  6158  1746  0872               	movf	??__Umul8_16,w
  6159  1747  00F6               	movwf	__Umul8_16@word_mpld
  6160  1748  0873               	movf	??__Umul8_16+1,w
  6161  1749  00F7               	movwf	__Umul8_16@word_mpld+1
  6162  174A                     l1844:
  6163  174A  1C78               	btfss	__Umul8_16@multiplier,0
  6164  174B  2F4D               	goto	u1991
  6165  174C  2F4E               	goto	u1990
  6166  174D                     u1991:
  6167  174D  2F54               	goto	l770
  6168  174E                     u1990:
  6169  174E                     l1846:
  6170  174E  0876               	movf	__Umul8_16@word_mpld,w
  6171  174F  07F4               	addwf	__Umul8_16@product,f
  6172  1750  1803               	skipnc
  6173  1751  0AF5               	incf	__Umul8_16@product+1,f
  6174  1752  0877               	movf	__Umul8_16@word_mpld+1,w
  6175  1753  07F5               	addwf	__Umul8_16@product+1,f
  6176  1754                     l770:
  6177  1754  3001               	movlw	1
  6178  1755                     u2005:
  6179  1755  1003               	clrc
  6180  1756  0DF6               	rlf	__Umul8_16@word_mpld,f
  6181  1757  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  6182  1758  3EFF               	addlw	-1
  6183  1759  1D03               	skipz
  6184  175A  2F55               	goto	u2005
  6185  175B  1003               	clrc
  6186  175C  0CF8               	rrf	__Umul8_16@multiplier,f
  6187  175D                     l1848:
  6188  175D  0878               	movf	__Umul8_16@multiplier,w
  6189  175E  1D03               	btfss	3,2
  6190  175F  2F61               	goto	u2011
  6191  1760  2F62               	goto	u2010
  6192  1761                     u2011:
  6193  1761  2F4A               	goto	l1844
  6194  1762                     u2010:
  6195  1762                     l1850:
  6196  1762  0875               	movf	__Umul8_16@product+1,w
  6197  1763  00F1               	movwf	?__Umul8_16+1
  6198  1764  0874               	movf	__Umul8_16@product,w
  6199  1765  00F0               	movwf	?__Umul8_16
  6200  1766                     l772:
  6201  1766  0008               	return
  6202  1767                     __end_of__Umul8_16:
  6203                           
  6204                           	psect	text23
  6205  0286                     __ptext23:	
  6206 ;; *************** function ___fldiv *****************
  6207 ;; Defined at:
  6208 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcdiv.c"
  6209 ;; Parameters:    Size  Location     Type
  6210 ;;  a               4   20[BANK0 ] unsigned int 
  6211 ;;  b               4   24[BANK0 ] unsigned int 
  6212 ;; Auto vars:     Size  Location     Type
  6213 ;;  grs             4   40[BANK0 ] unsigned long 
  6214 ;;  rem             4   33[BANK0 ] unsigned long 
  6215 ;;  new_exp         2   38[BANK0 ] int 
  6216 ;;  aexp            1   45[BANK0 ] unsigned char 
  6217 ;;  bexp            1   44[BANK0 ] unsigned char 
  6218 ;;  sign            1   37[BANK0 ] unsigned char 
  6219 ;; Return value:  Size  Location     Type
  6220 ;;                  4   20[BANK0 ] unsigned char 
  6221 ;; Registers used:
  6222 ;;		wreg, status,2, status,0, btemp+1
  6223 ;; Tracked objects:
  6224 ;;		On entry : 0/0
  6225 ;;		On exit  : 0/0
  6226 ;;		Unchanged: 0/0
  6227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6228 ;;      Params:         0       8       0       0       0
  6229 ;;      Locals:         0      13       0       0       0
  6230 ;;      Temps:          0       5       0       0       0
  6231 ;;      Totals:         0      26       0       0       0
  6232 ;;Total ram usage:       26 bytes
  6233 ;; Hardware stack levels used: 1
  6234 ;; This function calls:
  6235 ;;		Nothing
  6236 ;; This function is called by:
  6237 ;;		_realizarCalculo
  6238 ;;		_PWM1_Duty
  6239 ;;		_PWM2_Duty
  6240 ;; This function uses a non-reentrant model
  6241 ;;
  6242                           
  6243                           
  6244                           ;psect for function ___fldiv
  6245  0286                     ___fldiv:
  6246  0286                     l1950:	
  6247                           ;incstack = 0
  6248                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  6249                           
  6250  0286  1283               	bcf	3,5	;RP0=0, select bank0
  6251  0287  1303               	bcf	3,6	;RP1=0, select bank0
  6252  0288  083B               	movf	___fldiv@b+3,w
  6253  0289  3980               	andlw	128
  6254  028A  00BC               	movwf	??___fldiv
  6255  028B  083C               	movf	??___fldiv,w
  6256  028C  00C5               	movwf	___fldiv@sign
  6257  028D                     l1952:
  6258  028D  083B               	movf	___fldiv@b+3,w
  6259  028E  00BC               	movwf	??___fldiv
  6260  028F  073C               	addwf	??___fldiv,w
  6261  0290  00BD               	movwf	??___fldiv+1
  6262  0291  083D               	movf	??___fldiv+1,w
  6263  0292  00CC               	movwf	___fldiv@bexp
  6264  0293                     l1954:
  6265  0293  1FBA               	btfss	___fldiv@b+2,7
  6266  0294  2A96               	goto	u2271
  6267  0295  2A97               	goto	u2270
  6268  0296                     u2271:
  6269  0296  2A98               	goto	l1958
  6270  0297                     u2270:
  6271  0297                     l1956:
  6272  0297  144C               	bsf	___fldiv@bexp,0
  6273  0298                     l1958:
  6274  0298  084C               	movf	___fldiv@bexp,w
  6275  0299  1903               	btfsc	3,2
  6276  029A  2A9C               	goto	u2281
  6277  029B  2A9D               	goto	u2280
  6278  029C                     u2281:
  6279  029C  2AAD               	goto	l1968
  6280  029D                     u2280:
  6281  029D                     l1960:
  6282  029D  0A4C               	incf	___fldiv@bexp,w
  6283  029E  1D03               	btfss	3,2
  6284  029F  2AA1               	goto	u2291
  6285  02A0  2AA2               	goto	u2290
  6286  02A1                     u2291:
  6287  02A1  2AAA               	goto	l1964
  6288  02A2                     u2290:
  6289  02A2                     l1962:
  6290  02A2  3000               	movlw	0
  6291  02A3  00BB               	movwf	___fldiv@b+3
  6292  02A4  3000               	movlw	0
  6293  02A5  00BA               	movwf	___fldiv@b+2
  6294  02A6  3000               	movlw	0
  6295  02A7  00B9               	movwf	___fldiv@b+1
  6296  02A8  3000               	movlw	0
  6297  02A9  00B8               	movwf	___fldiv@b
  6298  02AA                     l1964:
  6299  02AA  17BA               	bsf	___fldiv@b+2,7
  6300  02AB                     l1966:
  6301  02AB  01BB               	clrf	___fldiv@b+3
  6302  02AC  2AB5               	goto	l1970
  6303  02AD                     l1968:
  6304  02AD  3000               	movlw	0
  6305  02AE  00BB               	movwf	___fldiv@b+3
  6306  02AF  3000               	movlw	0
  6307  02B0  00BA               	movwf	___fldiv@b+2
  6308  02B1  3000               	movlw	0
  6309  02B2  00B9               	movwf	___fldiv@b+1
  6310  02B3  3000               	movlw	0
  6311  02B4  00B8               	movwf	___fldiv@b
  6312  02B5                     l1970:
  6313  02B5  0837               	movf	___fldiv@a+3,w
  6314  02B6  3980               	andlw	128
  6315  02B7  00BC               	movwf	??___fldiv
  6316  02B8  083C               	movf	??___fldiv,w
  6317  02B9  06C5               	xorwf	___fldiv@sign,f
  6318  02BA                     l1972:
  6319  02BA  0837               	movf	___fldiv@a+3,w
  6320  02BB  00BC               	movwf	??___fldiv
  6321  02BC  073C               	addwf	??___fldiv,w
  6322  02BD  00BD               	movwf	??___fldiv+1
  6323  02BE  083D               	movf	??___fldiv+1,w
  6324  02BF  00CD               	movwf	___fldiv@aexp
  6325  02C0                     l1974:
  6326  02C0  1FB6               	btfss	___fldiv@a+2,7
  6327  02C1  2AC3               	goto	u2301
  6328  02C2  2AC4               	goto	u2300
  6329  02C3                     u2301:
  6330  02C3  2AC5               	goto	l1978
  6331  02C4                     u2300:
  6332  02C4                     l1976:
  6333  02C4  144D               	bsf	___fldiv@aexp,0
  6334  02C5                     l1978:
  6335  02C5  084D               	movf	___fldiv@aexp,w
  6336  02C6  1903               	btfsc	3,2
  6337  02C7  2AC9               	goto	u2311
  6338  02C8  2ACA               	goto	u2310
  6339  02C9                     u2311:
  6340  02C9  2ADA               	goto	l1988
  6341  02CA                     u2310:
  6342  02CA                     l1980:
  6343  02CA  0A4D               	incf	___fldiv@aexp,w
  6344  02CB  1D03               	btfss	3,2
  6345  02CC  2ACE               	goto	u2321
  6346  02CD  2ACF               	goto	u2320
  6347  02CE                     u2321:
  6348  02CE  2AD7               	goto	l1984
  6349  02CF                     u2320:
  6350  02CF                     l1982:
  6351  02CF  3000               	movlw	0
  6352  02D0  00B7               	movwf	___fldiv@a+3
  6353  02D1  3000               	movlw	0
  6354  02D2  00B6               	movwf	___fldiv@a+2
  6355  02D3  3000               	movlw	0
  6356  02D4  00B5               	movwf	___fldiv@a+1
  6357  02D5  3000               	movlw	0
  6358  02D6  00B4               	movwf	___fldiv@a
  6359  02D7                     l1984:
  6360  02D7  17B6               	bsf	___fldiv@a+2,7
  6361  02D8                     l1986:
  6362  02D8  01B7               	clrf	___fldiv@a+3
  6363  02D9  2AE2               	goto	l711
  6364  02DA                     l1988:
  6365  02DA  3000               	movlw	0
  6366  02DB  00B7               	movwf	___fldiv@a+3
  6367  02DC  3000               	movlw	0
  6368  02DD  00B6               	movwf	___fldiv@a+2
  6369  02DE  3000               	movlw	0
  6370  02DF  00B5               	movwf	___fldiv@a+1
  6371  02E0  3000               	movlw	0
  6372  02E1  00B4               	movwf	___fldiv@a
  6373  02E2                     l711:
  6374  02E2  0837               	movf	___fldiv@a+3,w
  6375  02E3  0436               	iorwf	___fldiv@a+2,w
  6376  02E4  0435               	iorwf	___fldiv@a+1,w
  6377  02E5  0434               	iorwf	___fldiv@a,w
  6378  02E6  1D03               	skipz
  6379  02E7  2AE9               	goto	u2331
  6380  02E8  2AEA               	goto	u2330
  6381  02E9                     u2331:
  6382  02E9  2B03               	goto	l1998
  6383  02EA                     u2330:
  6384  02EA                     l1990:
  6385  02EA  3000               	movlw	0
  6386  02EB  00BB               	movwf	___fldiv@b+3
  6387  02EC  3000               	movlw	0
  6388  02ED  00BA               	movwf	___fldiv@b+2
  6389  02EE  3000               	movlw	0
  6390  02EF  00B9               	movwf	___fldiv@b+1
  6391  02F0  3000               	movlw	0
  6392  02F1  00B8               	movwf	___fldiv@b
  6393  02F2  3080               	movlw	128
  6394  02F3  04BA               	iorwf	___fldiv@b+2,f
  6395  02F4  307F               	movlw	127
  6396  02F5  04BB               	iorwf	___fldiv@b+3,f
  6397  02F6                     l1992:
  6398  02F6  0845               	movf	___fldiv@sign,w
  6399  02F7  00BC               	movwf	??___fldiv
  6400  02F8  083C               	movf	??___fldiv,w
  6401  02F9  04BB               	iorwf	___fldiv@b+3,f
  6402  02FA                     l1994:
  6403  02FA  083B               	movf	___fldiv@b+3,w
  6404  02FB  00B7               	movwf	?___fldiv+3
  6405  02FC  083A               	movf	___fldiv@b+2,w
  6406  02FD  00B6               	movwf	?___fldiv+2
  6407  02FE  0839               	movf	___fldiv@b+1,w
  6408  02FF  00B5               	movwf	?___fldiv+1
  6409  0300  0838               	movf	___fldiv@b,w
  6410  0301  00B4               	movwf	?___fldiv
  6411  0302  2C62               	goto	l713
  6412  0303                     l1998:
  6413  0303  084C               	movf	___fldiv@bexp,w
  6414  0304  1D03               	btfss	3,2
  6415  0305  2B07               	goto	u2341
  6416  0306  2B08               	goto	u2340
  6417  0307                     u2341:
  6418  0307  2B11               	goto	l2004
  6419  0308                     u2340:
  6420  0308                     l2000:
  6421  0308  3000               	movlw	0
  6422  0309  00B7               	movwf	?___fldiv+3
  6423  030A  3000               	movlw	0
  6424  030B  00B6               	movwf	?___fldiv+2
  6425  030C  3000               	movlw	0
  6426  030D  00B5               	movwf	?___fldiv+1
  6427  030E  3000               	movlw	0
  6428  030F  00B4               	movwf	?___fldiv
  6429  0310  2C62               	goto	l713
  6430  0311                     l2004:
  6431  0311  084C               	movf	___fldiv@bexp,w
  6432  0312  00BC               	movwf	??___fldiv
  6433  0313  01BD               	clrf	??___fldiv+1
  6434  0314  083D               	movf	??___fldiv+1,w
  6435  0315  00BF               	movwf	??___fldiv+3
  6436  0316  084D               	movf	___fldiv@aexp,w
  6437  0317  023C               	subwf	??___fldiv,w
  6438  0318  00BE               	movwf	??___fldiv+2
  6439  0319  1C03               	skipc
  6440  031A  03BF               	decf	??___fldiv+3,f
  6441  031B  083E               	movf	??___fldiv+2,w
  6442  031C  3E7F               	addlw	127
  6443  031D  00C6               	movwf	___fldiv@new_exp
  6444  031E  083F               	movf	??___fldiv+3,w
  6445  031F  1803               	skipnc
  6446  0320  3E01               	addlw	1
  6447  0321  3E00               	addlw	0
  6448  0322  00C7               	movwf	___fldiv@new_exp+1
  6449  0323                     l2006:
  6450  0323  083B               	movf	___fldiv@b+3,w
  6451  0324  00C4               	movwf	___fldiv@rem+3
  6452  0325  083A               	movf	___fldiv@b+2,w
  6453  0326  00C3               	movwf	___fldiv@rem+2
  6454  0327  0839               	movf	___fldiv@b+1,w
  6455  0328  00C2               	movwf	___fldiv@rem+1
  6456  0329  0838               	movf	___fldiv@b,w
  6457  032A  00C1               	movwf	___fldiv@rem
  6458  032B                     l2008:
  6459  032B  3000               	movlw	0
  6460  032C  00BB               	movwf	___fldiv@b+3
  6461  032D  3000               	movlw	0
  6462  032E  00BA               	movwf	___fldiv@b+2
  6463  032F  3000               	movlw	0
  6464  0330  00B9               	movwf	___fldiv@b+1
  6465  0331  3000               	movlw	0
  6466  0332  00B8               	movwf	___fldiv@b
  6467  0333                     l2010:
  6468  0333  3000               	movlw	0
  6469  0334  00CB               	movwf	___fldiv@grs+3
  6470  0335  3000               	movlw	0
  6471  0336  00CA               	movwf	___fldiv@grs+2
  6472  0337  3000               	movlw	0
  6473  0338  00C9               	movwf	___fldiv@grs+1
  6474  0339  3000               	movlw	0
  6475  033A  00C8               	movwf	___fldiv@grs
  6476  033B                     l2012:
  6477  033B  01CD               	clrf	___fldiv@aexp
  6478  033C  2B87               	goto	l2032
  6479  033D                     l2014:
  6480  033D  084D               	movf	___fldiv@aexp,w
  6481  033E  1903               	btfsc	3,2
  6482  033F  2B41               	goto	u2351
  6483  0340  2B42               	goto	u2350
  6484  0341                     u2351:
  6485  0341  2B62               	goto	l2024
  6486  0342                     u2350:
  6487  0342                     l2016:
  6488  0342  3001               	movlw	1
  6489  0343  00BC               	movwf	??___fldiv
  6490  0344                     u2365:
  6491  0344  1003               	clrc
  6492  0345  0DC1               	rlf	___fldiv@rem,f
  6493  0346  0DC2               	rlf	___fldiv@rem+1,f
  6494  0347  0DC3               	rlf	___fldiv@rem+2,f
  6495  0348  0DC4               	rlf	___fldiv@rem+3,f
  6496  0349  0BBC               	decfsz	??___fldiv,f
  6497  034A  2B44               	goto	u2365
  6498  034B  3001               	movlw	1
  6499  034C  00BC               	movwf	??___fldiv
  6500  034D                     u2375:
  6501  034D  1003               	clrc
  6502  034E  0DB8               	rlf	___fldiv@b,f
  6503  034F  0DB9               	rlf	___fldiv@b+1,f
  6504  0350  0DBA               	rlf	___fldiv@b+2,f
  6505  0351  0DBB               	rlf	___fldiv@b+3,f
  6506  0352  0BBC               	decfsz	??___fldiv,f
  6507  0353  2B4D               	goto	u2375
  6508  0354                     l2018:
  6509  0354  1FCB               	btfss	___fldiv@grs+3,7
  6510  0355  2B57               	goto	u2381
  6511  0356  2B58               	goto	u2380
  6512  0357                     u2381:
  6513  0357  2B59               	goto	l2022
  6514  0358                     u2380:
  6515  0358                     l2020:
  6516  0358  1438               	bsf	___fldiv@b,0
  6517  0359                     l2022:
  6518  0359  3001               	movlw	1
  6519  035A  00BC               	movwf	??___fldiv
  6520  035B                     u2395:
  6521  035B  1003               	clrc
  6522  035C  0DC8               	rlf	___fldiv@grs,f
  6523  035D  0DC9               	rlf	___fldiv@grs+1,f
  6524  035E  0DCA               	rlf	___fldiv@grs+2,f
  6525  035F  0DCB               	rlf	___fldiv@grs+3,f
  6526  0360  0BBC               	decfsz	??___fldiv,f
  6527  0361  2B5B               	goto	u2395
  6528  0362                     l2024:
  6529  0362  0837               	movf	___fldiv@a+3,w
  6530  0363  0244               	subwf	___fldiv@rem+3,w
  6531  0364  1D03               	skipz
  6532  0365  2B70               	goto	u2405
  6533  0366  0836               	movf	___fldiv@a+2,w
  6534  0367  0243               	subwf	___fldiv@rem+2,w
  6535  0368  1D03               	skipz
  6536  0369  2B70               	goto	u2405
  6537  036A  0835               	movf	___fldiv@a+1,w
  6538  036B  0242               	subwf	___fldiv@rem+1,w
  6539  036C  1D03               	skipz
  6540  036D  2B70               	goto	u2405
  6541  036E  0834               	movf	___fldiv@a,w
  6542  036F  0241               	subwf	___fldiv@rem,w
  6543  0370                     u2405:
  6544  0370  1C03               	skipc
  6545  0371  2B73               	goto	u2401
  6546  0372  2B74               	goto	u2400
  6547  0373                     u2401:
  6548  0373  2B83               	goto	l2030
  6549  0374                     u2400:
  6550  0374                     l2026:
  6551  0374  174B               	bsf	___fldiv@grs+3,6
  6552  0375                     l2028:
  6553  0375  0834               	movf	___fldiv@a,w
  6554  0376  02C1               	subwf	___fldiv@rem,f
  6555  0377  0835               	movf	___fldiv@a+1,w
  6556  0378  1C03               	skipc
  6557  0379  0F35               	incfsz	___fldiv@a+1,w
  6558  037A  02C2               	subwf	___fldiv@rem+1,f
  6559  037B  0836               	movf	___fldiv@a+2,w
  6560  037C  1C03               	skipc
  6561  037D  0F36               	incfsz	___fldiv@a+2,w
  6562  037E  02C3               	subwf	___fldiv@rem+2,f
  6563  037F  0837               	movf	___fldiv@a+3,w
  6564  0380  1C03               	skipc
  6565  0381  0F37               	incfsz	___fldiv@a+3,w
  6566  0382  02C4               	subwf	___fldiv@rem+3,f
  6567  0383                     l2030:
  6568  0383  3001               	movlw	1
  6569  0384  00BC               	movwf	??___fldiv
  6570  0385  083C               	movf	??___fldiv,w
  6571  0386  07CD               	addwf	___fldiv@aexp,f
  6572  0387                     l2032:
  6573  0387  301A               	movlw	26
  6574  0388  024D               	subwf	___fldiv@aexp,w
  6575  0389  1C03               	skipc
  6576  038A  2B8C               	goto	u2411
  6577  038B  2B8D               	goto	u2410
  6578  038C                     u2411:
  6579  038C  2B3D               	goto	l2014
  6580  038D                     u2410:
  6581  038D                     l2034:
  6582  038D  0844               	movf	___fldiv@rem+3,w
  6583  038E  0443               	iorwf	___fldiv@rem+2,w
  6584  038F  0442               	iorwf	___fldiv@rem+1,w
  6585  0390  0441               	iorwf	___fldiv@rem,w
  6586  0391  1903               	skipnz
  6587  0392  2B94               	goto	u2421
  6588  0393  2B95               	goto	u2420
  6589  0394                     u2421:
  6590  0394  2BB4               	goto	l2048
  6591  0395                     u2420:
  6592  0395                     l2036:
  6593  0395  1448               	bsf	___fldiv@grs,0
  6594  0396  2BB4               	goto	l2048
  6595  0397                     l2038:
  6596  0397  3001               	movlw	1
  6597  0398  00BC               	movwf	??___fldiv
  6598  0399                     u2435:
  6599  0399  1003               	clrc
  6600  039A  0DB8               	rlf	___fldiv@b,f
  6601  039B  0DB9               	rlf	___fldiv@b+1,f
  6602  039C  0DBA               	rlf	___fldiv@b+2,f
  6603  039D  0DBB               	rlf	___fldiv@b+3,f
  6604  039E  0BBC               	decfsz	??___fldiv,f
  6605  039F  2B99               	goto	u2435
  6606  03A0                     l2040:
  6607  03A0  1FCB               	btfss	___fldiv@grs+3,7
  6608  03A1  2BA3               	goto	u2441
  6609  03A2  2BA4               	goto	u2440
  6610  03A3                     u2441:
  6611  03A3  2BA5               	goto	l2044
  6612  03A4                     u2440:
  6613  03A4                     l2042:
  6614  03A4  1438               	bsf	___fldiv@b,0
  6615  03A5                     l2044:
  6616  03A5  3001               	movlw	1
  6617  03A6  00BC               	movwf	??___fldiv
  6618  03A7                     u2455:
  6619  03A7  1003               	clrc
  6620  03A8  0DC8               	rlf	___fldiv@grs,f
  6621  03A9  0DC9               	rlf	___fldiv@grs+1,f
  6622  03AA  0DCA               	rlf	___fldiv@grs+2,f
  6623  03AB  0DCB               	rlf	___fldiv@grs+3,f
  6624  03AC  0BBC               	decfsz	??___fldiv,f
  6625  03AD  2BA7               	goto	u2455
  6626  03AE                     l2046:
  6627  03AE  30FF               	movlw	255
  6628  03AF  07C6               	addwf	___fldiv@new_exp,f
  6629  03B0  1803               	skipnc
  6630  03B1  0AC7               	incf	___fldiv@new_exp+1,f
  6631  03B2  30FF               	movlw	255
  6632  03B3  07C7               	addwf	___fldiv@new_exp+1,f
  6633  03B4                     l2048:
  6634  03B4  1FBA               	btfss	___fldiv@b+2,7
  6635  03B5  2BB7               	goto	u2461
  6636  03B6  2BB8               	goto	u2460
  6637  03B7                     u2461:
  6638  03B7  2B97               	goto	l2038
  6639  03B8                     u2460:
  6640  03B8                     l2050:
  6641  03B8  01CD               	clrf	___fldiv@aexp
  6642  03B9                     l2052:
  6643  03B9  1FCB               	btfss	___fldiv@grs+3,7
  6644  03BA  2BBC               	goto	u2471
  6645  03BB  2BBD               	goto	u2470
  6646  03BC                     u2471:
  6647  03BC  2BD9               	goto	l2060
  6648  03BD                     u2470:
  6649  03BD                     l2054:
  6650  03BD  30FF               	movlw	255
  6651  03BE  0548               	andwf	___fldiv@grs,w
  6652  03BF  00BC               	movwf	??___fldiv
  6653  03C0  30FF               	movlw	255
  6654  03C1  0549               	andwf	___fldiv@grs+1,w
  6655  03C2  00BD               	movwf	??___fldiv+1
  6656  03C3  30FF               	movlw	255
  6657  03C4  054A               	andwf	___fldiv@grs+2,w
  6658  03C5  00BE               	movwf	??___fldiv+2
  6659  03C6  307F               	movlw	127
  6660  03C7  054B               	andwf	___fldiv@grs+3,w
  6661  03C8  00BF               	movwf	??___fldiv+3
  6662  03C9  083F               	movf	??___fldiv+3,w
  6663  03CA  043E               	iorwf	??___fldiv+2,w
  6664  03CB  043D               	iorwf	??___fldiv+1,w
  6665  03CC  043C               	iorwf	??___fldiv,w
  6666  03CD  1903               	skipnz
  6667  03CE  2BD0               	goto	u2481
  6668  03CF  2BD1               	goto	u2480
  6669  03D0                     u2481:
  6670  03D0  2BD4               	goto	l727
  6671  03D1                     u2480:
  6672  03D1                     l2056:
  6673  03D1  01CD               	clrf	___fldiv@aexp
  6674  03D2  0ACD               	incf	___fldiv@aexp,f
  6675  03D3  2BD9               	goto	l2060
  6676  03D4                     l727:
  6677  03D4  1C38               	btfss	___fldiv@b,0
  6678  03D5  2BD7               	goto	u2491
  6679  03D6  2BD8               	goto	u2490
  6680  03D7                     u2491:
  6681  03D7  2BD9               	goto	l2060
  6682  03D8                     u2490:
  6683  03D8  2BD1               	goto	l2056
  6684  03D9                     l2060:
  6685  03D9  084D               	movf	___fldiv@aexp,w
  6686  03DA  1903               	btfsc	3,2
  6687  03DB  2BDD               	goto	u2501
  6688  03DC  2BDE               	goto	u2500
  6689  03DD                     u2501:
  6690  03DD  2C0F               	goto	l2070
  6691  03DE                     u2500:
  6692  03DE                     l2062:
  6693  03DE  3001               	movlw	1
  6694  03DF  07B8               	addwf	___fldiv@b,f
  6695  03E0  3000               	movlw	0
  6696  03E1  1803               	skipnc
  6697  03E2  3001               	movlw	1
  6698  03E3  07B9               	addwf	___fldiv@b+1,f
  6699  03E4  3000               	movlw	0
  6700  03E5  1803               	skipnc
  6701  03E6  3001               	movlw	1
  6702  03E7  07BA               	addwf	___fldiv@b+2,f
  6703  03E8  3000               	movlw	0
  6704  03E9  1803               	skipnc
  6705  03EA  3001               	movlw	1
  6706  03EB  07BB               	addwf	___fldiv@b+3,f
  6707  03EC                     l2064:
  6708  03EC  1C3B               	btfss	___fldiv@b+3,0
  6709  03ED  2BEF               	goto	u2511
  6710  03EE  2BF0               	goto	u2510
  6711  03EF                     u2511:
  6712  03EF  2C0F               	goto	l2070
  6713  03F0                     u2510:
  6714  03F0                     l2066:
  6715  03F0  0838               	movf	___fldiv@b,w
  6716  03F1  00BC               	movwf	??___fldiv
  6717  03F2  0839               	movf	___fldiv@b+1,w
  6718  03F3  00BD               	movwf	??___fldiv+1
  6719  03F4  083A               	movf	___fldiv@b+2,w
  6720  03F5  00BE               	movwf	??___fldiv+2
  6721  03F6  083B               	movf	___fldiv@b+3,w
  6722  03F7  00BF               	movwf	??___fldiv+3
  6723  03F8  3001               	movlw	1
  6724  03F9  00C0               	movwf	??___fldiv+4
  6725  03FA                     u2525:
  6726  03FA  0D3F               	rlf	??___fldiv+3,w
  6727  03FB  0CBF               	rrf	??___fldiv+3,f
  6728  03FC  0CBE               	rrf	??___fldiv+2,f
  6729  03FD  0CBD               	rrf	??___fldiv+1,f
  6730  03FE  0CBC               	rrf	??___fldiv,f
  6731  03FF                     u2520:
  6732  03FF  0BC0               	decfsz	??___fldiv+4,f
  6733  0400  2BFA               	goto	u2525
  6734  0401  083F               	movf	??___fldiv+3,w
  6735  0402  00BB               	movwf	___fldiv@b+3
  6736  0403  083E               	movf	??___fldiv+2,w
  6737  0404  00BA               	movwf	___fldiv@b+2
  6738  0405  083D               	movf	??___fldiv+1,w
  6739  0406  00B9               	movwf	___fldiv@b+1
  6740  0407  083C               	movf	??___fldiv,w
  6741  0408  00B8               	movwf	___fldiv@b
  6742  0409                     l2068:
  6743  0409  3001               	movlw	1
  6744  040A  07C6               	addwf	___fldiv@new_exp,f
  6745  040B  1803               	skipnc
  6746  040C  0AC7               	incf	___fldiv@new_exp+1,f
  6747  040D  3000               	movlw	0
  6748  040E  07C7               	addwf	___fldiv@new_exp+1,f
  6749  040F                     l2070:
  6750  040F  0847               	movf	___fldiv@new_exp+1,w
  6751  0410  3A80               	xorlw	128
  6752  0411  00FF               	movwf	btemp+1
  6753  0412  3080               	movlw	128
  6754  0413  027F               	subwf	btemp+1,w
  6755  0414  1D03               	skipz
  6756  0415  2C18               	goto	u2535
  6757  0416  30FF               	movlw	255
  6758  0417  0246               	subwf	___fldiv@new_exp,w
  6759  0418                     u2535:
  6760  0418  1C03               	skipc
  6761  0419  2C1B               	goto	u2531
  6762  041A  2C1C               	goto	u2530
  6763  041B                     u2531:
  6764  041B  2C2A               	goto	l2074
  6765  041C                     u2530:
  6766  041C                     l2072:
  6767  041C  30FF               	movlw	255
  6768  041D  1283               	bcf	3,5	;RP0=0, select bank0
  6769  041E  1303               	bcf	3,6	;RP1=0, select bank0
  6770  041F  00C6               	movwf	___fldiv@new_exp
  6771  0420  3000               	movlw	0
  6772  0421  00C7               	movwf	___fldiv@new_exp+1
  6773  0422  3000               	movlw	0
  6774  0423  00BB               	movwf	___fldiv@b+3
  6775  0424  3000               	movlw	0
  6776  0425  00BA               	movwf	___fldiv@b+2
  6777  0426  3000               	movlw	0
  6778  0427  00B9               	movwf	___fldiv@b+1
  6779  0428  3000               	movlw	0
  6780  0429  00B8               	movwf	___fldiv@b
  6781  042A                     l2074:
  6782  042A  1283               	bcf	3,5	;RP0=0, select bank0
  6783  042B  1303               	bcf	3,6	;RP1=0, select bank0
  6784  042C  0847               	movf	___fldiv@new_exp+1,w
  6785  042D  3A80               	xorlw	128
  6786  042E  00FF               	movwf	btemp+1
  6787  042F  3080               	movlw	128
  6788  0430  027F               	subwf	btemp+1,w
  6789  0431  1D03               	skipz
  6790  0432  2C35               	goto	u2545
  6791  0433  3001               	movlw	1
  6792  0434  0246               	subwf	___fldiv@new_exp,w
  6793  0435                     u2545:
  6794  0435  1803               	skipnc
  6795  0436  2C38               	goto	u2541
  6796  0437  2C39               	goto	u2540
  6797  0438                     u2541:
  6798  0438  2C46               	goto	l733
  6799  0439                     u2540:
  6800  0439                     l2076:
  6801  0439  1283               	bcf	3,5	;RP0=0, select bank0
  6802  043A  1303               	bcf	3,6	;RP1=0, select bank0
  6803  043B  01C6               	clrf	___fldiv@new_exp
  6804  043C  01C7               	clrf	___fldiv@new_exp+1
  6805  043D                     l2078:
  6806  043D  3000               	movlw	0
  6807  043E  00BB               	movwf	___fldiv@b+3
  6808  043F  3000               	movlw	0
  6809  0440  00BA               	movwf	___fldiv@b+2
  6810  0441  3000               	movlw	0
  6811  0442  00B9               	movwf	___fldiv@b+1
  6812  0443  3000               	movlw	0
  6813  0444  00B8               	movwf	___fldiv@b
  6814  0445                     l2080:
  6815  0445  01C5               	clrf	___fldiv@sign
  6816  0446                     l733:
  6817  0446  1283               	bcf	3,5	;RP0=0, select bank0
  6818  0447  1303               	bcf	3,6	;RP1=0, select bank0
  6819  0448  0846               	movf	___fldiv@new_exp,w
  6820  0449  00BC               	movwf	??___fldiv
  6821  044A  083C               	movf	??___fldiv,w
  6822  044B  00CC               	movwf	___fldiv@bexp
  6823  044C                     l2082:
  6824  044C  1C4C               	btfss	___fldiv@bexp,0
  6825  044D  2C4F               	goto	u2551
  6826  044E  2C50               	goto	u2550
  6827  044F                     u2551:
  6828  044F  2C52               	goto	l2086
  6829  0450                     u2550:
  6830  0450                     l2084:
  6831  0450  17BA               	bsf	___fldiv@b+2,7
  6832  0451  2C56               	goto	l735
  6833  0452                     l2086:
  6834  0452  307F               	movlw	127
  6835  0453  00BC               	movwf	??___fldiv
  6836  0454  083C               	movf	??___fldiv,w
  6837  0455  05BA               	andwf	___fldiv@b+2,f
  6838  0456                     l735:
  6839  0456  084C               	movf	___fldiv@bexp,w
  6840  0457  00BC               	movwf	??___fldiv
  6841  0458  1003               	clrc
  6842  0459  0C3C               	rrf	??___fldiv,w
  6843  045A  00BD               	movwf	??___fldiv+1
  6844  045B  083D               	movf	??___fldiv+1,w
  6845  045C  00BB               	movwf	___fldiv@b+3
  6846  045D  0845               	movf	___fldiv@sign,w
  6847  045E  00BC               	movwf	??___fldiv
  6848  045F  083C               	movf	??___fldiv,w
  6849  0460  04BB               	iorwf	___fldiv@b+3,f
  6850  0461  2AFA               	goto	l1994
  6851  0462                     l713:
  6852  0462  0008               	return
  6853  0463                     __end_of___fldiv:
  6854                           
  6855                           	psect	text24
  6856  0855                     __ptext24:	
  6857 ;; *************** function _PWM_Init *****************
  6858 ;; Defined at:
  6859 ;;		line 12 in file "PWM.c"
  6860 ;; Parameters:    Size  Location     Type
  6861 ;;  freq            4    6[BANK0 ] long 
  6862 ;; Auto vars:     Size  Location     Type
  6863 ;;		None
  6864 ;; Return value:  Size  Location     Type
  6865 ;;                  1    wreg      void 
  6866 ;; Registers used:
  6867 ;;		wreg, status,2, status,0, pclath, cstack
  6868 ;; Tracked objects:
  6869 ;;		On entry : 0/0
  6870 ;;		On exit  : 0/0
  6871 ;;		Unchanged: 0/0
  6872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6873 ;;      Params:         0       4       0       0       0
  6874 ;;      Locals:         0       0       0       0       0
  6875 ;;      Temps:          4       0       0       0       0
  6876 ;;      Totals:         4       4       0       0       0
  6877 ;;Total ram usage:        8 bytes
  6878 ;; Hardware stack levels used: 1
  6879 ;; Hardware stack levels required when called: 1
  6880 ;; This function calls:
  6881 ;;		___aldiv
  6882 ;; This function is called by:
  6883 ;;		_PWM1_Duty
  6884 ;;		_PWM2_Duty
  6885 ;; This function uses a non-reentrant model
  6886 ;;
  6887                           
  6888                           
  6889                           ;psect for function _PWM_Init
  6890  0855                     _PWM_Init:
  6891  0855                     l1854:	
  6892                           ;incstack = 0
  6893                           ; Regs used in _PWM_Init: [wreg+status,2+status,0+pclath+cstack]
  6894                           
  6895                           
  6896                           ;PWM.c: 12: void PWM_Init(long freq);PWM.c: 13: {;PWM.c: 14:   PR2 = (4000000/(freq*4*4)
      +                          ) - 1;
  6897  0855  1283               	bcf	3,5	;RP0=0, select bank0
  6898  0856  1303               	bcf	3,6	;RP1=0, select bank0
  6899  0857  0826               	movf	PWM_Init@freq,w
  6900  0858  00F9               	movwf	??_PWM_Init
  6901  0859  0827               	movf	PWM_Init@freq+1,w
  6902  085A  00FA               	movwf	??_PWM_Init+1
  6903  085B  0828               	movf	PWM_Init@freq+2,w
  6904  085C  00FB               	movwf	??_PWM_Init+2
  6905  085D  0829               	movf	PWM_Init@freq+3,w
  6906  085E  00FC               	movwf	??_PWM_Init+3
  6907  085F  3002               	movlw	2
  6908  0860                     u2025:
  6909  0860  1003               	clrc
  6910  0861  0DF9               	rlf	??_PWM_Init,f
  6911  0862  0DFA               	rlf	??_PWM_Init+1,f
  6912  0863  0DFB               	rlf	??_PWM_Init+2,f
  6913  0864  0DFC               	rlf	??_PWM_Init+3,f
  6914  0865                     u2020:
  6915  0865  3EFF               	addlw	-1
  6916  0866  1D03               	skipz
  6917  0867  2860               	goto	u2025
  6918  0868  3002               	movlw	2
  6919  0869                     u2035:
  6920  0869  1003               	clrc
  6921  086A  0DF9               	rlf	??_PWM_Init,f
  6922  086B  0DFA               	rlf	??_PWM_Init+1,f
  6923  086C  0DFB               	rlf	??_PWM_Init+2,f
  6924  086D  0DFC               	rlf	??_PWM_Init+3,f
  6925  086E                     u2030:
  6926  086E  3EFF               	addlw	-1
  6927  086F  1D03               	skipz
  6928  0870  2869               	goto	u2035
  6929  0871  087C               	movf	??_PWM_Init+3,w
  6930  0872  00F3               	movwf	___aldiv@divisor+3
  6931  0873  087B               	movf	??_PWM_Init+2,w
  6932  0874  00F2               	movwf	___aldiv@divisor+2
  6933  0875  087A               	movf	??_PWM_Init+1,w
  6934  0876  00F1               	movwf	___aldiv@divisor+1
  6935  0877  0879               	movf	??_PWM_Init,w
  6936  0878  00F0               	movwf	___aldiv@divisor
  6937  0879  3000               	movlw	0
  6938  087A  00F7               	movwf	___aldiv@dividend+3
  6939  087B  303D               	movlw	61
  6940  087C  00F6               	movwf	___aldiv@dividend+2
  6941  087D  3009               	movlw	9
  6942  087E  00F5               	movwf	___aldiv@dividend+1
  6943  087F  3000               	movlw	0
  6944  0880  00F4               	movwf	___aldiv@dividend
  6945  0881  120A  158A  22DB  120A  158A  	fcall	___aldiv
  6946  0886  0870               	movf	?___aldiv,w
  6947  0887  3EFF               	addlw	255
  6948  0888  1683               	bsf	3,5	;RP0=1, select bank1
  6949  0889  1303               	bcf	3,6	;RP1=0, select bank1
  6950  088A  0092               	movwf	18	;volatile
  6951  088B                     l184:
  6952  088B  0008               	return
  6953  088C                     __end_of_PWM_Init:
  6954                           
  6955                           	psect	text25
  6956  0ADB                     __ptext25:	
  6957 ;; *************** function ___aldiv *****************
  6958 ;; Defined at:
  6959 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\aldiv.c"
  6960 ;; Parameters:    Size  Location     Type
  6961 ;;  divisor         4    0[COMMON] long 
  6962 ;;  dividend        4    4[COMMON] long 
  6963 ;; Auto vars:     Size  Location     Type
  6964 ;;  quotient        4    2[BANK0 ] long 
  6965 ;;  sign            1    1[BANK0 ] unsigned char 
  6966 ;;  counter         1    0[BANK0 ] unsigned char 
  6967 ;; Return value:  Size  Location     Type
  6968 ;;                  4    0[COMMON] long 
  6969 ;; Registers used:
  6970 ;;		wreg, status,2, status,0
  6971 ;; Tracked objects:
  6972 ;;		On entry : 0/0
  6973 ;;		On exit  : 0/0
  6974 ;;		Unchanged: 0/0
  6975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6976 ;;      Params:         8       0       0       0       0
  6977 ;;      Locals:         0       6       0       0       0
  6978 ;;      Temps:          1       0       0       0       0
  6979 ;;      Totals:         9       6       0       0       0
  6980 ;;Total ram usage:       15 bytes
  6981 ;; Hardware stack levels used: 1
  6982 ;; This function calls:
  6983 ;;		Nothing
  6984 ;; This function is called by:
  6985 ;;		_PWM_Init
  6986 ;;		_PWM1_Duty
  6987 ;;		_PWM2_Duty
  6988 ;; This function uses a non-reentrant model
  6989 ;;
  6990                           
  6991                           
  6992                           ;psect for function ___aldiv
  6993  0ADB                     ___aldiv:
  6994  0ADB                     l1800:	
  6995                           ;incstack = 0
  6996                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  6997                           
  6998  0ADB  1283               	bcf	3,5	;RP0=0, select bank0
  6999  0ADC  1303               	bcf	3,6	;RP1=0, select bank0
  7000  0ADD  01A1               	clrf	___aldiv@sign
  7001  0ADE                     l1802:
  7002  0ADE  1FF3               	btfss	___aldiv@divisor+3,7
  7003  0ADF  2AE1               	goto	u1891
  7004  0AE0  2AE2               	goto	u1890
  7005  0AE1                     u1891:
  7006  0AE1  2AEF               	goto	l427
  7007  0AE2                     u1890:
  7008  0AE2                     l1804:
  7009  0AE2  09F0               	comf	___aldiv@divisor,f
  7010  0AE3  09F1               	comf	___aldiv@divisor+1,f
  7011  0AE4  09F2               	comf	___aldiv@divisor+2,f
  7012  0AE5  09F3               	comf	___aldiv@divisor+3,f
  7013  0AE6  0AF0               	incf	___aldiv@divisor,f
  7014  0AE7  1903               	skipnz
  7015  0AE8  0AF1               	incf	___aldiv@divisor+1,f
  7016  0AE9  1903               	skipnz
  7017  0AEA  0AF2               	incf	___aldiv@divisor+2,f
  7018  0AEB  1903               	skipnz
  7019  0AEC  0AF3               	incf	___aldiv@divisor+3,f
  7020  0AED  01A1               	clrf	___aldiv@sign
  7021  0AEE  0AA1               	incf	___aldiv@sign,f
  7022  0AEF                     l427:
  7023  0AEF  1FF7               	btfss	___aldiv@dividend+3,7
  7024  0AF0  2AF2               	goto	u1901
  7025  0AF1  2AF3               	goto	u1900
  7026  0AF2                     u1901:
  7027  0AF2  2B02               	goto	l1810
  7028  0AF3                     u1900:
  7029  0AF3                     l1806:
  7030  0AF3  09F4               	comf	___aldiv@dividend,f
  7031  0AF4  09F5               	comf	___aldiv@dividend+1,f
  7032  0AF5  09F6               	comf	___aldiv@dividend+2,f
  7033  0AF6  09F7               	comf	___aldiv@dividend+3,f
  7034  0AF7  0AF4               	incf	___aldiv@dividend,f
  7035  0AF8  1903               	skipnz
  7036  0AF9  0AF5               	incf	___aldiv@dividend+1,f
  7037  0AFA  1903               	skipnz
  7038  0AFB  0AF6               	incf	___aldiv@dividend+2,f
  7039  0AFC  1903               	skipnz
  7040  0AFD  0AF7               	incf	___aldiv@dividend+3,f
  7041  0AFE                     l1808:
  7042  0AFE  3001               	movlw	1
  7043  0AFF  00F8               	movwf	??___aldiv
  7044  0B00  0878               	movf	??___aldiv,w
  7045  0B01  06A1               	xorwf	___aldiv@sign,f
  7046  0B02                     l1810:
  7047  0B02  3000               	movlw	0
  7048  0B03  00A5               	movwf	___aldiv@quotient+3
  7049  0B04  3000               	movlw	0
  7050  0B05  00A4               	movwf	___aldiv@quotient+2
  7051  0B06  3000               	movlw	0
  7052  0B07  00A3               	movwf	___aldiv@quotient+1
  7053  0B08  3000               	movlw	0
  7054  0B09  00A2               	movwf	___aldiv@quotient
  7055  0B0A                     l1812:
  7056  0B0A  0873               	movf	___aldiv@divisor+3,w
  7057  0B0B  0472               	iorwf	___aldiv@divisor+2,w
  7058  0B0C  0471               	iorwf	___aldiv@divisor+1,w
  7059  0B0D  0470               	iorwf	___aldiv@divisor,w
  7060  0B0E  1903               	skipnz
  7061  0B0F  2B11               	goto	u1911
  7062  0B10  2B12               	goto	u1910
  7063  0B11                     u1911:
  7064  0B11  2B5F               	goto	l1832
  7065  0B12                     u1910:
  7066  0B12                     l1814:
  7067  0B12  01A0               	clrf	___aldiv@counter
  7068  0B13  0AA0               	incf	___aldiv@counter,f
  7069  0B14  2B22               	goto	l1818
  7070  0B15                     l1816:
  7071  0B15  3001               	movlw	1
  7072  0B16  00F8               	movwf	??___aldiv
  7073  0B17                     u1925:
  7074  0B17  1003               	clrc
  7075  0B18  0DF0               	rlf	___aldiv@divisor,f
  7076  0B19  0DF1               	rlf	___aldiv@divisor+1,f
  7077  0B1A  0DF2               	rlf	___aldiv@divisor+2,f
  7078  0B1B  0DF3               	rlf	___aldiv@divisor+3,f
  7079  0B1C  0BF8               	decfsz	??___aldiv,f
  7080  0B1D  2B17               	goto	u1925
  7081  0B1E  3001               	movlw	1
  7082  0B1F  00F8               	movwf	??___aldiv
  7083  0B20  0878               	movf	??___aldiv,w
  7084  0B21  07A0               	addwf	___aldiv@counter,f
  7085  0B22                     l1818:
  7086  0B22  1FF3               	btfss	___aldiv@divisor+3,7
  7087  0B23  2B25               	goto	u1931
  7088  0B24  2B26               	goto	u1930
  7089  0B25                     u1931:
  7090  0B25  2B15               	goto	l1816
  7091  0B26                     u1930:
  7092  0B26                     l1820:
  7093  0B26  3001               	movlw	1
  7094  0B27  00F8               	movwf	??___aldiv
  7095  0B28                     u1945:
  7096  0B28  1003               	clrc
  7097  0B29  0DA2               	rlf	___aldiv@quotient,f
  7098  0B2A  0DA3               	rlf	___aldiv@quotient+1,f
  7099  0B2B  0DA4               	rlf	___aldiv@quotient+2,f
  7100  0B2C  0DA5               	rlf	___aldiv@quotient+3,f
  7101  0B2D  0BF8               	decfsz	??___aldiv,f
  7102  0B2E  2B28               	goto	u1945
  7103  0B2F                     l1822:
  7104  0B2F  0873               	movf	___aldiv@divisor+3,w
  7105  0B30  0277               	subwf	___aldiv@dividend+3,w
  7106  0B31  1D03               	skipz
  7107  0B32  2B3D               	goto	u1955
  7108  0B33  0872               	movf	___aldiv@divisor+2,w
  7109  0B34  0276               	subwf	___aldiv@dividend+2,w
  7110  0B35  1D03               	skipz
  7111  0B36  2B3D               	goto	u1955
  7112  0B37  0871               	movf	___aldiv@divisor+1,w
  7113  0B38  0275               	subwf	___aldiv@dividend+1,w
  7114  0B39  1D03               	skipz
  7115  0B3A  2B3D               	goto	u1955
  7116  0B3B  0870               	movf	___aldiv@divisor,w
  7117  0B3C  0274               	subwf	___aldiv@dividend,w
  7118  0B3D                     u1955:
  7119  0B3D  1C03               	skipc
  7120  0B3E  2B40               	goto	u1951
  7121  0B3F  2B41               	goto	u1950
  7122  0B40                     u1951:
  7123  0B40  2B50               	goto	l1828
  7124  0B41                     u1950:
  7125  0B41                     l1824:
  7126  0B41  0870               	movf	___aldiv@divisor,w
  7127  0B42  02F4               	subwf	___aldiv@dividend,f
  7128  0B43  0871               	movf	___aldiv@divisor+1,w
  7129  0B44  1C03               	skipc
  7130  0B45  0F71               	incfsz	___aldiv@divisor+1,w
  7131  0B46  02F5               	subwf	___aldiv@dividend+1,f
  7132  0B47  0872               	movf	___aldiv@divisor+2,w
  7133  0B48  1C03               	skipc
  7134  0B49  0F72               	incfsz	___aldiv@divisor+2,w
  7135  0B4A  02F6               	subwf	___aldiv@dividend+2,f
  7136  0B4B  0873               	movf	___aldiv@divisor+3,w
  7137  0B4C  1C03               	skipc
  7138  0B4D  0F73               	incfsz	___aldiv@divisor+3,w
  7139  0B4E  02F7               	subwf	___aldiv@dividend+3,f
  7140  0B4F                     l1826:
  7141  0B4F  1422               	bsf	___aldiv@quotient,0
  7142  0B50                     l1828:
  7143  0B50  3001               	movlw	1
  7144  0B51                     u1965:
  7145  0B51  1003               	clrc
  7146  0B52  0CF3               	rrf	___aldiv@divisor+3,f
  7147  0B53  0CF2               	rrf	___aldiv@divisor+2,f
  7148  0B54  0CF1               	rrf	___aldiv@divisor+1,f
  7149  0B55  0CF0               	rrf	___aldiv@divisor,f
  7150  0B56  3EFF               	addlw	-1
  7151  0B57  1D03               	skipz
  7152  0B58  2B51               	goto	u1965
  7153  0B59                     l1830:
  7154  0B59  3001               	movlw	1
  7155  0B5A  02A0               	subwf	___aldiv@counter,f
  7156  0B5B  1D03               	btfss	3,2
  7157  0B5C  2B5E               	goto	u1971
  7158  0B5D  2B5F               	goto	u1970
  7159  0B5E                     u1971:
  7160  0B5E  2B26               	goto	l1820
  7161  0B5F                     u1970:
  7162  0B5F                     l1832:
  7163  0B5F  0821               	movf	___aldiv@sign,w
  7164  0B60  1903               	btfsc	3,2
  7165  0B61  2B63               	goto	u1981
  7166  0B62  2B64               	goto	u1980
  7167  0B63                     u1981:
  7168  0B63  2B6F               	goto	l1836
  7169  0B64                     u1980:
  7170  0B64                     l1834:
  7171  0B64  09A2               	comf	___aldiv@quotient,f
  7172  0B65  09A3               	comf	___aldiv@quotient+1,f
  7173  0B66  09A4               	comf	___aldiv@quotient+2,f
  7174  0B67  09A5               	comf	___aldiv@quotient+3,f
  7175  0B68  0AA2               	incf	___aldiv@quotient,f
  7176  0B69  1903               	skipnz
  7177  0B6A  0AA3               	incf	___aldiv@quotient+1,f
  7178  0B6B  1903               	skipnz
  7179  0B6C  0AA4               	incf	___aldiv@quotient+2,f
  7180  0B6D  1903               	skipnz
  7181  0B6E  0AA5               	incf	___aldiv@quotient+3,f
  7182  0B6F                     l1836:
  7183  0B6F  0825               	movf	___aldiv@quotient+3,w
  7184  0B70  00F3               	movwf	?___aldiv+3
  7185  0B71  0824               	movf	___aldiv@quotient+2,w
  7186  0B72  00F2               	movwf	?___aldiv+2
  7187  0B73  0823               	movf	___aldiv@quotient+1,w
  7188  0B74  00F1               	movwf	?___aldiv+1
  7189  0B75  0822               	movf	___aldiv@quotient,w
  7190  0B76  00F0               	movwf	?___aldiv
  7191  0B77                     l437:
  7192  0B77  0008               	return
  7193  0B78                     __end_of___aldiv:
  7194                           
  7195                           	psect	text26
  7196  1796                     __ptext26:	
  7197 ;; *************** function _ADC_Read *****************
  7198 ;; Defined at:
  7199 ;;		line 17 in file "adc.c"
  7200 ;; Parameters:    Size  Location     Type
  7201 ;;  channel         1    wreg     unsigned char 
  7202 ;; Auto vars:     Size  Location     Type
  7203 ;;  channel         1    4[COMMON] unsigned char 
  7204 ;; Return value:  Size  Location     Type
  7205 ;;                  2    0[COMMON] unsigned int 
  7206 ;; Registers used:
  7207 ;;		wreg, status,2, status,0
  7208 ;; Tracked objects:
  7209 ;;		On entry : 0/0
  7210 ;;		On exit  : 0/0
  7211 ;;		Unchanged: 0/0
  7212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7213 ;;      Params:         2       0       0       0       0
  7214 ;;      Locals:         1       0       0       0       0
  7215 ;;      Temps:          2       0       0       0       0
  7216 ;;      Totals:         5       0       0       0       0
  7217 ;;Total ram usage:        5 bytes
  7218 ;; Hardware stack levels used: 1
  7219 ;; This function calls:
  7220 ;;		Nothing
  7221 ;; This function is called by:
  7222 ;;		_realizarCalculo
  7223 ;;		_controlarCooler
  7224 ;; This function uses a non-reentrant model
  7225 ;;
  7226                           
  7227                           
  7228                           ;psect for function _ADC_Read
  7229  1796                     _ADC_Read:
  7230                           
  7231                           ;incstack = 0
  7232                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  7233                           ;ADC_Read@channel stored from wreg
  7234  1796  00F4               	movwf	ADC_Read@channel
  7235  1797                     l2368:
  7236                           
  7237                           ;adc.c: 17: unsigned int ADC_Read(unsigned char channel);adc.c: 18: {;adc.c: 19:    if(c
      +                          hannel > 7)
  7238  1797  3008               	movlw	8
  7239  1798  0274               	subwf	ADC_Read@channel,w
  7240  1799  1C03               	skipc
  7241  179A  2F9C               	goto	u3171
  7242  179B  2F9D               	goto	u3170
  7243  179C                     u3171:
  7244  179C  2FA0               	goto	l2374
  7245  179D                     u3170:
  7246  179D                     l2370:
  7247                           
  7248                           ;adc.c: 20:      return 0;
  7249  179D  01F0               	clrf	?_ADC_Read
  7250  179E  01F1               	clrf	?_ADC_Read+1
  7251  179F  2FC9               	goto	l223
  7252  17A0                     l2374:
  7253                           
  7254                           ;adc.c: 22:    ADCON0 &= 0xC5;
  7255  17A0  30C5               	movlw	197
  7256  17A1  00F2               	movwf	??_ADC_Read
  7257  17A2  0872               	movf	??_ADC_Read,w
  7258  17A3  1283               	bcf	3,5	;RP0=0, select bank0
  7259  17A4  1303               	bcf	3,6	;RP1=0, select bank0
  7260  17A5  059F               	andwf	31,f	;volatile
  7261                           
  7262                           ;adc.c: 23:    ADCON0 |= channel<<3;
  7263  17A6  0874               	movf	ADC_Read@channel,w	;volatile
  7264  17A7  00F2               	movwf	??_ADC_Read
  7265  17A8  3002               	movlw	2
  7266  17A9                     u3185:
  7267  17A9  1003               	clrc
  7268  17AA  0DF2               	rlf	??_ADC_Read,f
  7269  17AB  3EFF               	addlw	-1
  7270  17AC  1D03               	skipz
  7271  17AD  2FA9               	goto	u3185
  7272  17AE  1003               	clrc
  7273  17AF  0D72               	rlf	??_ADC_Read,w
  7274  17B0  00F3               	movwf	??_ADC_Read+1
  7275  17B1  0873               	movf	??_ADC_Read+1,w
  7276  17B2  049F               	iorwf	31,f	;volatile
  7277  17B3                     l2376:
  7278                           
  7279                           ;adc.c: 24:    _delay((unsigned long)((2)*(4000000/4000.0)));
  7280  17B3  3003               	movlw	3
  7281  17B4  00F3               	movwf	??_ADC_Read+1
  7282  17B5  3097               	movlw	151
  7283  17B6  00F2               	movwf	??_ADC_Read
  7284  17B7                     u3777:
  7285  17B7  0BF2               	decfsz	??_ADC_Read,f
  7286  17B8  2FB7               	goto	u3777
  7287  17B9  0BF3               	decfsz	??_ADC_Read+1,f
  7288  17BA  2FB7               	goto	u3777
  7289  17BB  2FBC               	nop2
  7290  17BC                     l2378:
  7291                           
  7292                           ;adc.c: 25:    GO_nDONE = 1;
  7293  17BC  1283               	bcf	3,5	;RP0=0, select bank0
  7294  17BD  1303               	bcf	3,6	;RP1=0, select bank0
  7295  17BE  151F               	bsf	31,2	;volatile
  7296  17BF                     l224:	
  7297                           ;adc.c: 26:    while(GO_nDONE);
  7298                           
  7299  17BF  191F               	btfsc	31,2	;volatile
  7300  17C0  2FC2               	goto	u3191
  7301  17C1  2FC3               	goto	u3190
  7302  17C2                     u3191:
  7303  17C2  2FBF               	goto	l224
  7304  17C3                     u3190:
  7305  17C3                     l2380:
  7306                           
  7307                           ;adc.c: 27:    return ((unsigned int)(ADRESH<<8)+ADRESL);
  7308  17C3  081E               	movf	30,w	;volatile
  7309  17C4  00F1               	movwf	?_ADC_Read+1
  7310  17C5  1683               	bsf	3,5	;RP0=1, select bank1
  7311  17C6  1303               	bcf	3,6	;RP1=0, select bank1
  7312  17C7  081E               	movf	30,w	;volatile
  7313  17C8  00F0               	movwf	?_ADC_Read
  7314  17C9                     l223:
  7315  17C9  0008               	return
  7316  17CA                     __end_of_ADC_Read:
  7317                           
  7318                           	psect	text27
  7319  16E8                     __ptext27:	
  7320 ;; *************** function _PWM2_Start *****************
  7321 ;; Defined at:
  7322 ;;		line 59 in file "PWM.c"
  7323 ;; Parameters:    Size  Location     Type
  7324 ;;		None
  7325 ;; Auto vars:     Size  Location     Type
  7326 ;;		None
  7327 ;; Return value:  Size  Location     Type
  7328 ;;                  1    wreg      void 
  7329 ;; Registers used:
  7330 ;;		None
  7331 ;; Tracked objects:
  7332 ;;		On entry : 0/0
  7333 ;;		On exit  : 0/0
  7334 ;;		Unchanged: 0/0
  7335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7336 ;;      Params:         0       0       0       0       0
  7337 ;;      Locals:         0       0       0       0       0
  7338 ;;      Temps:          0       0       0       0       0
  7339 ;;      Totals:         0       0       0       0       0
  7340 ;;Total ram usage:        0 bytes
  7341 ;; Hardware stack levels used: 1
  7342 ;; This function calls:
  7343 ;;		Nothing
  7344 ;; This function is called by:
  7345 ;;		_main
  7346 ;; This function uses a non-reentrant model
  7347 ;;
  7348                           
  7349                           
  7350                           ;psect for function _PWM2_Start
  7351  16E8                     _PWM2_Start:
  7352  16E8                     l2654:	
  7353                           ;incstack = 0
  7354                           ; Regs used in _PWM2_Start: []
  7355                           
  7356                           
  7357                           ;PWM.c: 61:   CCP2M3 = 1;
  7358  16E8  1283               	bcf	3,5	;RP0=0, select bank0
  7359  16E9  1303               	bcf	3,6	;RP1=0, select bank0
  7360  16EA  159D               	bsf	29,3	;volatile
  7361                           
  7362                           ;PWM.c: 62:   CCP2M2 = 1;
  7363  16EB  151D               	bsf	29,2	;volatile
  7364                           
  7365                           ;PWM.c: 67:     T2CKPS0 = 1;
  7366  16EC  1412               	bsf	18,0	;volatile
  7367                           
  7368                           ;PWM.c: 68:     T2CKPS1 = 0;
  7369  16ED  1092               	bcf	18,1	;volatile
  7370                           
  7371                           ;PWM.c: 73:     TMR2ON = 1;
  7372  16EE  1512               	bsf	18,2	;volatile
  7373                           
  7374                           ;PWM.c: 74:     TRISC1 = 0;
  7375  16EF  1683               	bsf	3,5	;RP0=1, select bank1
  7376  16F0  1303               	bcf	3,6	;RP1=0, select bank1
  7377  16F1  1087               	bcf	7,1	;volatile
  7378  16F2                     l198:
  7379  16F2  0008               	return
  7380  16F3                     __end_of_PWM2_Start:
  7381                           
  7382                           	psect	text28
  7383  16DF                     __ptext28:	
  7384 ;; *************** function _PWM1_Start *****************
  7385 ;; Defined at:
  7386 ;;		line 41 in file "PWM.c"
  7387 ;; Parameters:    Size  Location     Type
  7388 ;;		None
  7389 ;; Auto vars:     Size  Location     Type
  7390 ;;		None
  7391 ;; Return value:  Size  Location     Type
  7392 ;;                  1    wreg      void 
  7393 ;; Registers used:
  7394 ;;		None
  7395 ;; Tracked objects:
  7396 ;;		On entry : 0/0
  7397 ;;		On exit  : 0/0
  7398 ;;		Unchanged: 0/0
  7399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7400 ;;      Params:         0       0       0       0       0
  7401 ;;      Locals:         0       0       0       0       0
  7402 ;;      Temps:          0       0       0       0       0
  7403 ;;      Totals:         0       0       0       0       0
  7404 ;;Total ram usage:        0 bytes
  7405 ;; Hardware stack levels used: 1
  7406 ;; This function calls:
  7407 ;;		Nothing
  7408 ;; This function is called by:
  7409 ;;		_main
  7410 ;; This function uses a non-reentrant model
  7411 ;;
  7412                           
  7413                           
  7414                           ;psect for function _PWM1_Start
  7415  16DF                     _PWM1_Start:
  7416  16DF                     l2652:	
  7417                           ;incstack = 0
  7418                           ; Regs used in _PWM1_Start: []
  7419                           
  7420                           
  7421                           ;PWM.c: 43:   CCP1M3 = 1;
  7422  16DF  1283               	bcf	3,5	;RP0=0, select bank0
  7423  16E0  1303               	bcf	3,6	;RP1=0, select bank0
  7424  16E1  1597               	bsf	23,3	;volatile
  7425                           
  7426                           ;PWM.c: 44:   CCP1M2 = 1;
  7427  16E2  1517               	bsf	23,2	;volatile
  7428                           
  7429                           ;PWM.c: 55:   TMR2ON = 1;
  7430  16E3  1512               	bsf	18,2	;volatile
  7431                           
  7432                           ;PWM.c: 56:   TRISC2 = 0;
  7433  16E4  1683               	bsf	3,5	;RP0=1, select bank1
  7434  16E5  1303               	bcf	3,6	;RP1=0, select bank1
  7435  16E6  1107               	bcf	7,2	;volatile
  7436  16E7                     l195:
  7437  16E7  0008               	return
  7438  16E8                     __end_of_PWM1_Start:
  7439                           
  7440                           	psect	text29
  7441  16D6                     __ptext29:	
  7442 ;; *************** function _ADC_Init *****************
  7443 ;; Defined at:
  7444 ;;		line 11 in file "adc.c"
  7445 ;; Parameters:    Size  Location     Type
  7446 ;;		None
  7447 ;; Auto vars:     Size  Location     Type
  7448 ;;		None
  7449 ;; Return value:  Size  Location     Type
  7450 ;;                  1    wreg      void 
  7451 ;; Registers used:
  7452 ;;		wreg
  7453 ;; Tracked objects:
  7454 ;;		On entry : 0/0
  7455 ;;		On exit  : 0/0
  7456 ;;		Unchanged: 0/0
  7457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7458 ;;      Params:         0       0       0       0       0
  7459 ;;      Locals:         0       0       0       0       0
  7460 ;;      Temps:          0       0       0       0       0
  7461 ;;      Totals:         0       0       0       0       0
  7462 ;;Total ram usage:        0 bytes
  7463 ;; Hardware stack levels used: 1
  7464 ;; This function calls:
  7465 ;;		Nothing
  7466 ;; This function is called by:
  7467 ;;		_main
  7468 ;; This function uses a non-reentrant model
  7469 ;;
  7470                           
  7471                           
  7472                           ;psect for function _ADC_Init
  7473  16D6                     _ADC_Init:
  7474  16D6                     l2650:	
  7475                           ;incstack = 0
  7476                           ; Regs used in _ADC_Init: [wreg]
  7477                           
  7478                           
  7479                           ;adc.c: 13:    ADCON1 = 0x80;
  7480  16D6  3080               	movlw	128
  7481  16D7  1683               	bsf	3,5	;RP0=1, select bank1
  7482  16D8  1303               	bcf	3,6	;RP1=0, select bank1
  7483  16D9  009F               	movwf	31	;volatile
  7484                           
  7485                           ;adc.c: 14:    ADCON0 = 0xC1;
  7486  16DA  30C1               	movlw	193
  7487  16DB  1283               	bcf	3,5	;RP0=0, select bank0
  7488  16DC  1303               	bcf	3,6	;RP1=0, select bank0
  7489  16DD  009F               	movwf	31	;volatile
  7490  16DE                     l219:
  7491  16DE  0008               	return
  7492  16DF                     __end_of_ADC_Init:
  7493  007E                     btemp	set	126	;btemp
  7494  007E                     wtemp0	set	126
  7495                           
  7496                           	psect	config
  7497                           
  7498                           ;Config register CONFIG @ 0x2007
  7499                           ;	Oscillator Selection bits
  7500                           ;	FOSC = HS, HS oscillator
  7501                           ;	Watchdog Timer Enable bit
  7502                           ;	WDTE = OFF, WDT disabled
  7503                           ;	Power-up Timer Enable bit
  7504                           ;	PWRTE = OFF, PWRT disabled
  7505                           ;	Brown-out Reset Enable bit
  7506                           ;	BOREN = OFF, BOR disabled
  7507                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  7508                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  7509                           ;	Data EEPROM Memory Code Protection bit
  7510                           ;	CPD = OFF, Data EEPROM code protection off
  7511                           ;	Flash Program Memory Write Enable bits
  7512                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  7513                           ;	In-Circuit Debugger Mode bit
  7514                           ;	DEBUG = 0x1, unprogrammed default
  7515                           ;	Flash Program Memory Code Protection bit
  7516                           ;	CP = OFF, Code protection off
  7517  2007                     	org	8199
  7518  2007  3F3A               	dw	16186

Data Sizes:
    Strings     39
    Constant    10
    Data        6
    BSS         70
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     12      56
    BANK3            96      0      32
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_9(CODE[3]), STR_7(CODE[3]), STR_5(CODE[3]), STR_3(CODE[3]), 
		 -> STR_2(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 32
		 -> string(BANK3[32]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_11(CODE[12]), STR_10(CODE[12]), STR_8(CODE[6]), STR_6(CODE[6]), 
		 -> STR_4(CODE[6]), string(BANK3[32]), STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _realizarCalculo->___fltol
    ___wmul->_ADC_Read
    _PWM1_Duty->_PWM_Init
    _PWM1_Duty->___fltol
    _lcd_init->_lcd_cmd
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcd_str->_lcd_dat
    _lcd_dat->_lcd_wr
    _lcd_cmd->_lcd_wr
    ___awdiv->___awmod
    _controlarValores->_controleMaximoMinimo
    _PWM2_Duty->_PWM_Init
    _PWM2_Duty->___fltol
    ___xxtofl->___wmul
    ___fltol->___wmul
    ___flmul->___wmul
    ___fldiv->___wmul
    _PWM_Init->___aldiv

Critical Paths under _main in BANK0

    _realizarCalculo->_PWM1_Duty
    _PWM1_Duty->___fltol
    _imprimirValoresLcd->_sprintf
    _controlarCooler->_PWM2_Duty
    _PWM2_Duty->___fltol
    ___xxtofl->___aldiv
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    _PWM_Init->___aldiv

Critical Paths under _main in BANK1

    _main->_controlarCooler
    _main->_realizarCalculo
    _realizarCalculo->_PWM1_Duty
    _PWM1_Duty->___fltol
    _controlarCooler->_PWM2_Duty
    _PWM2_Duty->___fltol

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   28672
                                              9 BANK1      3     3      0
                           _ADC_Init
                         _PWM1_Start
                         _PWM2_Start
                    _controlarCooler
                   _controlarValores
                 _imprimirValoresLcd
                            _lcd_cmd
                           _lcd_init
                            _lcd_str
                    _realizarCalculo
 ---------------------------------------------------------------------------------
 (1) _realizarCalculo                                      2     2      0   15137
                                              7 BANK1      2     2      0
                           _ADC_Read
                          _PWM1_Duty
                            ___awdiv
                            ___fldiv
                            ___flmul
                            ___fltol
                             ___wmul
                           ___xxtofl
               _controleMaximoMinimo
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     700
                                              5 COMMON     6     2      4
                           _ADC_Read (ARG)
 ---------------------------------------------------------------------------------
 (2) _PWM1_Duty                                            6     2      4    7580
                                             76 BANK0      4     0      4
                                              5 BANK1      2     2      0
                           _PWM_Init
                            ___aldiv
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      44
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _imprimirValoresLcd                                   5     5      0    3911
                                             13 BANK0      5     5      0
                            ___awdiv
                            ___awmod
                            _lcd_cmd
                            _lcd_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1647
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _lcd_str                                              4     2      2     970
                                              2 COMMON     4     2      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (2) _lcd_dat                                              1     1      0      44
                                              1 COMMON     1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0      44
                                              1 COMMON     1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (3) _lcd_wr                                               1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     756
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _controlarValores                                     1     1      0     448
                                              2 COMMON     1     1      0
               _controleMaximoMinimo
 ---------------------------------------------------------------------------------
 (1) _controlarCooler                                      2     2      0    8118
                                              7 BANK1      2     2      0
                           _ADC_Read
                          _PWM2_Duty
               _controleMaximoMinimo
 ---------------------------------------------------------------------------------
 (2) _controleMaximoMinimo                                 2     0      2     448
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM2_Duty                                            6     2      4    7580
                                             76 BANK0      4     0      4
                                              5 BANK1      2     2      0
                           _PWM_Init
                            ___aldiv
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     778
                                              6 BANK0     14    10      4
                            ___aldiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     533
                                             11 COMMON     2     2      0
                                             72 BANK0      4     0      4
                                              0 BANK1      5     5      0
                            ___aldiv (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2721
                                             46 BANK0     26    18      8
                          __Umul8_16
                            ___aldiv (ARG)
                            ___fldiv (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1577
                                             20 BANK0     26    18      8
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _PWM_Init                                             8     4      4     930
                                              9 COMMON     4     4      0
                                              6 BANK0      4     0      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8     756
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             5     3      2      44
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _PWM2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _PWM1_Start
   _PWM2_Start
   _controlarCooler
     _ADC_Read
     _PWM2_Duty
       _PWM_Init
         ___aldiv
       ___aldiv
       ___fldiv
         ___wmul (ARG)
           _ADC_Read (ARG)
         ___xxtofl (ARG)
           ___aldiv (ARG)
           ___wmul (ARG)
       ___flmul
         __Umul8_16
         ___aldiv (ARG)
         ___fldiv (ARG)
         ___wmul (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___aldiv (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
         ___wmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     _controleMaximoMinimo
   _controlarValores
     _controleMaximoMinimo
   _imprimirValoresLcd
     ___awdiv
       ___awmod (ARG)
     ___awmod
     _lcd_cmd
       _lcd_wr
     _lcd_str
       _lcd_dat
         _lcd_wr
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _lcd_cmd
   _lcd_init
     _lcd_cmd
   _lcd_str
   _realizarCalculo
     _ADC_Read
     _PWM1_Duty
       _PWM_Init
       ___aldiv
       ___fldiv
       ___flmul
       ___fltol
       ___xxtofl
     ___awdiv
     ___fldiv
     ___flmul
     ___fltol
     ___wmul
     ___xxtofl
     _controleMaximoMinimo

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      20       9       33.3%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      C      38       7       70.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     50      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      B6      12        0.0%
ABS                  0      0      B6       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Jul 02 19:22:29 2021

                 ___fldiv@aexp 004D                   ___fldiv@bexp 004C                              pc 0002  
                 ___fldiv@sign 0045                   ___awdiv@sign 0021                             _kd 00B0  
                           _ki 00D2                             _kp 00D4                             fsr 0004  
          ___wmul@multiplicand 0077            __Umul8_16@word_mpld 0076                            l110 0E5A  
                          l105 0E11                            l123 171A                            l115 0E74  
                          l140 1795                            l116 0E9B                            l118 0ECC  
                          l134 0285                            l223 17C9                            l224 17BF  
                          l233 16C7                            l137 0FFF                            l242 17FF  
                          l219 16DE                            l236 1702                            l239 0854  
                          l184 088B                            l192 0C2D                            l248 002D  
                          l362 1727                            l195 16E7                            l427 0AEF  
                          l515 09CB                            l188 0CE3                            l364 173F  
                          l437 0B77                            l198 16F2                            l358 0DCB  
                          l711 02E2                            l528 0962                            l713 0462  
                          l801 0097                            l634 0909                            l555 0AC4  
                          l548 0ADA                            l644 08C5                            l733 0446  
                          l558 0ADA                            l735 0456                            l727 03D4  
                          l751 07C3                            l808 00B3                            l809 00BF  
                          l770 1754                            l763 07B7                            l772 1766  
                          l757 072F                            l795 0052                            l797 00E9  
                          _RB0 0030                            _RB1 0031                            _RB2 0032  
                          _RB3 0033                            _PR2 0092                            _PID 00A2  
 __end_of_controleMaximoMinimo 171B                            fsr0 0004                            indf 0000  
                 ___awmod@sign 0076       __size_of_controlarCooler 002F                   _proporcional 00A8  
                 ___flmul@aexp 0060                   ___flmul@bexp 0061                   ___flmul@sign 005B  
                 ___flmul@temp 0066                   ___flmul@prod 0062                   ___fltol@exp1 007C  
                         l2000 0308                           l2010 0333                           l2020 0358  
                         l2012 033B                           l2004 0311                           l2100 0475  
                         l2030 0383                           l2022 0359                           l2014 033D  
                         l2006 0323                           l2110 0491                           l2102 047A  
                         l2040 03A0                           l2016 0342                           l2024 0362  
                         l2032 0387                           l2008 032B                           l2200 0734  
                         l2120 04A6                           l2112 0496                           l2104 047F  
                         l2050 03B8                           l2042 03A4                           l2034 038D  
                         l2026 0374                           l2018 0354                           l2202 0739  
                         l2210 076A                           l2130 04C2                           l2122 04AB  
                         l2114 049C                           l2106 0487                           l2060 03D9  
                         l2052 03B9                           l2044 03A5                           l2036 0395  
                         l2028 0375                           l2220 079D                           l2212 0777  
                         l2204 0747                           l2140 04ED                           l2132 04C7  
                         l2124 04B3                           l2116 04A0                           l2108 0489  
                         l2300 0005                           l2062 03DE                           l2070 040F  
                         l2054 03BD                           l2046 03AE                           l2038 0397  
                         l2222 07AB                           l2214 0782                           l2206 074B  
                         l2150 058A                           l2142 050A                           l2126 04B5  
                         l2118 04A1                           l2302 0016                           l2310 0CF2  
                         l2080 0445                           l2072 041C                           l2064 03EC  
                         l2056 03D1                           l2048 03B4                           l2224 07AF  
                         l2216 0791                           l2208 0764                           l2160 05ED  
                         l2152 0593                           l2144 0526                           l2136 04D0  
                         l2128 04BD                           l2240 005A                           l2232 0031  
                         l2400 0B90                           l2304 001A                           l2320 0D1C  
                         l2312 0CF9                           l2082 044C                           l2074 042A  
                         l2066 03F0                           l2226 07B0                           l2218 079B  
                         l2170 068D                           l2162 0606                           l2154 05A3  
                         l2146 0552                           l2138 04E0                           l2250 007C  
                         l2234 0036                           l2402 0C14                           l2330 0D35  
                         l2322 0D24                           l2314 0CFE                           l2306 0CE7  
                         l2410 171D                           l2084 0450                           l2076 0439  
                         l2068 0409                           l2228 07BB                           l2180 06FB  
                         l2172 06B3                           l2164 0623                           l2156 05C0  
                         l2148 056E                           l2092 0463                           l2260 00AD  
                         l2252 0080                           l2244 0063                           l2236 003A  
                         l2404 0C15                           l2500 095E                           l2340 0D53  
                         l2324 0D28                           l2308 0CEC                           l2412 1721  
                         l2086 0452                           l2078 043D                           l2190 0713  
                         l2182 06FF                           l2174 06DB                           l2166 0650  
                         l2158 05D0                           l2094 046A                           l2270 00E0  
                         l2262 00B7                           l2254 008E                           l2246 0068  
                         l2238 004A                           l2406 0C1F                           l2510 0DDE  
                         l2430 0971                           l2422 0963                           l2350 0D73  
                         l2342 0D5D                           l2326 0D2C                           l2318 0CFF  
                         l2414 172E                           l1800 0ADB                           l2192 0714  
                         l2184 0700                           l2176 06E4                           l2168 0660  
                         l2096 0470                           l2272 00E1                           l2264 00C1  
                         l2256 009E                           l2248 0075                           l2280 1709  
                         l2520 0DFE                           l2512 0DE4                           l2504 0DCC  
                         l2440 0986                           l2432 0975                           l2424 0966  
                         l2352 0DA1                           l2344 0D63                           l2336 0D37  
                         l2328 0D30                           l2360 0DC7                           l2600 01B3  
                         l2416 1735                           l2408 171B                           l2370 179D  
                         l1810 0B02                           l1802 0ADE                           l2194 0718  
                         l2186 0709                           l2178 06F2                           l2098 0474  
                         l2266 00D7                           l2258 00A9                           l2282 1716  
                         l2530 0E22                           l2522 0E04                           l2514 0DEA  
                         l2506 0DD4                           l2450 09A9                           l2442 0989  
                         l2434 097A                           l2426 096A                           l2290 16F7  
                         l2354 0DA8                           l2346 0D6A                           l2602 01BD  
                         l2610 01F9                           l2418 173B                           l2380 17C3  
                         l1820 0B26                           l1812 0B0A                           l1804 0AE2  
                         l2196 072C                           l2188 070F                           l1900 0ACE  
                         l2268 00DC                           l2284 171A                           l2276 1703  
                         l2540 0E40                           l2532 0E27                           l2524 0E0B  
                         l2516 0DF1                           l2508 0DD9                           l2460 09C2  
                         l2452 09AF                           l2444 0990                           l2436 097E  
                         l2428 096F                           l2292 16FD                           l2356 0DAC  
                         l2348 0D6E                           l2612 0203                           l2620 023F  
                         l2604 01C3                           l2700 0A32                           l2374 17A0  
                         l1830 0B59                           l1822 0B2F                           l1814 0B12  
                         l1806 0AF3                           l2278 1707                           l2550 0E66  
                         l2542 0E47                           l2534 0E2D                           l2526 0E15  
                         l2518 0DF7                           l2462 09C7                           l2454 09B0  
                         l2446 0994                           l2438 0980                           l2470 090F  
                         l2294 1700                           l1910 08D8                           l1902 08C6  
                         l2358 0DB5                           l2622 0249                           l2614 0209  
                         l2606 01CC                           l2390 0CCA                           l2630 0ECD  
                         l2702 0A37                           l2376 17B3                           l2368 1797  
                         l1824 0B41                           l1816 0B15                           l1832 0B5F  
                         l1808 0AFE                           l1840 1741                           l2560 0E85  
                         l2552 0E6B                           l2544 0E4D                           l2536 0E33  
                         l2528 0E1D                           l2456 09B7                           l2448 0998  
                         l2480 0925                           l2472 0914                           l2296 1701  
                         l2288 16F4                           l1920 08F8                           l1912 08DC  
                         l1904 08C8                           l2624 024F                           l2616 0212  
                         l2608 01F3                           l2392 0CCB                           l2384 0C2E  
                         l2640 0FDD                           l2632 0F21                           l2650 16D6  
                         l2378 17BC                           l1834 0B64                           l1826 0B4F  
                         l1818 0B22                           l1850 1762                           l1842 1743  
                         l2570 0EAE                           l2562 0E8A                           l2554 0E70  
                         l2546 0E54                           l2538 0E3A                           l2458 09BD  
                         l2490 0941                           l2482 0928                           l2474 0916  
                         l2466 090A                           l2298 0003                           l1922 08FF  
                         l1914 08E0                           l1906 08CE                           l1930 0892  
                         l2626 0258                           l2618 0239                           l2394 0CD5  
                         l2386 0C3B                           l2642 0FEC                           l2634 0F73  
                         l2652 16DF                           l1836 0B6F                           l1828 0B50  
                         l1844 174A                           l2396 0B78                           l2644 1767  
                         l2572 0EBD                           l2564 0E90                           l2556 0E78  
                         l2548 0E5E                           l2492 0947                           l2484 092F  
                         l2476 091A                           l2468 090B                           l1860 084F  
                         l1916 08F1                           l1908 08D1                           l1924 0905  
                         l1940 08AE                           l1932 0895                           l2724 0D11  
                         l2628 027F                           l2580 0101                           l2388 0C46  
                         l2636 0FC9                           l2660 09CC                           l2654 16E8  
                         l1854 0855                           l1950 0286                           l1846 174E  
                         l2398 0B85                           l2646 1773                           l2566 0E97  
                         l2558 0E80                           l2494 094E                           l2486 0933  
                         l2478 091F                           l1862 0852                           l1918 08F7  
                         l1942 08B4                           l1934 089C                           l2590 0125  
                         l2582 0107                           l2574 00EA                           l2638 0FCD  
                         l2670 09D7                           l2662 09D2                           l1960 029D  
                         l1952 028D                           l1848 175D                           l1880 0A8B  
                         l1872 0A59                           l2648 1782                           l2568 0E9F  
                         l2488 0937                           l2496 0954                           l1864 0853  
                         l1856 0846                           l1944 08BB                           l1936 08A0  
                         l1928 088C                           l2592 0131                           l2584 0110  
                         l2576 00F2                           l2656 17CA                           l2680 09EC  
                         l2672 09D9                           l2664 09D3                           l1970 02B5  
                         l1962 02A2                           l1954 0293                           l1882 0A8F  
                         l1890 0AAC                           l1874 0A7E                           l1866 0A40  
                         l2498 0959                           l1858 0849                           l1938 08A4  
                         l1946 08C1                           l2594 016C                           l2586 0116  
                         l2578 00F8                           l2658 17CF                           l2690 0A0F  
                         l2682 09F1                           l2674 09DD                           l2666 09D4  
                         l1980 02CA                           l1972 02BA                           l1964 02AA  
                         l1956 0297                           l1876 0A81                           l1868 0A4F  
                         l2596 0175                           l2588 011F                           l2692 0A14  
                         l2684 09F7                           l2676 09E2                           l2668 09D5  
                         l1990 02EA                           l1982 02CF                           l1974 02C0  
                         l1966 02AB                           l1958 0298                           l1878 0A89  
                         l1798 16C3                           l2598 01AD                           l2694 0A22  
                         l2686 0A00                           l2678 09E7                           l1992 02F6  
                         l1984 02D7                           l1976 02C4                           l1968 02AD  
                         l1896 0AB3                           l1888 0A97                           l2696 0A2B  
                         l2688 0A06                           l1994 02FA                           l1986 02D8  
                         l1978 02C5                           l1898 0AC9                           l2698 0A2D  
                         l1988 02DA                           l1998 0303                           STR_1 0838  
                         STR_2 083E                           STR_3 083E                           STR_4 0832  
                         STR_5 083E                           STR_6 0832                           STR_7 083E  
                         STR_8 0832                           STR_9 083E                           u2010 1762  
                         u2011 1761                           u2020 0865                           u2100 0AB2  
                         u2005 1755                           u2101 0AB1                           u2030 086E  
                         u2120 0AC9                           u2040 0A4F                           u2200 0905  
                         u2025 0860                           u2121 0AC8                           u2041 0A4E  
                         u2201 0904                           u2130 0ACE                           u2050 0A77  
                         u3010 00AD                           u2210 0892                           u2035 0869  
                         u2131 0ACD                           u2115 0AB7                           u3011 00AC  
                         u2211 0891                           u2300 02C4                           u2060 0A8F  
                         u3020 00B3                           u2140 08CE                           u3100 0CF2  
                         u2301 02C3                           u2061 0A8E                           u3021 00B2  
                         u3005 00A2                           u2141 08CD                           u3101 0CF1  
                         u2310 02CA                           u2070 0A96                           u3030 00B7  
                         u2230 08A4                           u3110 0D2C                           u2311 02C9  
                         u2071 0A95                           u2055 0A72                           u3031 00B6  
                         u2231 08A3                           u3111 0D2B                           u2400 0374  
                         u2320 02CF                           u3040 00CC                           u2160 08E0  
                         u2240 08AE                           u3120 0D52                           u3200 0C46  
                         u2401 0373                           u2321 02CE                           u2161 08DF  
                         u2241 08AD                           u2225 0896                           u3121 0D51  
                         u3201 0C45                           u2410 038D                           u2330 02EA  
                         u2090 0AAB                           u3050 00DC                           u3130 0D5D  
                         u3210 0CD2                           u2411 038C                           u2331 02E9  
                         u2091 0AAA                           u3051 00DB                           u2155 08D2  
                         u3131 0D5C                           u3211 0CCE                           u2500 03DE  
                         u2420 0395                           u2340 0308                           u3060 00E0  
                         u2180 08F1                           u2260 08C1                           u3140 0D63  
                         u2501 03DD                           u2421 0394                           u2405 0370  
                         u2341 0307                           u2085 0A98                           u3061 00DF  
                         u3045 00C7                           u2181 08F0                           u2261 08C0  
                         u2245 08AA                           u3141 0D62                           u3125 0D4E  
                         u2510 03F0                           u2350 0342                           u2270 0297  
                         u3070 1707                           u3150 0DB5                           u3310 173B  
                         u2511 03EF                           u2351 0341                           u2271 0296  
                         u3071 1706                           u2175 08E1                           u2255 08B5  
                         u3151 0DB4                           u3311 173A                           u2520 03FF  
                         u2440 03A4                           u2280 029D                           u2600 04A6  
                         u3240 0B90                           u3080 1716                           u3400 09BD  
                         u3320 096A                           u3160 0DC7                           u3224 0CD5  
                         u2441 03A3                           u2281 029C                           u2601 04A5  
                         u3241 0B8F                           u3081 1715                           u3401 09BC  
                         u3321 0969                           u2185 08ED                           u3161 0DC6  
                         u3305 172F                           u3170 179D                           u2530 041C  
                         u2290 02A2                           u2610 04AB                           u3250 0C1C  
                         u3410 09C2                           u3330 0975                           u3090 002D  
                         u3171 179C                           u2531 041B                           u2435 0399  
                         u2291 02A1                           u2611 04AA                           u3251 0C18  
                         u3411 09C1                           u3331 0974                           u3091 002C  
                         u2195 08F9                           u3235 0CDA                           u1900 0AF3  
                         u2540 0439                           u2460 03B8                           u2380 0358  
                         u2620 04C2                           u3340 0986                           u3500 0959  
                         u3420 090F                           u1901 0AF2                           u2541 0438  
                         u2525 03FA                           u2461 03B7                           u2381 0357  
                         u2365 0344                           u2701 05DF                           u2621 04C1  
                         u3085 1712                           u3341 0985                           u3501 0958  
                         u3421 090E                           u3190 17C3                           u1910 0B12  
                         u2550 0450                           u2470 03BD                           u2702 05E6  
                         u2630 04C7                           u3510 0DD9                           u3430 091A  
                         u3191 17C2                           u1911 0B11                           u2551 044F  
                         u2535 0418                           u2471 03BC                           u2455 03A7  
                         u2375 034D                           u2703 05ED                           u2631 04C6  
                         u3511 0DD8                           u3431 0919                           u2480 03D1  
                         u2560 0474                           u3264 0C1F                           u3600 0E3A  
                         u3520 0DDE                           u3360 0998                           u3440 0925  
                         u3280 1721                           u3185 17A9                           u2545 0435  
                         u2481 03D0                           u2721 0615                           u2641 0518  
                         u2561 0473                           u3601 0E39                           u3521 0DDD  
                         u3361 0997                           u3441 0924                           u3281 1720  
                         u1930 0B26                           u2490 03D8                           u2810 06FF  
                         u2722 061C                           u2642 051F                           u2570 047A  
                         u3610 0E47                           u3530 0DE4                           u1931 0B25  
                         u2491 03D7                           u2395 035B                           u2811 06FE  
                         u2731 0642                           u2723 0623                           u2715 05EF  
                         u2651 0534                           u2643 0526                           u2571 0479  
                         u3275 0C24                           u3611 0E46                           u3531 0DE3  
                         u3355 098A                           u2900 0777                           u2732 0649  
                         u2652 053B                           u2580 047F                           u3620 0E54  
                         u3540 0DF1                           u3380 09A9                           u3460 0937  
                         u3700 0110                           u1925 0B17                           u2901 0776  
                         u2805 06F4                           u2741 066F                           u2733 0650  
                         u2661 0560                           u2653 0542                           u2581 047E  
                         u3621 0E53                           u3541 0DF0                           u3381 09A8  
                         u3461 0936                           u3701 010F                           u1950 0B41  
                         u2910 0791                           u2830 0713                           u2750 0699  
                         u2742 0676                           u2662 0567                           u2590 04A0  
                         u3630 0E6B                           u3550 0DFE                           u3470 0941  
                         u3710 011F                           u1951 0B40                           u2911 0790  
                         u2831 0712                           u2743 067D                           u2671 057C  
                         u2663 056E                           u2591 049F                           u3631 0E6A  
                         u3551 0DFD                           u3375 0999                           u3471 0940  
                         u3455 0929                           u3711 011E                           u3295 1728  
                         u2920 07AF                           u2840 0718                           u2672 0583  
                         u3640 0E70                           u3560 0E0B                           u3720 0131  
                         u1945 0B28                           u2921 07AE                           u2905 0773  
                         u2841 0717                           u2825 0702                           u2761 06A5  
                         u2673 058A                           u3641 0E6F                           u3561 0E0A  
                         u3385 09A5                           u3721 0130                           u1970 0B5F  
                         u1890 0AE2                           u2850 072C                           u2770 06C1  
                         u2762 06AC                           u2930 0036                           u3650 0E85  
                         u3570 0E22                           u3490 0954                           u3730 01BD  
                         u1971 0B5E                           u1955 0B3D                           u1891 0AE1  
                         u2915 078D                           u2851 072B                           u2763 06B3  
                         u2755 0694                           u2691 05B2                           u2931 0035  
                         u3651 0E84                           u3571 0E21                           u3395 09B1  
                         u3491 0953                           u3475 093D                           u3731 01BC  
                         u1980 0B64                           u2860 0733                           u2692 05B9  
                         u2940 003A                           u3660 0E8A                           u3580 0E27  
                         u3740 0203                           u1981 0B63                           u1965 0B51  
                         u2861 0732                           u2781 06CD                           u2693 05C0  
                         u2685 058C                           u2941 0039                           u3661 0E89  
                         u3581 0E26                           u3485 0948                           u3741 0202  
                         u3725 012D                           u1990 174E                           u2870 0739  
                         u2782 06D4                           u2950 005A                           u3670 0E97  
                         u3590 0E2D                           u3750 0249                           u1991 174D  
                         u2871 0738                           u2783 06DB                           u2775 06BC  
                         u2951 0059                           u3671 0E96                           u3591 0E2C  
                         u3751 0248                           u3735 01B9                           u2880 074B  
                         u3680 00F2                           u3760 0A2B                           u2881 074A  
                         u3745 01FF                           u3681 00F1                           u3761 0A2A  
                         u2890 075A                           u2970 007B                           u3690 0101  
                         u2795 06DD                           u2971 007A                           u3755 0245  
                         u3691 0100                           u2965 006D                           u2990 009D  
                         u2895 0755                           u2991 009C                           u3777 17B7  
                         u2985 008F                           _TMR0 0001                           _main 09CC  
                         _erro 00B2                           _menu 00B8                           btemp 007E  
             __end_of_ADC_Init 16DF               __end_of_ADC_Read 17CA                           start 0000  
              ___fldiv@new_exp 0046                  ___fltol@sign1 007B                __end_of___aldiv 0B78  
                        ?_main 0070                          _CCP1X 00BD                __end_of___fldiv 0463  
                        _CCP1Y 00BC                          _CCP2X 00ED                          _CCP2Y 00EC  
              __end_of___awdiv 09CC                          STR_10 0826                          STR_11 081A  
              __end_of___awmod 0963                __end_of___flmul 07C4                __end_of___fltol 0ADB  
              ___awdiv@divisor 0077                __end_of___lwdiv 090A                __end_of___lwmod 08C6  
              ___awdiv@counter 0020                          _PORTD 0008                          _TRISA 0085  
                        _TRISB 0086                          _TRISC 0087                          _TRISD 0088  
                        _TRISE 0089       __end_of_controlarValores 0ECD                __end_of_lcd_dat 0855  
              __end_of_lcd_cmd 1703                __end_of_lcd_str 002E             __size_of_PWM1_Duty 00B6  
                  ?_PWM1_Start 0070             __size_of_PWM2_Duty 00B6                    ?_PWM2_Start 0070  
              __end_of_dpowers 081A                          pclath 000A               __end_of_PWM_Init 088C  
                        status 0003                          wtemp0 007E                __end_of_sprintf 0DCC  
             ?_realizarCalculo 0070                __initialization 07C4                   __end_of_main 0A40  
                       ??_main 00CF             _setPointReferencia 00B4                         _ADCON0 001F  
                       _ADCON1 009F                         _CCP1M2 00BA                         _CCP1M3 00BB  
                       _CCP2M2 00EA                         _CCP2M3 00EB                         _ADRESH 001E  
                       _ADRESL 009E                         _CCPR1L 0015                         _CCPR2L 001B  
             ___awdiv@dividend 0079                         _INTCON 000B              ??_controlarCooler 007D  
                       _TMR2ON 0092                         _TRISC1 0439                         _TRISC2 043A  
             __end_of___xxtofl 00EA           _controleMaximoMinimo 1703               __end_of_lcd_init 1800  
            __end_of_PWM1_Duty 0CE4              __end_of_PWM2_Duty 0C2E                      ??___aldiv 0078  
   __end_of_imprimirValoresLcd 0286                         ___wmul 171B                      ??___fldiv 003C  
                    ??___awdiv 007B            __size_of_PWM1_Start 0009                      ??___awmod 0074  
                    ??___flmul 0056                      ??___fltol 00C6            __size_of_PWM2_Start 000B  
                    ??___lwdiv 0074                      ??___lwmod 007C                         _lcd_wr 16C2  
              ADC_Read@channel 0074               ___awdiv@quotient 0022                ___awmod@divisor 0070  
              ___awmod@counter 0075                      ??_lcd_dat 0071                      ??_lcd_cmd 0071  
                       _string 0190                      ??_lcd_str 0074             __size_of__Umul8_16 0027  
                 PWM_Init@freq 0026                      ?_ADC_Init 0070                      ?_ADC_Read 0070  
                    ??_sprintf 0023                   ___xxtofl@arg 0030                   ___xxtofl@exp 002F  
                 ___xxtofl@val 0026        __end_of__initialization 07FC                     ___fltol@f1 0068  
        ?_controleMaximoMinimo 0070                 __pcstackCOMMON 0070                   __pidataBANK1 16C8  
                    ?_PWM_Init 0026                     ??_ADC_Init 0070                     ??_ADC_Read 0072  
                 _kdReferencia 00AA                     __pbssBANK1 00A0                     __pbssBANK3 0190  
            __end_of__Umul8_16 1767                     __pmaintext 09CC                        ?___wmul 0075  
                      ?_lcd_wr 0070                     _derivativo 00A4                     ??_PWM_Init 0079  
                      _T2CKPS0 0090                        _T2CKPS1 0091                      ?___xxtofl 0026  
                 ??_PWM1_Start 0070              ?_controlarValores 0070                   ??_PWM2_Start 0070  
                    ?_lcd_init 0070             ??_controlarValores 0072                     __stringtab 0800  
       ??_controleMaximoMinimo 0072                   _kiReferencia 00AC                        ___aldiv 0ADB  
                      ___fldiv 0286                        ___awdiv 0963                        ___awmod 090A  
                      ___flmul 0463                        ___fltol 0A40                __size_of___wmul 0025  
                      ___lwdiv 08C6                        ___lwmod 088C             __end_of_PWM1_Start 16E8  
           __end_of_PWM2_Start 16F3                __size_of_lcd_wr 0006                        __ptext1 0ECD  
                      __ptext2 171B                        __ptext3 0C2E                        __ptext4 17CA  
                      __ptext5 00EA                        __ptext6 0CE4                        __ptext7 088C  
                      __ptext8 08C6                        __ptext9 0003                        _lcd_dat 0845  
                      _lcd_cmd 16F3                        _lcd_str 0003                        _dpowers 0810  
              _controlarCooler 1767                     ??___xxtofl 002A               ___awmod@dividend 0072  
                      _estouro 00A0               ___aldiv@dividend 0074                        _sprintf 0CE4  
                      clrloop0 16CF                     ??_lcd_init 0072           end_of_initialization 07FC  
    imprimirValoresLcd@centena 0030               ___aldiv@quotient 0022       __size_of_realizarCalculo 0133  
                    _PWM1_Duty 0C2E                      _PWM2_Duty 0B78                      _PORTEbits 0009  
                ___xxtofl@sign 002E      controleMaximoMinimo@valor 0070             _imprimirValoresLcd 00EA  
                   lcd_dat@val 0071                     lcd_cmd@val 0071                    ___fldiv@grs 0048  
                  ___fldiv@rem 0041                _setPointCalculo 00B6              __size_of_ADC_Init 0009  
            __size_of_ADC_Read 0034                   _kpReferencia 00AE            ?_imprimirValoresLcd 0070  
                  ___flmul@grs 005C                     lcd_str@str 0072        __end_of_controlarCooler 1796  
               __end_of___wmul 1740           ??_imprimirValoresLcd 002D                     ?_PWM1_Duty 006C  
                   ?_PWM2_Duty 006C                 __end_of_lcd_wr 16C8              __size_of_PWM_Init 0037  
          start_initialization 07C4          controlarCooler@cooler 00CD                       ??___wmul 0079  
                    __Umul8_16 1740                       ??_lcd_wr 0070                    __pdataBANK1 00D2  
                    ___fldiv@a 0034                      ___fldiv@b 0038                      ___flmul@a 0052  
                    ___flmul@b 004E                      ___latbits 0002                  __pcstackBANK0 0020  
                __pcstackBANK1 00C6              ??_realizarCalculo 00CD              __size_of___xxtofl 00BC  
            __size_of_lcd_init 0036                    sprintf@flag 0027                    sprintf@prec 0028  
             ___lwdiv@dividend 0072      __size_of_controlarValores 0101          _temperaturaReferencia 00BA  
                     ?___aldiv 0070                       ?___fldiv 0034                       ?___awdiv 0077  
                     ?___awmod 0070                       ?___flmul 004E                       ?___fltol 0068  
                   ?__Umul8_16 0070                       ?___lwdiv 0070                       ?___lwmod 0078  
             ?_controlarCooler 0070                    ??_PWM1_Duty 00CB                    ??_PWM2_Duty 00CB  
                    __pstrings 0800                       ?_lcd_dat 0070                       ?_lcd_cmd 0070  
                     ?_lcd_str 0072                       _ADC_Init 16D6                       _ADC_Read 1796  
             ___lwdiv@quotient 0075                       ?_sprintf 0020                ___aldiv@divisor 0070  
              ___aldiv@counter 0020                 ___wmul@product 0079                      clear_ram0 16CE  
__size_of_controleMaximoMinimo 0018                  PWM1_Duty@freq 006E                  PWM1_Duty@duty 006C  
                     _GO_nDONE 00FA                  PWM2_Duty@freq 006E                  PWM2_Duty@duty 006C  
      controlarValores@S1Atual 00C4        controlarValores@S2Atual 00C2        controlarValores@S3Atual 00C0  
      controlarValores@S4Atual 00BE                    __stringbase 080F                       _PWM_Init 0855  
            ___wmul@multiplier 0075                      lcd_wr@val 0070     controlarValores@S1Anterior 00C5  
   controlarValores@S2Anterior 00C3     controlarValores@S3Anterior 00C1     controlarValores@S4Anterior 00BF  
                  ??__Umul8_16 0072               __size_of___aldiv 009D               __size_of___fldiv 01DD  
             __size_of___awdiv 0069               __size_of___awmod 0059               __size_of___flmul 0361  
             __size_of___fltol 009B               __size_of___lwdiv 0044               __size_of___lwmod 003A  
           __end_of__stringtab 0810               __size_of_lcd_dat 0010               __size_of_lcd_cmd 0010  
             __size_of_lcd_str 002B                     sprintf@val 0029                       ___xxtofl 002E  
              ___lwdiv@divisor 0070                ___lwdiv@counter 0077                       __ptext10 0845  
                     __ptext11 16F3                       __ptext20 0A40                       __ptext12 16C2  
                     __ptext21 0463                       __ptext13 090A                       __ptext22 1740  
                     __ptext14 0963                       __ptext23 0286                       __ptext15 0DCC  
                     __ptext24 0855                       __ptext16 1767                       __ptext25 0ADB  
                     __ptext17 1703                       __ptext26 1796                       __ptext18 0B78  
                     __ptext27 16E8                       __ptext19 002E                       __ptext28 16DF  
                     __ptext29 16D6                       _lcd_init 17CA               __size_of_sprintf 00E8  
                __size_of_main 0074                       _integral 00A6                       _setPoint 00D6  
             _controlarValores 0DCC                _realizarCalculo 0ECD                       lcd_str@i 0075  
  __size_of_imprimirValoresLcd 019C                     _INTCONbits 000B                      sprintf@ap 0026  
                    sprintf@sp 002B               ___lwmod@dividend 007A                      stringcode 080A  
     imprimirValoresLcd@milhar 002E         __Umul8_16@multiplicand 0070                     _OPTION_REG 0081  
                  _temperatura 00BC                       sprintf@c 002C                       sprintf@f 0020  
              ___lwmod@divisor 0078                ___lwmod@counter 007D                       stringdir 080A  
                     stringtab 0800                   ___aldiv@sign 0021                     _PWM1_Start 16DF  
                   _PWM2_Start 16E8           __Umul8_16@multiplier 0078        __end_of_realizarCalculo 1000  
            __Umul8_16@product 0074  
